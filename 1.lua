--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.9) ~  Much Love, Ferib 

]]--

local v0 = tonumber;
local v1 = string['byte'];
local v2 = string['char'];
local v3 = string['sub'];
local v4 = string['gsub'];
local v5 = string['rep'];
local v6 = table['concat'];
local v7 = table['insert'];
local v8 = math['ldexp'];
local v9 = getfenv or function()
	return _ENV;
end;
local v10 = setmetatable;
local v11 = pcall;
local v12 = select;
local v13 = unpack or table['unpack'];
local v14 = tonumber;
local function v15(v16, v17, ...)
	local v18 = 1;
	local v19;
	v16 = v4(v3(v16, 5), "..", function(v30)
		if (v1(v30, 2) == 81) then
			v19 = v0(v3(v30, 1, 1));
			return "";
		else
			local v83 = v2(v0(v30, 16));
			if v19 then
				local v89 = v5(v83, v19);
				v19 = nil;
				return v89;
			else
				return v83;
			end
		end
	end);
	local function v20(v31, v32, v33)
		if v33 then
			local v84 = (v31 / ((5 - 3) ^ (v32 - (2 - 1)))) % (((880 - (282 + 595)) - 1) ^ (((v33 - (2 - 1)) - (v32 - (620 - (555 + (1701 - (1523 + 114)))))) + (932 - (857 + 74))));
			return v84 - (v84 % 1);
		else
			local v85 = (570 - (367 + 201)) ^ (v32 - (928 - (193 + 21 + 713)));
			return (((v31 % (v85 + v85)) >= v85) and (1 + 0)) or (0 + 0);
		end
	end
	local function v21()
		local v34 = 0 - (117 - (32 + 85));
		local v35;
		while true do
			if (v34 == (1066 - (68 + 997))) then
				return v35;
			end
			if (v34 == (1270 - (226 + 1024 + 20))) then
				v35 = v1(v16, v18, v18);
				v18 = v18 + (4 - 3);
				v34 = 1;
			end
		end
	end
	local function v22()
		local v36 = 0 + 0;
		local v37;
		local v38;
		while true do
			if (v36 == (350 - (87 + 263))) then
				v37, v38 = v1(v16, v18, v18 + (959 - (892 + 65)));
				v18 = v18 + 2;
				v36 = 1 + (0 - 0);
			end
			if (v36 == (2 - 1)) then
				return (v38 * (472 - 216)) + v37;
			end
		end
	end
	local function v23()
		local v39, v40, v41, v42 = v1(v16, v18, v18 + 3);
		v18 = v18 + (956 - (802 + 150));
		return (v42 * 16777216) + (v41 * (176444 - 110908)) + (v40 * (464 - 208)) + v39;
	end
	local function v24()
		local v43 = 0 + 0;
		local v44;
		local v45;
		local v46;
		local v47;
		local v48;
		local v49;
		while true do
			if (v43 == (999 - (915 + 82))) then
				v48 = v20(v45, 59 - 38, 19 + (49 - 37));
				v49 = ((v20(v45, 41 - 9) == ((698 + 490) - (1069 + 118))) and -(3 - 2)) or (3 - 2);
				v43 = 3;
			end
			if (v43 == (0 - 0)) then
				v44 = v23();
				v45 = v23();
				v43 = 1 - 0;
			end
			if (v43 == (1 + 2)) then
				if (v48 == (0 - 0)) then
					if (v47 == (0 + 0)) then
						return v49 * (791 - (368 + 423));
					else
						v48 = 3 - 2;
						v46 = 18 - (10 + 8);
					end
				elseif (v48 == (7874 - 5827)) then
					return ((v47 == (442 - (416 + 26))) and (v49 * ((3 - 2) / (0 + 0)))) or (v49 * NaN);
				end
				return v8(v49, v48 - (1809 - 786)) * (v46 + (v47 / ((440 - (145 + 293)) ^ (482 - (44 + 386)))));
			end
			if ((1487 - (998 + (1347 - (814 + 45)))) == v43) then
				v46 = 1;
				v47 = (v20(v45, 1 + 0, 17 + 3) * ((774 - (201 + 571)) ^ (1170 - ((285 - 169) + 1022)))) + v44;
				v43 = 2;
			end
		end
	end
	local function v25(v50)
		local v51 = (1913 - (1789 + 124)) + 0;
		local v52;
		local v53;
		while true do
			if (v51 == 0) then
				v52 = nil;
				if not v50 then
					local v96 = 0 + 0;
					while true do
						if (v96 == (885 - (261 + 624))) then
							v50 = v23();
							if (v50 == (0 - (766 - (745 + 21)))) then
								return "";
							end
							break;
						end
					end
				end
				v51 = 1081 - (1020 + 60);
			end
			if (1 == v51) then
				v52 = v3(v16, v18, (v18 + v50) - (1424 - (630 + 793)));
				v18 = v18 + v50;
				v51 = (3 + 3) - 4;
			end
			if (v51 == (9 - (19 - 12))) then
				v53 = {};
				for v90 = 1 + 0, #v52 do
					v53[v90] = v2(v1(v3(v52, v90, v90)));
				end
				v51 = 9 - 6;
			end
			if ((1750 - (760 + 987)) == v51) then
				return v6(v53);
			end
		end
	end
	local v26 = v23;
	local function v27(...)
		return {...}, v12("#", ...);
	end
	local function v28()
		local v54 = (function()
			return 0 + 0;
		end)();
		local v55 = (function()
			return;
		end)();
		local v56 = (function()
			return;
		end)();
		local v57 = (function()
			return;
		end)();
		local v58 = (function()
			return;
		end)();
		local v59 = (function()
			return;
		end)();
		local v60 = (function()
			return;
		end)();
		local v61 = (function()
			return;
		end)();
		while true do
			local v68 = (function()
				return 0;
			end)();
			while true do
				if (v68 == (2 - 1)) then
					if (v54 == (0 + 0)) then
						local v97 = (function()
							return 1024 - (706 + 318);
						end)();
						local v98 = (function()
							return;
						end)();
						while true do
							if (v97 ~= (1251 - (721 + 530))) then
							else
								v98 = (function()
									return 0;
								end)();
								while true do
									if (v98 ~= 2) then
									else
										v54 = (function()
											return 1272 - (945 + 326);
										end)();
										break;
									end
									if (v98 ~= (0 - 0)) then
									else
										v55 = (function()
											return function(v118, v119, v120)
												local v121 = (function()
													return 0;
												end)();
												local v122 = (function()
													return;
												end)();
												while true do
													if (v121 ~= 0) then
													else
														v122 = (function()
															return 0 + 0;
														end)();
														while true do
															if (v122 ~= 0) then
															else
																v118[v119 - #"]"] = (function()
																	return v120();
																end)();
																return v118, v119, v120;
															end
														end
														break;
													end
												end
											end;
										end)();
										v56 = (function()
											return {};
										end)();
										v98 = (function()
											return 1;
										end)();
									end
									if (v98 == (701 - (271 + 429))) then
										v57 = (function()
											return {};
										end)();
										v58 = (function()
											return {};
										end)();
										v98 = (function()
											return 2;
										end)();
									end
								end
								break;
							end
						end
					end
					break;
				end
				if (v68 ~= (0 + 0)) then
				else
					if (v54 ~= 1) then
					else
						local v99 = (function()
							return 1500 - (1408 + 92);
						end)();
						while true do
							if (v99 ~= 1) then
							else
								v61 = (function()
									return {};
								end)();
								for v109 = #"<", v60 do
									local v110 = (function()
										return 0;
									end)();
									local v111 = (function()
										return;
									end)();
									local v112 = (function()
										return;
									end)();
									local v113 = (function()
										return;
									end)();
									while true do
										if (v110 ~= (1087 - (461 + 625))) then
										else
											v113 = (function()
												return nil;
											end)();
											while true do
												if (v111 ~= (1288 - (993 + 295))) then
												else
													local v130 = (function()
														return 0 + 0;
													end)();
													while true do
														if (v130 == 1) then
															v111 = (function()
																return 1172 - (418 + 753);
															end)();
															break;
														end
														if (v130 == (0 + 0)) then
															v112 = (function()
																return v21();
															end)();
															v113 = (function()
																return nil;
															end)();
															v130 = (function()
																return 1 + 0;
															end)();
														end
													end
												end
												if (v111 == 1) then
													if (v112 == #"|") then
														v113 = (function()
															return v21() ~= 0;
														end)();
													elseif (v112 == 2) then
														v113 = (function()
															return v24();
														end)();
													elseif (v112 ~= #"xxx") then
													else
														v113 = (function()
															return v25();
														end)();
													end
													v61[v109] = (function()
														return v113;
													end)();
													break;
												end
											end
											break;
										end
										if ((0 + 0) == v110) then
											local v117 = (function()
												return 0 + 0;
											end)();
											while true do
												if ((530 - (406 + 123)) == v117) then
													v110 = (function()
														return 1;
													end)();
													break;
												end
												if (v117 == (1769 - (1749 + 20))) then
													v111 = (function()
														return 0;
													end)();
													v112 = (function()
														return nil;
													end)();
													v117 = (function()
														return 1 + 0;
													end)();
												end
											end
										end
									end
								end
								v99 = (function()
									return 1324 - (1249 + 73);
								end)();
							end
							if (v99 == (0 + 0)) then
								v59 = (function()
									return {v56,v57,nil,v58};
								end)();
								v60 = (function()
									return v23();
								end)();
								v99 = (function()
									return 2 - 1;
								end)();
							end
							if (v99 ~= (5 - 3)) then
							else
								v54 = (function()
									return 1902 - (106 + 1794);
								end)();
								break;
							end
						end
					end
					if (v54 == 2) then
						v59[#"gha"] = (function()
							return v21();
						end)();
						for v101 = #":", v23() do
							local v102 = (function()
								return v21();
							end)();
							if (v20(v102, #"<", #":") ~= (0 + 0)) then
							else
								local v104 = (function()
									return 0 + 0;
								end)();
								local v105 = (function()
									return;
								end)();
								local v106 = (function()
									return;
								end)();
								local v107 = (function()
									return;
								end)();
								local v108 = (function()
									return;
								end)();
								while true do
									if (v104 ~= 2) then
									else
										while true do
											if (v105 == #"]") then
												local v123 = (function()
													return 0 - 0;
												end)();
												local v124 = (function()
													return;
												end)();
												while true do
													if (v123 ~= (0 - 0)) then
													else
														v124 = (function()
															return 0;
														end)();
														while true do
															if (v124 == (114 - (4 + 110))) then
																v108 = (function()
																	return {v22(),v22(),nil,nil};
																end)();
																if (v106 == 0) then
																	local v8347 = (function()
																		return 584 - (57 + 527);
																	end)();
																	local v8348 = (function()
																		return;
																	end)();
																	while true do
																		if (v8347 == 0) then
																			v8348 = (function()
																				return 1427 - (41 + 1386);
																			end)();
																			while true do
																				if (v8348 == (103 - (17 + 86))) then
																					v108[#"xxx"] = (function()
																						return v22();
																					end)();
																					v108[#"http"] = (function()
																						return v22();
																					end)();
																					break;
																				end
																			end
																			break;
																		end
																	end
																elseif (v106 == #"}") then
																	v108[#"xnx"] = (function()
																		return v23();
																	end)();
																elseif (v106 == 2) then
																	v108[#"asd"] = (function()
																		return v23() - ((2 + 0) ^ (35 - 19));
																	end)();
																elseif (v106 ~= #"xxx") then
																else
																	local v12459 = (function()
																		return 0 - 0;
																	end)();
																	local v12460 = (function()
																		return;
																	end)();
																	while true do
																		if (v12459 == (166 - (122 + 44))) then
																			v12460 = (function()
																				return 0 - 0;
																			end)();
																			while true do
																				if (v12460 ~= (0 - 0)) then
																				else
																					v108[#"nil"] = (function()
																						return v23() - ((2 + 0) ^ (3 + 13));
																					end)();
																					v108[#"asd1"] = (function()
																						return v22();
																					end)();
																					break;
																				end
																			end
																			break;
																		end
																	end
																end
																v124 = (function()
																	return 1 - 0;
																end)();
															end
															if (v124 ~= (66 - (30 + 35))) then
															else
																v105 = (function()
																	return 2;
																end)();
																break;
															end
														end
														break;
													end
												end
											end
											if (v105 ~= (2 + 0)) then
											else
												local v125 = (function()
													return 1257 - (1043 + 214);
												end)();
												local v126 = (function()
													return;
												end)();
												while true do
													if (v125 == (0 - 0)) then
														v126 = (function()
															return 1212 - (323 + 889);
														end)();
														while true do
															if (v126 == (2 - 1)) then
																v105 = (function()
																	return #"-19";
																end)();
																break;
															end
															if (v126 == 0) then
																if (v20(v107, #"~", #"]") ~= #"~") then
																else
																	v108[2] = (function()
																		return v61[v108[2]];
																	end)();
																end
																if (v20(v107, 2, 2) ~= #"~") then
																else
																	v108[#"19("] = (function()
																		return v61[v108[#"nil"]];
																	end)();
																end
																v126 = (function()
																	return 1;
																end)();
															end
														end
														break;
													end
												end
											end
											if ((580 - (361 + 219)) == v105) then
												local v127 = (function()
													return 320 - (53 + 267);
												end)();
												local v128 = (function()
													return;
												end)();
												while true do
													if (v127 ~= 0) then
													else
														v128 = (function()
															return 0 + 0;
														end)();
														while true do
															if (v128 ~= 1) then
															else
																v105 = (function()
																	return #" ";
																end)();
																break;
															end
															if (v128 ~= (413 - (15 + 398))) then
															else
																v106 = (function()
																	return v20(v102, 984 - (18 + 964), #"-19");
																end)();
																v107 = (function()
																	return v20(v102, #".com", 22 - 16);
																end)();
																v128 = (function()
																	return 1 + 0;
																end)();
															end
														end
														break;
													end
												end
											end
											if (v105 == #"xnx") then
												if (v20(v107, #"91(", #"91(") ~= #"{") then
												else
													v108[#"http"] = (function()
														return v61[v108[#"0313"]];
													end)();
												end
												v56[v101] = (function()
													return v108;
												end)();
												break;
											end
										end
										break;
									end
									if (v104 ~= 1) then
									else
										local v114 = (function()
											return 0;
										end)();
										local v115 = (function()
											return;
										end)();
										while true do
											if ((0 + 0) ~= v114) then
											else
												v115 = (function()
													return 850 - (20 + 830);
												end)();
												while true do
													if (v115 ~= 0) then
													else
														v107 = (function()
															return nil;
														end)();
														v108 = (function()
															return nil;
														end)();
														v115 = (function()
															return 1;
														end)();
													end
													if (1 == v115) then
														v104 = (function()
															return 2;
														end)();
														break;
													end
												end
												break;
											end
										end
									end
									if (v104 ~= (0 + 0)) then
									else
										local v116 = (function()
											return 0;
										end)();
										while true do
											if (v116 ~= 1) then
											else
												v104 = (function()
													return 1;
												end)();
												break;
											end
											if (v116 == (126 - (116 + 10))) then
												v105 = (function()
													return 0;
												end)();
												v106 = (function()
													return nil;
												end)();
												v116 = (function()
													return 1;
												end)();
											end
										end
									end
								end
							end
						end
						for v103 = #">", v23() do
							v57, v103, v28 = (function()
								return v55(v57, v103, v28);
							end)();
						end
						return v59;
					end
					v68 = (function()
						return 1 + 0;
					end)();
				end
			end
		end
	end
	local function v29(v62, v63, v64)
		local v65 = v62[739 - (542 + 196)];
		local v66 = v62[2];
		local v67 = v62[6 - 3];
		return function(...)
			local v69 = v65;
			local v70 = v66;
			local v71 = v67;
			local v72 = v27;
			local v73 = 1 + 0;
			local v74 = -(1 + 0);
			local v75 = {};
			local v76 = {...};
			local v77 = v12("#", ...) - 1;
			local v78 = {};
			local v79 = {};
			for v86 = 0 - 0, v77 do
				if (v86 >= v71) then
					v75[v86 - v71] = v76[v86 + 1];
				else
					v79[v86] = v76[v86 + 1];
				end
			end
			local v80 = (v77 - v71) + (2 - 1);
			local v81;
			local v82;
			while true do
				v81 = v69[v73];
				v82 = v81[1552 - ((1993 - (466 + 401)) + 425)];
				if ((887 < 1556) and (v82 <= (620 - (118 + 287)))) then
					if (v82 <= (419 - 312)) then
						if ((v82 <= (1174 - ((415 - (18 + 279)) + 1003))) or (3899 == 292)) then
							if (v82 <= (76 - 50)) then
								if (v82 <= ((1001 - 612) - (142 + 235))) then
									if (v82 <= (22 - 17)) then
										if (v82 <= ((314 - (118 + 195)) + 1)) then
											if (v82 <= (977 - (553 + 424))) then
												do
													return v79[v81[3 - 1]];
												end
											elseif (v82 > (1 + 0)) then
												v79[v81[2 + 0]] = {};
												v73 = v73 + (1880 - (1577 + 302)) + 0;
												v81 = v69[v73];
												v79[v81[1 + (1 - 0)]] = v63[v81[2 + (1021 - (887 + 133))]];
												v73 = v73 + (2 - (1 + 0));
												v81 = v69[v73];
												v79[v81[5 - 3]] = v79[v81[(1139 - (749 + 384)) - 3]][v81[(8 - 6) + 2 + 0]];
												v73 = v73 + ((6 - 2) - (11 - 8));
												v81 = v69[v73];
												v79[v81[755 - ((798 - 559) + 514)]] = v63[v81[2 + 1]];
												v73 = v73 + (1330 - (797 + 532));
												v81 = v69[v73];
												v79[v81[2 + 0]] = v79[v81[(1865 - (215 + 1648)) + 1]][v81[9 - 5]];
												v73 = v73 + (1203 - (373 + 829));
												v81 = v69[v73];
												v79[v81[733 - ((2087 - 1611) + 255)]][v79[v81[1133 - (369 + 761)]]] = v79[v81[3 + 1]];
												v73 = v73 + (1 - 0);
												v81 = v69[v73];
												v79[v81[3 - 1]] = v63[v81[241 - (64 + 174)]];
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v79[v81[(1728 - (1088 + 638)) - 0]] = v79[v81[339 - (116 + 28 + 192)]][v81[220 - (42 + 174)]];
												v73 = v73 + 1;
												v81 = v69[v73];
												v79[v81[2 + 0 + 0]] = v63[v81[3 + 0]];
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v79[v81[1506 - (363 + 1141)]] = v79[v81[1583 - (1183 + 397)]][v81[4]];
												v73 = v73 + (2 - 1);
												v81 = v69[v73];
												v79[v81[2 + 0]][v79[v81[3 + 0]]] = v79[v81[4]];
												v73 = v73 + (1976 - (1913 + 62));
												v81 = v69[v73];
												v79[v81[2 + 0 + 0]] = v63[v81[(383 - (231 + 145)) - 4]];
												v73 = v73 + (1934 - (565 + 1368));
												v81 = v69[v73];
												v79[v81[2]] = v79[v81[3]][v81[15 - 11]];
												v73 = v73 + (1662 - (1477 + 184));
												v81 = v69[v73];
												v79[v81[2 - 0]] = v63[v81[1 + 2 + 0]];
												v73 = v73 + ((1988 - (716 + 415)) - (564 + 292));
												v81 = v69[v73];
												v79[v81[2 - 0]] = v79[v81[8 - 5]][v81[308 - (244 + 60)]];
												v73 = v73 + 1;
												v81 = v69[v73];
												v79[v81[(3 - 1) + 0]][v79[v81[3]]] = v79[v81[216 - (178 + 34)]];
												v73 = v73 + 1;
												v81 = v69[v73];
												v79[v81[478 - (41 + 435)]] = v63[v81[1004 - (938 + 63)]];
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v79[v81[1127 - ((1238 - (43 + 259)) + 189)]] = v79[v81[1 + 2]][v81[4]];
												v73 = v73 + (1614 - (1565 + 48));
												v81 = v69[v73];
												v79[v81[2 + 0]] = v63[v81[1141 - (782 + 356)]];
												v73 = v73 + 1;
												v81 = v69[v73];
												v79[v81[2]] = v79[v81[270 - ((1446 - (695 + 575)) + 91)]][v81[10 - 6]];
												v73 = v73 + ((2 - 1) - 0);
												v81 = v69[v73];
												v79[v81[1094 - (975 + 117)]][v79[v81[1878 - (157 + 1718)]]] = v79[v81[4]];
												v73 = v73 + (1004 - (116 + 887)) + 0;
												v81 = v69[v73];
												v79[v81[2]][v81[10 - 7]] = v79[v81[13 - 9]];
												v73 = v73 + (1019 - ((3022 - 2325) + 321));
												v81 = v69[v73];
												v79[v81[4 - 2]] = v63[v81[7 - 4]];
												v73 = v73 + (1 - 0);
												v81 = v69[v73];
												v79[v81[1395 - (1109 + 284)]][v81[6 - 3]] = v81[(743 - (358 + 383)) + 2];
												v73 = v73 + (1 - (339 - (141 + 198)));
												v81 = v69[v73];
												v79[v81[2]] = v81[3];
											else
												v79[v81[(1 + 4) - 3]] = v81[1230 - (322 + 905)];
												v73 = v73 + (612 - (602 + 9));
												v81 = v69[v73];
												v79[v81[2]] = v79[v81[3]][v79[v81[4]]];
												v73 = v73 + (1190 - (449 + 740));
												v81 = v69[v73];
												v79[v81[874 - ((1225 - 399) + 46)]] = {};
												v73 = v73 + (948 - (245 + 702));
												v81 = v69[v73];
												v79[v81[6 - 4]] = v81[1 + 2];
												v73 = v73 + (1899 - (260 + 1638));
												v81 = v69[v73];
												v79[v81[442 - ((2366 - (1689 + 295)) + 58)]] = v79[v81[(14 - 5) - 6]][v79[v81[4 + 0]]];
												v73 = v73 + (1 - 0);
												v81 = v69[v73];
												v79[v81[2]] = v81[(5 + 3) - 5] ~= (1205 - (902 + 303));
												v73 = v73 + (1 - 0);
												v81 = v69[v73];
												v79[v81[4 - 2]][v79[v81[3]]] = v79[v81[1 + 3]];
												v73 = v73 + (1691 - (1121 + 569));
												v81 = v69[v73];
												v79[v81[216 - (22 + 192)]] = v81[3];
												v73 = v73 + (684 - (483 + 200));
												v81 = v69[v73];
												v79[v81[1465 - (1404 + 59)]] = v79[v81[8 - 5]][v79[v81[(3 + 1) - 0]]];
												v73 = v73 + ((1653 - 887) - (468 + 297));
												v81 = v69[v73];
												v79[v81[564 - (334 + 66 + 162)]] = v64[v81[10 - (5 + 2)]];
											end
										elseif (v82 <= (6 - 3)) then
											local v133 = 0 - 0;
											local v134;
											while true do
												if ((28 - 12) == v133) then
													v73 = v73 + 1 + (138 - (108 + 30));
													v81 = v69[v73];
													v79[v81[238 - (141 + 95)]] = v81[3];
													v73 = v73 + 1 + (94 - (42 + 52));
													v81 = v69[v73];
													v79[v81[4 - 2]] = v79[v81[6 - 3]][v79[v81[1 + 3]]];
													v73 = v73 + (2 - 1);
													v81 = v69[v73];
													v79[v81[2]] = v64[v81[3 + 0]];
													v133 = 17;
												end
												if (v133 == (5 + 3)) then
													v81 = v69[v73];
													v79[v81[2 - 0]] = v81[2 + 1] ~= 0;
													v73 = v73 + (164 - (92 + 71));
													v81 = v69[v73];
													v79[v81[1 + 1]][v79[v81[4 - 1]]] = v79[v81[769 - (574 + 191)]];
													v73 = v73 + 1 + 0;
													v81 = v69[v73];
													v79[v81[4 - 2]] = v81[2 + 1];
													v73 = v73 + ((223 + 627) - (254 + 595));
													v133 = 135 - (55 + 71);
												end
												if (v133 == (3 - 0)) then
													v81 = v69[v73];
													v79[v81[2]] = v81[1793 - (573 + 1217)];
													v73 = v73 + (2 - 1);
													v81 = v69[v73];
													v79[v81[2]] = v79[v81[1 + 2]][v79[v81[4]]];
													v73 = v73 + (1 - 0);
													v81 = v69[v73];
													v79[v81[941 - (714 + 225)]] = v81[3] ~= (0 - 0);
													v73 = v73 + (1 - 0);
													v133 = 1 + 3;
												end
												if (v133 == 6) then
													v81 = v69[v73];
													v79[v81[2 - 0]] = v79[v81[502 - (370 + 129)]][v79[v81[810 - (118 + 688)]]];
													v73 = v73 + 1;
													v81 = v69[v73];
													v79[v81[(9 + 41) - (25 + 23)]] = {};
													v73 = v73 + 1 + 0;
													v81 = v69[v73];
													v79[v81[2]][v79[v81[1889 - (927 + 959)]]] = v79[v81[4]];
													v73 = v73 + (3 - 2);
													v133 = 739 - (16 + 716);
												end
												if (v133 == ((1660 - (685 + 937)) - 18)) then
													v79[v81[99 - (11 + 86)]] = v79[v81[(6 + 0) - 3]][v79[v81[655 - (388 + 263)]]];
													v73 = v73 + 1;
													v81 = v69[v73];
													v79[v81[(731 - 444) - (175 + 110)]] = {};
													v73 = v73 + (2 - 1);
													v81 = v69[v73];
													v79[v81[9 - 7]][v79[v81[(3491 - 1692) - (503 + 1293)]]] = v79[v81[(5 + 6) - 7]];
													v73 = v73 + 1 + 0 + 0;
													v81 = v69[v73];
													v133 = (2257 - (808 + 367)) - (810 + 251);
												end
												if ((3437 == 3437) and (v133 == (16 + 2 + 5))) then
													v79[v81[1 + 1]] = v81[3] ~= (0 + 0);
													v73 = v73 + (534 - (43 + 490));
													v81 = v69[v73];
													v79[v81[2]][v79[v81[(979 - (241 + 2)) - (711 + 22)]]] = v79[v81[15 - 11]];
													v73 = v73 + (860 - (240 + 619));
													v81 = v69[v73];
													v79[v81[1 + 1]] = v81[4 - (1 - 0)];
													v73 = v73 + 1;
													v81 = v69[v73];
													v133 = 2 + 22;
												end
												if (v133 == 22) then
													v79[v81[1746 - ((2649 - (413 + 892)) + 400)]][v79[v81[408 - (255 + 150)]]] = v79[v81[4 + (0 - 0)]];
													v73 = v73 + 1;
													v81 = v69[v73];
													v79[v81[2 + 0]] = v81[12 - 9];
													v73 = v73 + 1;
													v81 = v69[v73];
													v79[v81[6 - 4]] = v79[v81[1742 - (404 + 1335)]][v79[v81[4]]];
													v73 = v73 + (407 - ((224 - (15 + 26)) + 223));
													v81 = v69[v73];
													v133 = 23;
												end
												if (v133 == (13 + 11)) then
													v79[v81[2 - 0]] = v79[v81[2 + (1 - 0)]][v79[v81[4]]];
													v73 = v73 + 1 + 0;
													v81 = v69[v73];
													v79[v81[339 - (10 + 327)]] = v81[3] ~= (0 + 0);
													v73 = v73 + (339 - (118 + 220));
													v81 = v69[v73];
													v79[v81[1 + 1]][v79[v81[452 - (108 + 341)]]] = v79[v81[2 + 2 + 0]];
													v73 = v73 + (4 - 3);
													v81 = v69[v73];
													v133 = 25;
												end
												if (v133 == 2) then
													v81 = v69[v73];
													v79[v81[1495 - (711 + 782)]] = v79[v81[3]][v79[v81[7 - 3]]];
													v73 = v73 + (470 - (270 + 199));
													v81 = v69[v73];
													v79[v81[1 + (3 - 2)]] = {};
													v73 = v73 + (1820 - (580 + 1239));
													v81 = v69[v73];
													v79[v81[5 - 3]][v79[v81[3 + 0]]] = v79[v81[1 + 3]];
													v73 = v73 + 1 + 0;
													v133 = 7 - (14 - 10);
												end
												if (v133 == ((41 - 24) + 9)) then
													v79[v81[1169 - (645 + 522)]][v79[v81[1793 - (1010 + 780)]]] = v79[v81[4 + 0]];
													v73 = v73 + (4 - 3);
													v81 = v69[v73];
													v79[v81[5 - (11 - 8)]] = v81[1839 - (1045 + 791)];
													v73 = v73 + (2 - 1);
													v81 = v69[v73];
													v79[v81[2 - 0]] = v79[v81[508 - (351 + 154)]][v79[v81[(1130 + 448) - (1281 + 293)]]];
													break;
												end
												if (v133 == 18) then
													v73 = v73 + (267 - (28 + 238));
													v81 = v69[v73];
													v79[v81[4 - (4 - 2)]] = v81[1562 - ((3597 - 2216) + 178)];
													v73 = v73 + 1 + 0;
													v81 = v69[v73];
													v79[v81[(444 - (356 + 86)) + 0]] = v81[2 + 1];
													v73 = v73 + (3 - (30 - (24 + 4)));
													v81 = v69[v73];
													v134 = v81[2];
													v133 = 10 + 9;
												end
												if (v133 == ((267 + 212) - (381 + 89))) then
													v81 = v69[v73];
													v79[v81[2 + 0]] = v79[v81[3 + 0]][v79[v81[6 - 2]]];
													v73 = v73 + (1157 - (1074 + 82));
													v81 = v69[v73];
													v79[v81[3 - 1]] = v64[v81[3]];
													v73 = v73 + (1785 - (214 + 1570));
													v81 = v69[v73];
													v79[v81[2]] = v81[1458 - (990 + 465)];
													v73 = v73 + 1;
													v133 = 5 + 5;
												end
												if (v133 == (7 + 8)) then
													v73 = v73 + 1 + 0;
													v81 = v69[v73];
													v79[v81[2]] = v79[v81[11 - 8]][v79[v81[1730 - (1668 + 58)]]];
													v73 = v73 + (627 - (512 + 114));
													v81 = v69[v73];
													v79[v81[2]] = v81[3] ~= (0 - 0);
													v73 = v73 + 1;
													v81 = v69[v73];
													v79[v81[3 - 1]][v79[v81[10 - 7]]] = v79[v81[4]];
													v133 = 8 + 8;
												end
												if (v133 == (4 + 17)) then
													v79[v81[2 + 0]] = v81[10 - 7];
													v73 = v73 + (1995 - (109 + 1885));
													v81 = v69[v73];
													v79[v81[1471 - (1269 + 200)]] = v79[v81[5 - 2]][v79[v81[4]]];
													v73 = v73 + (816 - (98 + 717));
													v81 = v69[v73];
													v79[v81[828 - (802 + 24)]] = v81[5 - 2] ~= (0 - 0);
													v73 = v73 + 1 + 0;
													v81 = v69[v73];
													v133 = 22;
												end
												if (v133 == (10 + 2)) then
													v73 = v73 + 1 + 0;
													v81 = v69[v73];
													v79[v81[1 + 1]] = v81[3];
													v73 = v73 + (2 - 1);
													v81 = v69[v73];
													v79[v81[6 - 4]] = v79[v81[2 + 1]][v79[v81[2 + 2]]];
													v73 = v73 + 1;
													v81 = v69[v73];
													v79[v81[2 + 0]] = v81[3 + 0];
													v133 = 7 + 6;
												end
												if ((v133 == (1440 - (797 + 636))) or (4115 <= 947)) then
													v81 = v69[v73];
													v79[v81[2]] = {};
													v73 = v73 + 1;
													v81 = v69[v73];
													v79[v81[9 - 7]] = v81[1622 - (1427 + 192)];
													v73 = v73 + 1 + 0;
													v81 = v69[v73];
													v79[v81[4 - 2]] = v79[v81[3 + 0]][v79[v81[2 + 2]]];
													v73 = v73 + (327 - (192 + 134));
													v133 = 1284 - (316 + 960);
												end
												if ((4023 < 4220) and (v133 == 11)) then
													v81 = v69[v73];
													v79[v81[2 + 0]] = v81[3];
													v73 = v73 + 1 + 0;
													v81 = v69[v73];
													v134 = v81[2 + 0];
													v79[v134] = v79[v134](v13(v79, v134 + (3 - 2), v81[554 - (83 + 468)]));
													v73 = v73 + (1807 - (1202 + 604));
													v81 = v69[v73];
													v79[v81[9 - 7]][v79[v81[4 - 1]]] = v79[v81[4]];
													v133 = 33 - 21;
												end
												if (v133 == (329 - (45 + 280))) then
													v81 = v69[v73];
													v79[v81[2 + 0]][v79[v81[3]]] = v79[v81[4 + 0]];
													v73 = v73 + 1 + 0;
													v81 = v69[v73];
													v79[v81[2 + 0]] = v81[1 + 2];
													v73 = v73 + 1;
													v81 = v69[v73];
													v79[v81[2]] = v79[v81[5 - 2]][v79[v81[1915 - (340 + 1571)]]];
													v73 = v73 + 1 + 0;
													v133 = 1777 - (1733 + 39);
												end
												if (v133 == (27 - 17)) then
													v81 = v69[v73];
													v79[v81[2]] = v79[v81[1037 - (125 + 909)]][v79[v81[1952 - (1096 + 852)]]];
													v73 = v73 + 1 + 0;
													v81 = v69[v73];
													v79[v81[2]] = v81[3 - 0];
													v73 = v73 + 1 + 0;
													v81 = v69[v73];
													v79[v81[514 - (409 + 103)]] = v81[239 - (46 + 190)];
													v73 = v73 + 1;
													v133 = 106 - (51 + 44);
												end
												if (v133 == 17) then
													v73 = v73 + 1;
													v81 = v69[v73];
													v79[v81[1 + 1]] = v81[1320 - (1114 + 203)];
													v73 = v73 + (727 - (228 + 498));
													v81 = v69[v73];
													v79[v81[1 + 1]] = v79[v81[2 + 1]][v79[v81[667 - (174 + 489)]]];
													v73 = v73 + (2 - 1);
													v81 = v69[v73];
													v79[v81[2]] = v81[1908 - (830 + 1075)];
													v133 = 542 - (303 + 221);
												end
												if (((1283 - (231 + 1038)) == v133) or (1222 == 4527)) then
													v73 = v73 + 1 + 0;
													v81 = v69[v73];
													v79[v81[2]] = v81[3];
													v73 = v73 + (1163 - (171 + 991));
													v81 = v69[v73];
													v79[v81[8 - 6]][v79[v81[7 - 4]]] = v79[v81[9 - 5]];
													v73 = v73 + 1 + 0;
													v81 = v69[v73];
													v79[v81[2]] = v81[3];
													v133 = 52 - 37;
												end
												if (v133 == (54 - 35)) then
													v79[v134] = v79[v134](v13(v79, v134 + (1 - 0), v81[3]));
													v73 = v73 + (3 - 2);
													v81 = v69[v73];
													v79[v81[1250 - (111 + 1137)]][v79[v81[3]]] = v79[v81[162 - (91 + 67)]];
													v73 = v73 + (2 - 1);
													v81 = v69[v73];
													v79[v81[1 + 1]] = v81[526 - (423 + 100)];
													v73 = v73 + 1;
													v81 = v69[v73];
													v133 = 20;
												end
												if (v133 == (1 + 12)) then
													v73 = v73 + (2 - 1);
													v81 = v69[v73];
													v79[v81[2 + 0]][v79[v81[774 - (326 + 445)]]] = v79[v81[17 - 13]];
													v73 = v73 + 1;
													v81 = v69[v73];
													v79[v81[4 - 2]] = v81[6 - 3];
													v73 = v73 + (712 - (530 + 181));
													v81 = v69[v73];
													v79[v81[883 - (614 + 267)]] = v79[v81[35 - (19 + 13)]][v79[v81[4]]];
													v133 = 22 - 8;
												end
												if ((2696 <= 4627) and (v133 == (57 - 32))) then
													v79[v81[2]] = v81[8 - 5];
													v73 = v73 + 1 + 0;
													v81 = v69[v73];
													v79[v81[3 - 1]] = v79[v81[6 - 3]][v79[v81[1816 - (1293 + 519)]]];
													v73 = v73 + (1 - 0);
													v81 = v69[v73];
													v79[v81[2]] = v81[7 - 4];
													v73 = v73 + (1 - 0);
													v81 = v69[v73];
													v133 = 26;
												end
												if (v133 == (4 - 3)) then
													v81 = v69[v73];
													v79[v81[2]][v79[v81[6 - 3]]] = v79[v81[3 + 1]];
													v73 = v73 + 1;
													v81 = v69[v73];
													v79[v81[1 + 1]][v79[v81[6 - 3]]] = v79[v81[1 + 3]];
													v73 = v73 + 1 + 0;
													v81 = v69[v73];
													v79[v81[2]] = v81[2 + 1];
													v73 = v73 + 1;
													v133 = 1098 - (709 + 387);
												end
												if (v133 == (1858 - (673 + 1185))) then
													v134 = nil;
													v79[v81[2]] = {};
													v73 = v73 + (2 - 1);
													v81 = v69[v73];
													v79[v81[6 - 4]] = v81[4 - 1];
													v73 = v73 + 1;
													v81 = v69[v73];
													v79[v81[2]] = v79[v81[3 + 0]][v79[v81[3 + 1]]];
													v73 = v73 + 1;
													v133 = 1 - 0;
												end
												if (v133 == 5) then
													v81 = v69[v73];
													v79[v81[1 + 1]] = {};
													v73 = v73 + (1 - 0);
													v81 = v69[v73];
													v79[v81[3 - 1]][v79[v81[1883 - (446 + 1434)]]] = v79[v81[1287 - (1040 + 243)]];
													v73 = v73 + (2 - 1);
													v81 = v69[v73];
													v79[v81[1849 - (559 + 1288)]] = v81[1934 - (609 + 1322)];
													v73 = v73 + (455 - (13 + 441));
													v133 = 22 - 16;
												end
											end
										elseif ((v82 == 4) or (2126 < 2096)) then
											v79[v81[5 - 3]] = v79[v81[14 - 11]][v81[1 + 3]];
											v73 = v73 + (3 - 2);
											v81 = v69[v73];
											v79[v81[1 + 1]] = {};
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[1 + 1]][v81[8 - 5]] = v79[v81[4]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											do
												return;
											end
											v73 = v73 + (1 - 0);
											v81 = v69[v73];
											v73 = v81[2 + 1];
										else
											local v1046 = 0 + 0;
											local v1047;
											while true do
												if (v1046 == (4 + 1)) then
													v79[v81[2 + 0]] = v63[v81[3]];
													v73 = v73 + 1 + 0;
													v81 = v69[v73];
													v79[v81[435 - (153 + 280)]] = v79[v81[8 - 5]] + v81[4];
													v1046 = 6 + 0;
												end
												if ((v1046 == (1 + 1)) or (183 == 900)) then
													v73 = v73 + 1 + 0;
													v81 = v69[v73];
													v79[v81[2 + 0]] = v81[3 + 0] ~= (0 - 0);
													v73 = v73 + 1;
													v1046 = 2 + 1;
												end
												if (v1046 == (674 - (89 + 578))) then
													v81 = v69[v73];
													v73 = v81[3 + 0];
													break;
												end
												if ((3007 >= 61) and ((1 - 0) == v1046)) then
													v79[v81[1051 - (572 + 477)]] = v79[v81[1 + 2]];
													v73 = v73 + 1;
													v81 = v69[v73];
													v79[v81[2]] = v81[3] ~= (0 + 0);
													v1046 = 1 + 1;
												end
												if ((86 - (84 + 2)) == v1046) then
													v1047 = nil;
													v79[v81[2 - 0]] = v63[v81[3 + 0]];
													v73 = v73 + (843 - (497 + 345));
													v81 = v69[v73];
													v1046 = 1;
												end
												if (v1046 == (1 + 2)) then
													v81 = v69[v73];
													v79[v81[2]] = v81[1 + 2] ~= 0;
													v73 = v73 + (1334 - (605 + 728));
													v81 = v69[v73];
													v1046 = 3 + 1;
												end
												if (v1046 == (8 - 4)) then
													v1047 = v81[1 + 1];
													v79[v1047](v13(v79, v1047 + (3 - 2), v81[3]));
													v73 = v73 + 1 + 0;
													v81 = v69[v73];
													v1046 = 13 - 8;
												end
												if (v1046 == (5 + 1)) then
													v73 = v73 + 1;
													v81 = v69[v73];
													v63[v81[492 - (457 + 32)]] = v79[v81[2]];
													v73 = v73 + 1 + 0;
													v1046 = 1409 - (832 + 570);
												end
											end
										end
									elseif ((4961 > 2646) and (v82 <= 8)) then
										if (v82 <= (6 + 0)) then
											local v135 = v81[1 + 1];
											v79[v135](v79[v135 + (3 - 2)]);
										elseif ((v82 > (4 + 3)) or (2947 < 118)) then
											local v1048;
											local v1049;
											local v1048, v1050;
											local v1051;
											local v1052;
											v79[v81[798 - (588 + 208)]] = v63[v81[8 - 5]];
											v73 = v73 + (1801 - (884 + 916));
											v81 = v69[v73];
											v79[v81[3 - 1]] = v79[v81[2 + 1]][v81[4]];
											v73 = v73 + (654 - (232 + 421));
											v81 = v69[v73];
											v1052 = v81[1891 - (1569 + 320)];
											v1051 = v79[v81[1 + 2]];
											v79[v1052 + 1 + 0] = v1051;
											v79[v1052] = v1051[v81[13 - 9]];
											v73 = v73 + (606 - (316 + 289));
											v81 = v69[v73];
											v1052 = v81[5 - 3];
											v1048, v1050 = v72(v79[v1052](v79[v1052 + 1 + 0]));
											v74 = (v1050 + v1052) - 1;
											v1049 = 1453 - (666 + 787);
											for v7318 = v1052, v74 do
												local v7319 = 425 - (360 + 65);
												while true do
													if ((v7319 == (0 + 0)) or (4531 < 3209)) then
														v1049 = v1049 + (255 - (79 + 175));
														v79[v7318] = v1048[v1049];
														break;
													end
												end
											end
											v73 = v73 + 1;
											v81 = v69[v73];
											v1052 = v81[2];
											v1048 = {v79[v1052](v13(v79, v1052 + 1 + 0, v74))};
											v1049 = 0 - 0;
											for v7320 = v1052, v81[7 - 3] do
												v1049 = v1049 + 1;
												v79[v7320] = v1048[v1049];
											end
											v73 = v73 + (900 - (503 + 396));
											v81 = v69[v73];
											v73 = v81[184 - (92 + 89)];
										else
											v79[v81[3 - 1]] = v79[v81[2 + 1]][v81[4]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[2 + 0]] = v79[v81[11 - 8]][v81[1 + 3]];
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v79[v81[2 + 0]][v81[2 + 1]] = v79[v81[12 - 8]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[2 - 0]] = v81[1247 - (485 + 759)];
											v73 = v73 + 1;
											v81 = v69[v73];
											v73 = v81[6 - 3];
										end
									elseif (v82 <= (1199 - (442 + 747))) then
										if (v82 == 9) then
											local v1076 = 1135 - (832 + 303);
											while true do
												if (v1076 == (949 - (88 + 858))) then
													v79[v81[2]][v81[1 + 2]] = v79[v81[4 + 0]];
													v73 = v73 + 1 + 0;
													v81 = v69[v73];
													v73 = v81[792 - (766 + 23)];
													break;
												end
												if ((v1076 == 1) or (2854 >= 3705)) then
													v73 = v73 + (4 - 3);
													v81 = v69[v73];
													v79[v81[2 - 0]] = v79[v81[7 - 4]] * v79[v81[13 - 9]];
													v73 = v73 + 1;
													v1076 = 1075 - (1036 + 37);
												end
												if ((3924 > 1367) and (v1076 == 2)) then
													v81 = v69[v73];
													v79[v81[2 + 0]] = v79[v81[5 - 2]] + v79[v81[4 + 0]];
													v73 = v73 + (1481 - (641 + 839));
													v81 = v69[v73];
													v1076 = 916 - (910 + 3);
												end
												if ((v1076 == 0) or (2724 <= 2064)) then
													v79[v81[4 - 2]] = v63[v81[1687 - (1466 + 218)]];
													v73 = v73 + 1 + 0;
													v81 = v69[v73];
													v79[v81[1150 - (556 + 592)]] = v79[v81[2 + 1]][v81[812 - (329 + 479)]];
													v1076 = 855 - (174 + 680);
												end
											end
										else
											local v1077;
											v79[v81[6 - 4]] = v79[v81[5 - 2]][v79[v81[3 + 1]]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[741 - (396 + 343)]] = v81[3];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[1479 - (29 + 1448)]] = v79[v81[1392 - (135 + 1254)]] / v79[v81[14 - 10]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[9 - 7]] = v81[2 + 1];
											v73 = v73 + (1528 - (389 + 1138));
											v81 = v69[v73];
											v79[v81[2]] = v79[v81[577 - (102 + 472)]][v79[v81[4]]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[2 + 0]] = v81[3];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[2 + 0]] = v79[v81[1548 - (320 + 1225)]][v79[v81[6 - 2]]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[1466 - (157 + 1307)]] = v81[1862 - (821 + 1038)];
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v79[v81[1 + 1]] = v79[v81[4 - 1]] / v79[v81[2 + 2]];
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v1077 = v81[1028 - (834 + 192)];
											v79[v1077] = v79[v1077](v13(v79, v1077 + 1 + 0, v81[1 + 2]));
										end
									elseif (v82 > (1 + 10)) then
										v79[v81[2]] = v63[v81[4 - 1]];
										v73 = v73 + (305 - (300 + 4));
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[1 + 2]][v81[4]];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[2]][v79[v81[365 - (112 + 250)]]] = v81[2 + 2];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[2]] = v63[v81[2 + 1]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2 + 0]] = v79[v81[2 + 1]][v81[3 + 1]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[1416 - (1001 + 413)]][v79[v81[3]]] = v81[8 - 4];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[884 - (244 + 638)]] = v63[v81[696 - (627 + 66)]];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[605 - (512 + 90)]][v81[1910 - (1665 + 241)]];
										v73 = v73 + (718 - (373 + 344));
										v81 = v69[v73];
										v79[v81[1 + 1]][v79[v81[1 + 2]]] = v81[10 - 6];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v79[v81[2]] = v63[v81[1102 - (35 + 1064)]];
									else
										local v1112;
										v79[v81[2 + 0]] = v79[v81[3]][v81[8 - 4]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[1238 - (298 + 938)]] = v81[1262 - (233 + 1026)];
										v73 = v73 + (1667 - (636 + 1030));
										v81 = v69[v73];
										v79[v81[2 + 0]] = v81[3 + 0];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[1 + 1]] = v81[224 - (55 + 166)];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2]] = v81[1 + 2];
										v73 = v73 + (3 - 2);
										v81 = v69[v73];
										v1112 = v81[299 - (36 + 261)];
										v79[v1112] = v79[v1112](v13(v79, v1112 + (1 - 0), v81[1371 - (34 + 1334)]));
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[1 + 1]][v81[3 + 0]] = v79[v81[1287 - (1035 + 248)]];
										v73 = v73 + (22 - (20 + 1));
										v81 = v69[v73];
										v79[v81[2 + 0]] = v64[v81[322 - (134 + 185)]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[1135 - (549 + 584)]] = v79[v81[3]][v81[689 - (314 + 371)]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[6 - 4]] = v81[971 - (478 + 490)];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2]] = v81[1175 - (786 + 386)];
										v73 = v73 + (3 - 2);
										v81 = v69[v73];
										v79[v81[1381 - (1055 + 324)]] = v81[1343 - (1093 + 247)];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[1 + 1]] = v81[3];
										v73 = v73 + (3 - 2);
										v81 = v69[v73];
										v1112 = v81[2];
										v79[v1112] = v79[v1112](v13(v79, v1112 + (3 - 2), v81[3]));
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[4 - 2]][v81[2 + 1]] = v79[v81[4]];
										v73 = v73 + (3 - 2);
										v81 = v69[v73];
										v79[v81[2]] = v81[10 - 7];
									end
								elseif ((4505 < 4829) and (v82 <= 19)) then
									if (v82 <= (12 + 3)) then
										if (v82 <= 13) then
											local v136 = 0 - 0;
											local v137;
											while true do
												if (v136 == (690 - (364 + 324))) then
													v73 = v73 + (2 - 1);
													v81 = v69[v73];
													v79[v81[4 - 2]] = v81[3];
													v73 = v73 + 1 + 0;
													v136 = 3;
												end
												if (v136 == (0 - 0)) then
													v137 = nil;
													v79[v81[2 - 0]] = v79[v81[8 - 5]][v81[4]];
													v73 = v73 + (1269 - (1249 + 19));
													v81 = v69[v73];
													v136 = 1;
												end
												if ((1333 < 4736) and (v136 == 4)) then
													v79[v81[2 + 0]] = v81[11 - 8];
													v73 = v73 + 1;
													v81 = v69[v73];
													v79[v81[2]] = v81[1089 - (686 + 400)];
													v136 = 4 + 1;
												end
												if ((v136 == (230 - (73 + 156))) or (3396 == 917)) then
													v79[v81[1 + 1]] = v64[v81[3]];
													v73 = v73 + (812 - (721 + 90));
													v81 = v69[v73];
													v79[v81[1 + 1]] = v79[v81[9 - 6]][v81[474 - (224 + 246)]];
													v136 = 2;
												end
												if ((840 > 95) and (v136 == (8 - 3))) then
													v73 = v73 + (1 - 0);
													v81 = v69[v73];
													v137 = v81[1 + 1];
													v79[v137] = v79[v137](v13(v79, v137 + 1 + 0, v81[3 + 0]));
													v136 = 11 - 5;
												end
												if (v136 == (23 - 16)) then
													v81 = v69[v73];
													v73 = v81[516 - (203 + 310)];
													break;
												end
												if ((v136 == 6) or (1502 >= 4442)) then
													v73 = v73 + 1;
													v81 = v69[v73];
													v79[v81[2]][v81[1996 - (1238 + 755)]] = v79[v81[1 + 3]];
													v73 = v73 + (1535 - (709 + 825));
													v136 = 12 - 5;
												end
												if (v136 == 3) then
													v81 = v69[v73];
													v79[v81[2]] = v79[v81[3]] + v81[4];
													v73 = v73 + (1 - 0);
													v81 = v69[v73];
													v136 = 868 - (196 + 668);
												end
											end
										elseif (v82 == 14) then
											local v1140;
											local v1141;
											v1141 = v81[7 - 5];
											v1140 = v79[v81[5 - 2]];
											v79[v1141 + (834 - (171 + 662))] = v1140;
											v79[v1141] = v1140[v81[97 - (4 + 89)]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[2]] = v79[v81[10 - 7]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v1141 = v81[2];
											v79[v1141] = v79[v1141](v13(v79, v1141 + (4 - 3), v81[2 + 1]));
											v73 = v73 + (1487 - (35 + 1451));
											v81 = v69[v73];
											v79[v81[1455 - (28 + 1425)]] = v79[v81[1996 - (941 + 1052)]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											if ((1072 == 1072) and (v81[1516 - (822 + 692)] < v79[v81[5 - 1]])) then
												v73 = v73 + 1 + 0;
											else
												v73 = v81[300 - (45 + 252)];
											end
										else
											local v1153;
											local v1154;
											v79[v81[2 + 0]][v79[v81[3]]] = v79[v81[4]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[1 + 1]] = v81[7 - 4];
											v73 = v73 + (434 - (114 + 319));
											v81 = v69[v73];
											v79[v81[2 - 0]] = v79[v81[3 - 0]][v79[v81[3 + 1]]];
											v73 = v73 + (1 - 0);
											v81 = v69[v73];
											v1154 = v81[3 - 1];
											v79[v1154](v13(v79, v1154 + (1964 - (556 + 1407)), v81[1209 - (741 + 465)]));
											v73 = v73 + (466 - (170 + 295));
											v81 = v69[v73];
											v79[v81[2]] = v81[2 + 1];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[2 + 0]] = v79[v81[7 - 4]][v79[v81[4]]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[2 + 0]] = v81[2 + 1];
											v73 = v73 + (1231 - (957 + 273));
											v81 = v69[v73];
											v1154 = v81[1 + 1];
											v1153 = v79[v81[2 + 1]];
											v79[v1154 + (3 - 2)] = v1153;
											v79[v1154] = v1153[v79[v81[10 - 6]]];
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v79[v81[9 - 7]] = {};
											v73 = v73 + (1781 - (389 + 1391));
											v81 = v69[v73];
											v79[v81[2 + 0]] = v81[1 + 2];
										end
									elseif ((v82 <= 17) or (4209 <= 26)) then
										if ((4604 >= 448) and (v82 == 16)) then
											v79[v81[4 - 2]] = v81[954 - (783 + 168)];
											v73 = v73 + (3 - 2);
											v81 = v69[v73];
											v79[v81[2]] = v79[v81[3 + 0]][v79[v81[4]]];
											v73 = v73 + (312 - (309 + 2));
											v81 = v69[v73];
											v79[v81[5 - 3]] = v81[1215 - (1090 + 122)] ~= (0 + 0);
											v73 = v73 + (3 - 2);
											v81 = v69[v73];
											v79[v81[2 + 0]][v79[v81[1121 - (628 + 490)]]] = v79[v81[1 + 3]];
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v79[v81[9 - 7]] = v81[777 - (431 + 343)];
											v73 = v73 + (1 - 0);
											v81 = v69[v73];
											v79[v81[5 - 3]] = v79[v81[3 + 0]][v79[v81[1 + 3]]];
											v73 = v73 + 1;
											v81 = v69[v73];
											for v7348 = v81[2], v81[1698 - (556 + 1139)] do
												v79[v7348] = nil;
											end
											v73 = v73 + (16 - (6 + 9));
											v81 = v69[v73];
											v79[v81[1 + 1]][v79[v81[3]]] = v79[v81[4]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[2 + 0]] = v81[172 - (28 + 141)];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[2 - 0]] = v79[v81[3 + 0]][v79[v81[4]]];
										else
											local v1190;
											local v1191;
											v1191 = v81[1319 - (486 + 831)];
											v1190 = v79[v81[7 - 4]];
											v79[v1191 + (3 - 2)] = v1190;
											v79[v1191] = v1190[v81[1 + 3]];
											v73 = v73 + (3 - 2);
											v81 = v69[v73];
											v79[v81[1265 - (668 + 595)]] = v81[3];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[2 + 0]] = v81[1 + 2];
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v1191 = v81[292 - (23 + 267)];
											v79[v1191] = v79[v1191](v13(v79, v1191 + 1, v81[1947 - (1129 + 815)]));
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[389 - (371 + 16)]] = v79[v81[1753 - (1326 + 424)]];
											v73 = v73 + (1 - 0);
											v81 = v69[v73];
											v1191 = v81[2];
											v1190 = v79[v81[10 - 7]];
											v79[v1191 + (119 - (88 + 30))] = v1190;
											v79[v1191] = v1190[v81[4]];
											v73 = v73 + (772 - (720 + 51));
											v81 = v69[v73];
											v79[v81[2]] = v63[v81[6 - 3]];
											v73 = v73 + (1777 - (421 + 1355));
											v81 = v69[v73];
											v79[v81[2 - 0]] = v79[v81[3]][v81[2 + 2]];
											v73 = v73 + (1084 - (286 + 797));
											v81 = v69[v73];
											v79[v81[2]] = v81[3];
											v73 = v73 + 1;
											v81 = v69[v73];
											v1191 = v81[7 - 5];
											v79[v1191] = v79[v1191](v13(v79, v1191 + (1 - 0), v81[442 - (397 + 42)]));
										end
									elseif (v82 > (6 + 12)) then
										v79[v81[802 - (24 + 776)]][v79[v81[4 - 1]]] = v79[v81[789 - (222 + 563)]];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v79[v81[2]] = v81[3 + 0];
										v73 = v73 + (191 - (23 + 167));
										v81 = v69[v73];
										v79[v81[1800 - (690 + 1108)]] = v79[v81[2 + 1]][v79[v81[4 + 0]]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[850 - (40 + 808)]] = v81[3] ~= (0 + 0);
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[7 - 5]][v79[v81[3 + 0]]] = v79[v81[4]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2 + 0]] = v81[574 - (47 + 524)];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[5 - 3]] = v79[v81[4 - 1]][v79[v81[8 - 4]]];
										v73 = v73 + (1727 - (1165 + 561));
										v81 = v69[v73];
										v79[v81[1 + 1]] = v81[9 - 6];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2]][v79[v81[3]]] = v79[v81[4]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[481 - (341 + 138)]] = v81[3];
									else
										local v1233 = 0 + 0;
										while true do
											if (v1233 == (0 - 0)) then
												v79[v81[328 - (89 + 237)]] = v79[v81[9 - 6]][v81[8 - 4]];
												v73 = v73 + (882 - (581 + 300));
												v81 = v69[v73];
												v1233 = 1;
											end
											if ((784 <= 1912) and (v1233 == (1221 - (855 + 365)))) then
												v79[v81[4 - 2]] = v64[v81[3]];
												v73 = v73 + 1;
												v81 = v69[v73];
												v1233 = 1 + 1;
											end
											if ((v1233 == (1239 - (1030 + 205))) or (1520 == 1970)) then
												if not v79[v81[2 + 0]] then
													v73 = v73 + 1 + 0;
												else
													v73 = v81[289 - (156 + 130)];
												end
												break;
											end
											if (v1233 == (6 - 3)) then
												v79[v81[2 - 0]] = v79[v81[3]][v81[7 - 3]];
												v73 = v73 + 1;
												v81 = v69[v73];
												v1233 = 2 + 2;
											end
											if (v1233 == 2) then
												v79[v81[2 + 0]] = v79[v81[3]][v81[73 - (10 + 59)]];
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v1233 = 14 - 11;
											end
										end
									end
								elseif (v82 <= 22) then
									if (v82 <= (1183 - (671 + 492))) then
										v79[v81[2 + 0]] = v64[v81[1218 - (369 + 846)]];
									elseif (v82 == 21) then
										v79[v81[1 + 1]] = v79[v81[3]] * v79[v81[4 + 0]];
									else
										local v1235;
										local v1236;
										local v1235, v1237;
										local v1238;
										local v1239;
										v79[v81[1947 - (1036 + 909)]] = v64[v81[3 + 0]];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v79[v81[205 - (11 + 192)]] = v63[v81[2 + 1]];
										v73 = v73 + (176 - (135 + 40));
										v81 = v69[v73];
										v1239 = v81[4 - 2];
										v1238 = v79[v81[2 + 1]];
										v79[v1239 + (2 - 1)] = v1238;
										v79[v1239] = v1238[v81[5 - 1]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v1239 = v81[178 - (50 + 126)];
										v1235, v1237 = v72(v79[v1239](v79[v1239 + (2 - 1)]));
										v74 = (v1237 + v1239) - (1 + 0);
										v1236 = 1413 - (1233 + 180);
										for v7350 = v1239, v74 do
											v1236 = v1236 + (970 - (522 + 447));
											v79[v7350] = v1235[v1236];
										end
										v73 = v73 + (1422 - (107 + 1314));
										v81 = v69[v73];
										v1239 = v81[2];
										v1235 = {v79[v1239](v13(v79, v1239 + (2 - 1), v74))};
										v1236 = 0;
										for v7353 = v1239, v81[2 + 2] do
											v1236 = v1236 + (1 - 0);
											v79[v7353] = v1235[v1236];
										end
										v73 = v73 + (3 - 2);
										v81 = v69[v73];
										v73 = v81[1913 - (716 + 1194)];
									end
								elseif (v82 <= (1 + 23)) then
									if (v82 > 23) then
										v79[v81[1 + 1]] = v81[506 - (74 + 429)];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[2 + 1]][v79[v81[8 - 4]]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[5 - 3]] = v81[7 - 4];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[435 - (279 + 154)]] = v79[v81[781 - (454 + 324)]][v79[v81[4 + 0]]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2]][v79[v81[20 - (12 + 5)]]] = v79[v81[3 + 1]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2]] = v81[7 - 4];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[1095 - (277 + 816)]] = v79[v81[12 - 9]][v79[v81[4]]];
									else
										v79[v81[1185 - (1058 + 125)]] = v63[v81[3]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[977 - (815 + 160)]] = v79[v81[3]][v81[17 - 13]];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[1 + 1]] = v79[v81[3]][v81[11 - 7]];
										v73 = v73 + (1899 - (41 + 1857));
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[1896 - (1222 + 671)]][v81[10 - 6]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2 - 0]][v81[3]] = v79[v81[1186 - (229 + 953)]];
										v73 = v73 + (1775 - (1111 + 663));
										v81 = v69[v73];
										do
											return;
										end
									end
								elseif (v82 > 25) then
									local v1277;
									v79[v81[1581 - (874 + 705)]] = v81[1 + 2];
									v73 = v73 + 1;
									v81 = v69[v73];
									v1277 = v81[2];
									v79[v1277] = v79[v1277](v13(v79, v1277 + 1 + 0, v81[6 - 3]));
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1 + 1]][v79[v81[682 - (642 + 37)]]] = v79[v81[1 + 3]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[4 - 2]] = v81[457 - (233 + 221)];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[1544 - (718 + 823)] ~= 0;
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2 + 0]][v79[v81[808 - (266 + 539)]]] = v79[v81[11 - 7]];
									v73 = v73 + (1226 - (636 + 589));
									v81 = v69[v73];
									v79[v81[4 - 2]] = v81[3];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[2 + 1] ~= 0;
									v73 = v73 + (1016 - (657 + 358));
									v81 = v69[v73];
									v79[v81[4 - 2]][v79[v81[6 - 3]]] = v79[v81[4]];
									v73 = v73 + (1188 - (1151 + 36));
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[1 + 2];
								else
									v79[v81[5 - 3]] = v81[1835 - (1552 + 280)];
									v73 = v73 + (835 - (64 + 770));
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[3]][v79[v81[3 + 1]]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									for v7356 = v81[1 + 1], v81[3] do
										v79[v7356] = nil;
									end
									v73 = v73 + (1244 - (157 + 1086));
									v81 = v69[v73];
									v79[v81[2]][v79[v81[5 - 2]]] = v79[v81[17 - 13]];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[2 - 0]] = v81[822 - (599 + 220)];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[3 - 1]] = v79[v81[1934 - (1813 + 118)]][v79[v81[3 + 1]]];
									v73 = v73 + 1;
									v81 = v69[v73];
									for v7358 = v81[1219 - (841 + 376)], v81[3] do
										v79[v7358] = nil;
									end
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[2]][v79[v81[1 + 2]]] = v79[v81[10 - 6]];
									v73 = v73 + (860 - (464 + 395));
									v81 = v69[v73];
									v79[v81[5 - 3]] = v81[3];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[840 - (467 + 370)]][v79[v81[8 - 4]]];
								end
							elseif ((v82 <= 39) or (2508 >= 3400)) then
								if (v82 <= (24 + 8)) then
									if (v82 <= (99 - 70)) then
										if (v82 <= 27) then
											v79[v81[1 + 1]] = v79[v81[6 - 3]][v81[524 - (150 + 370)]];
											v73 = v73 + (1283 - (74 + 1208));
											v81 = v69[v73];
											v79[v81[4 - 2]] = v79[v81[14 - 11]][v81[3 + 1]];
											v73 = v73 + (391 - (14 + 376));
											v81 = v69[v73];
											v79[v81[3 - 1]][v81[3]] = v79[v81[3 + 1]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[2 + 0]] = v63[v81[8 - 5]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[2]] = v79[v81[3]][v81[4 + 0]];
											v73 = v73 + 1;
											v81 = v69[v73];
											if v79[v81[80 - (23 + 55)]] then
												v73 = v73 + 1;
											else
												v73 = v81[6 - 3];
											end
										elseif (v82 == (19 + 9)) then
											local v1309 = 0 + 0;
											while true do
												if (v1309 == (1 - 0)) then
													v73 = v73 + 1 + 0;
													v81 = v69[v73];
													v79[v81[903 - (652 + 249)]] = v63[v81[7 - 4]];
													v73 = v73 + (1869 - (708 + 1160));
													v1309 = 5 - 3;
												end
												if (v1309 == (0 - 0)) then
													v79[v81[2]] = v79[v81[30 - (10 + 17)]][v81[1 + 3]];
													v73 = v73 + 1;
													v81 = v69[v73];
													v79[v81[2]][v81[1735 - (1400 + 332)]] = v81[4];
													v1309 = 1;
												end
												if (((3 - 1) == v1309) or (4831 < 1124)) then
													v81 = v69[v73];
													v79[v81[2]] = v79[v81[1911 - (242 + 1666)]][v81[2 + 2]];
													v73 = v73 + 1 + 0;
													v81 = v69[v73];
													v1309 = 3 + 0;
												end
												if (v1309 == (943 - (850 + 90))) then
													v79[v81[3 - 1]][v81[1393 - (360 + 1030)]] = v81[4 + 0];
													v73 = v73 + 1;
													v81 = v69[v73];
													v79[v81[5 - 3]] = v81[3];
													break;
												end
											end
										else
											v79[v81[2 - 0]] = v79[v81[3]][v81[4]];
											v73 = v73 + (1662 - (909 + 752));
											v81 = v69[v73];
											v79[v81[1225 - (109 + 1114)]] = v63[v81[3]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[3 - 1]] = v79[v81[3]][v81[2 + 2]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[244 - (6 + 236)]][v81[2 + 1]] = v79[v81[4 + 0]];
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v79[v81[3 - 1]] = v63[v81[3]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[1135 - (1076 + 57)]] = v79[v81[1 + 2]][v81[693 - (579 + 110)]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[2 + 0]] = v63[v81[2 + 1]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[409 - (174 + 233)]] = v79[v81[3]][v81[11 - 7]];
											v73 = v73 + (1 - 0);
											v81 = v69[v73];
											v79[v81[1 + 1]][v81[1177 - (663 + 511)]] = v79[v81[4 + 0]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[5 - 3]] = v81[2 + 1];
										end
									elseif (v82 <= (70 - 40)) then
										local v151;
										v79[v81[4 - 2]] = v79[v81[2 + 1]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[3 - 1]] = v81[3 + 0];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[1 + 1]] = v81[725 - (478 + 244)];
										v73 = v73 + (518 - (440 + 77));
										v81 = v69[v73];
										v151 = v81[1 + 1];
										v79[v151] = v79[v151](v13(v79, v151 + 1, v81[3]));
										v73 = v73 + (3 - 2);
										v81 = v69[v73];
										v79[v81[1558 - (655 + 901)]][v79[v81[3]]] = v79[v81[1 + 3]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2 + 0]] = v81[3 + 0];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[7 - 5]] = v79[v81[1448 - (695 + 750)]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[6 - 4]] = v81[3];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v79[v81[7 - 5]] = v81[354 - (285 + 66)];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v151 = v81[1312 - (682 + 628)];
										v79[v151] = v79[v151](v13(v79, v151 + 1 + 0, v81[302 - (176 + 123)]));
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2]][v79[v81[3 + 0]]] = v79[v81[4]];
										v73 = v73 + (270 - (239 + 30));
										v81 = v69[v73];
										v79[v81[2]] = v81[1 + 2];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[3 - 1]] = v79[v81[8 - 5]];
										v73 = v73 + (316 - (306 + 9));
										v81 = v69[v73];
										v79[v81[2]] = v81[3];
										v73 = v73 + (3 - 2);
										v81 = v69[v73];
										v79[v81[2]] = v81[1 + 2];
										v73 = v73 + 1;
										v81 = v69[v73];
										v151 = v81[2];
										v79[v151] = v79[v151](v13(v79, v151 + 1 + 0, v81[2 + 1]));
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[2]][v79[v81[3]]] = v79[v81[1379 - (1140 + 235)]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2]] = v81[3 + 0];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[54 - (33 + 19)]] = v79[v81[2 + 1]];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[2]] = v81[2 + 1];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v79[v81[2 + 0]] = v81[692 - (586 + 103)];
										v73 = v73 + 1;
										v81 = v69[v73];
										v151 = v81[1 + 1];
										v79[v151] = v79[v151](v13(v79, v151 + (2 - 1), v81[1491 - (1309 + 179)]));
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v79[v81[1 + 1]][v79[v81[7 - 4]]] = v79[v81[4 + 0]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2]] = v81[5 - 2];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v79[v81[611 - (295 + 314)]] = v79[v81[6 - 3]];
										v73 = v73 + (1963 - (1300 + 662));
										v81 = v69[v73];
										v79[v81[2]] = v81[9 - 6];
										v73 = v73 + (1756 - (1178 + 577));
										v81 = v69[v73];
										v79[v81[2]] = v81[2 + 1];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v151 = v81[1407 - (851 + 554)];
										v79[v151] = v79[v151](v13(v79, v151 + 1 + 0, v81[8 - 5]));
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v79[v81[304 - (115 + 187)]][v79[v81[3 + 0]]] = v79[v81[4 + 0]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2]] = v81[11 - 8];
										v73 = v73 + (1162 - (160 + 1001));
										v81 = v69[v73];
										v79[v81[2 + 0]] = v79[v81[3]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[3 - 1]] = v81[361 - (237 + 121)];
										v73 = v73 + (898 - (525 + 372));
										v81 = v69[v73];
										v79[v81[2]] = v81[3];
										v73 = v73 + 1;
										v81 = v69[v73];
										v151 = v81[3 - 1];
										v79[v151] = v79[v151](v13(v79, v151 + 1, v81[9 - 6]));
										v73 = v73 + (143 - (96 + 46));
										v81 = v69[v73];
										v79[v81[779 - (643 + 134)]][v79[v81[2 + 1]]] = v79[v81[4]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[4 - 2]] = v81[11 - 8];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[3 - 1]] = v79[v81[5 - 2]];
										v73 = v73 + (720 - (316 + 403));
										v81 = v69[v73];
										v79[v81[2 + 0]] = v81[8 - 5];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[4 - 2]] = v81[3 + 0];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v151 = v81[6 - 4];
										v79[v151] = v79[v151](v13(v79, v151 + (4 - 3), v81[3]));
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[3 - 1]][v79[v81[1 + 2]]] = v79[v81[7 - 3]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[1 + 1]] = v81[3];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[20 - (12 + 5)]];
										v73 = v73 + (3 - 2);
										v81 = v69[v73];
										v79[v81[2]] = v81[5 - 2];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v79[v81[4 - 2]] = v81[1 + 2];
										v73 = v73 + (1974 - (1656 + 317));
										v81 = v69[v73];
										v151 = v81[2 + 0];
										v79[v151] = v79[v151](v13(v79, v151 + 1 + 0, v81[7 - 4]));
										v73 = v73 + (4 - 3);
										v81 = v69[v73];
										v79[v81[356 - (5 + 349)]][v79[v81[14 - 11]]] = v79[v81[1275 - (266 + 1005)]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[6 - 4]] = v81[3 - 0];
										v73 = v73 + (1697 - (561 + 1135));
										v81 = v69[v73];
										v79[v81[2 - 0]] = v79[v81[9 - 6]];
										v73 = v73 + (1067 - (507 + 559));
										v81 = v69[v73];
										v79[v81[4 - 2]] = v81[9 - 6];
										v73 = v73 + (389 - (212 + 176));
										v81 = v69[v73];
										v79[v81[907 - (250 + 655)]] = v81[8 - 5];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v151 = v81[2 - 0];
										v79[v151] = v79[v151](v13(v79, v151 + 1, v81[1959 - (1869 + 87)]));
										v73 = v73 + (3 - 2);
										v81 = v69[v73];
										v79[v81[1903 - (484 + 1417)]][v79[v81[6 - 3]]] = v79[v81[6 - 2]];
										v73 = v73 + (774 - (48 + 725));
										v81 = v69[v73];
										v79[v81[2]] = v81[4 - 1];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[2 + 0]] = v79[v81[7 - 4]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2]] = v81[3];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2]] = v81[1 + 2];
										v73 = v73 + 1;
										v81 = v69[v73];
										v151 = v81[855 - (152 + 701)];
										v79[v151] = v79[v151](v13(v79, v151 + (1312 - (430 + 881)), v81[2 + 1]));
										v73 = v73 + (896 - (557 + 338));
										v81 = v69[v73];
										v79[v81[1 + 1]][v79[v81[8 - 5]]] = v79[v81[13 - 9]];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[2]] = v81[6 - 3];
										v73 = v73 + (802 - (499 + 302));
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[869 - (39 + 827)]];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[2]] = v81[6 - 3];
										v73 = v73 + (3 - 2);
										v81 = v69[v73];
										v79[v81[2]] = v81[3];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v151 = v81[2];
										v79[v151] = v79[v151](v13(v79, v151 + 1 + 0, v81[8 - 5]));
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2]][v79[v81[4 - 1]]] = v79[v81[4]];
										v73 = v73 + (105 - (103 + 1));
										v81 = v69[v73];
										v79[v81[556 - (475 + 79)]] = v81[6 - 3];
										v73 = v73 + (3 - 2);
										v81 = v69[v73];
										v79[v81[1 + 1]] = v79[v81[3]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[1505 - (1395 + 108)]] = v81[8 - 5];
										v73 = v73 + (1205 - (7 + 1197));
										v81 = v69[v73];
										v79[v81[2]] = v81[2 + 1];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v151 = v81[2];
										v79[v151] = v79[v151](v13(v79, v151 + (320 - (27 + 292)), v81[8 - 5]));
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v79[v81[2]][v79[v81[12 - 9]]] = v79[v81[4]];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v79[v81[2]] = v81[5 - 2];
										v73 = v73 + (140 - (43 + 96));
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[12 - 9]];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v79[v81[2]] = v81[3 + 0];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[3 - 1]] = v81[3];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v151 = v81[3 - 1];
										v79[v151] = v79[v151](v13(v79, v151 + 1 + 0, v81[3]));
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2]][v79[v81[1754 - (1414 + 337)]]] = v79[v81[1944 - (1642 + 298)]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[4 - 2]] = v81[8 - 5];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[1 + 1]] = v79[v81[3 + 0]];
										v73 = v73 + (973 - (357 + 615));
										v81 = v69[v73];
										v79[v81[2]] = v81[3 + 0];
									elseif (v82 == 31) then
										local v1328 = 0 - 0;
										while true do
											if (v1328 == (0 + 0)) then
												v79[v81[4 - 2]] = v81[3 + 0] ~= (0 + 0);
												v73 = v73 + 1 + 0;
												break;
											end
										end
									else
										local v1329;
										local v1330, v1331;
										local v1332;
										local v1333;
										v1333 = v81[1303 - (384 + 917)];
										v1332 = v79[v81[700 - (128 + 569)]];
										v79[v1333 + (1544 - (1407 + 136))] = v1332;
										v79[v1333] = v1332[v81[1891 - (687 + 1200)]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[1712 - (556 + 1154)]] = v64[v81[10 - 7]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[97 - (9 + 86)]] = v79[v81[424 - (275 + 146)]][v81[1 + 3]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[66 - (29 + 35)]] = v79[v81[13 - 10]];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v1333 = v81[8 - 6];
										v1330, v1331 = v72(v79[v1333](v79[v1333 + 1 + 0]));
										v74 = (v1331 + v1333) - 1;
										v1329 = 0;
										for v7360 = v1333, v74 do
											v1329 = v1329 + 1;
											v79[v7360] = v1330[v1329];
										end
										v73 = v73 + (1013 - (53 + 959));
										v81 = v69[v73];
										v1333 = v81[410 - (312 + 96)];
										v79[v1333] = v79[v1333](v13(v79, v1333 + (1 - 0), v74));
										v73 = v73 + (286 - (147 + 138));
										v81 = v69[v73];
										v79[v81[901 - (813 + 86)]] = v79[v81[3 + 0]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2]] = v63[v81[4 - 1]];
										v73 = v73 + (493 - (18 + 474));
										v81 = v69[v73];
										v1333 = v81[2];
										v1332 = v79[v81[3]];
										v79[v1333 + 1 + 0] = v1332;
										v79[v1333] = v1332[v81[12 - 8]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[1088 - (860 + 226)]] = v63[v81[3]];
										v73 = v73 + (304 - (121 + 182));
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[1 + 2]];
										v73 = v73 + (1241 - (988 + 252));
										v81 = v69[v73];
										v79[v81[2]] = v63[v81[3]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[1 + 1]] = v64[v81[3]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v1333 = v81[1972 - (49 + 1921)];
										v1330, v1331 = v72(v79[v1333]());
										v74 = (v1331 + v1333) - 1;
										v1329 = 890 - (223 + 667);
										for v7363 = v1333, v74 do
											v1329 = v1329 + 1;
											v79[v7363] = v1330[v1329];
										end
										v73 = v73 + (53 - (51 + 1));
										v81 = v69[v73];
										v1333 = v81[2 - 0];
										v79[v1333](v13(v79, v1333 + (1 - 0), v74));
										v73 = v73 + (1126 - (146 + 979));
										v81 = v69[v73];
										v73 = v81[1 + 2];
									end
								elseif (v82 <= (640 - (311 + 294))) then
									if (v82 <= 33) then
										v79[v81[5 - 3]][v79[v81[2 + 1]]] = v79[v81[1447 - (496 + 947)]];
										v73 = v73 + (1359 - (1233 + 125));
										v81 = v69[v73];
										v79[v81[1 + 1]] = v81[3 + 0];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[1 + 1]] = v79[v81[1648 - (963 + 682)]][v79[v81[4]]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2 + 0]] = v81[1507 - (504 + 1000)];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2]][v79[v81[3]]] = v79[v81[4]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[1 + 1]] = v81[4 - 1];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[2 + 1]][v79[v81[186 - (156 + 26)]]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2 - 0]] = v81[3] ~= (164 - (149 + 15));
										v73 = v73 + (961 - (890 + 70));
										v81 = v69[v73];
										v79[v81[2]][v79[v81[120 - (39 + 78)]]] = v79[v81[486 - (14 + 468)]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[4 - 2]] = v81[8 - 5];
									elseif (v82 > (18 + 16)) then
										local v1364;
										v79[v81[2 + 0]][v81[1 + 2]] = v79[v81[2 + 2]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[3 - 1]] = v64[v81[3 + 0]];
										v73 = v73 + (3 - 2);
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[1 + 2]][v81[55 - (12 + 39)]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[5 - 3]] = v81[10 - 7];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2 + 0]] = v81[7 - 4];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[9 - 7]] = v81[3];
										v73 = v73 + (1711 - (1596 + 114));
										v81 = v69[v73];
										v79[v81[2]] = v81[7 - 4];
										v73 = v73 + (714 - (164 + 549));
										v81 = v69[v73];
										v1364 = v81[1440 - (1059 + 379)];
										v79[v1364] = v79[v1364](v13(v79, v1364 + (1 - 0), v81[2 + 1]));
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[394 - (145 + 247)]][v81[3 + 0]] = v79[v81[2 + 2]];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[1 + 1]] = v63[v81[3]];
									else
										v79[v81[2]] = v81[3 + 0];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2 - 0]] = v79[v81[723 - (254 + 466)]][v79[v81[564 - (544 + 16)]]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[5 - 3]][v79[v81[631 - (294 + 334)]]] = v79[v81[257 - (236 + 17)]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2 + 0]] = v81[3];
										v73 = v73 + (3 - 2);
										v81 = v69[v73];
										v79[v81[9 - 7]] = v79[v81[2 + 1]][v79[v81[4 + 0]]];
										v73 = v73 + (795 - (413 + 381));
										v81 = v69[v73];
										v79[v81[1 + 1]] = v81[5 - 2];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[4 - 2]] = v79[v81[1973 - (582 + 1388)]][v79[v81[6 - 2]]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2 + 0]] = v81[367 - (326 + 38)];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[2 - 0]] = v79[v81[623 - (47 + 573)]][v79[v81[2 + 2]]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2]] = v81[3];
									end
								elseif (v82 <= (157 - 120)) then
									if (v82 == (58 - 22)) then
										local v1400 = 1664 - (1269 + 395);
										local v1401;
										while true do
											if (v1400 == (496 - (76 + 416))) then
												v79[v81[2]] = v81[446 - (319 + 124)];
												v73 = v73 + 1;
												v81 = v69[v73];
												v79[v81[4 - 2]] = v79[v81[1010 - (564 + 443)]][v79[v81[10 - 6]]];
												v1400 = 463 - (337 + 121);
											end
											if ((v1400 == (17 - 11)) or (2324 >= 4755)) then
												v81 = v69[v73];
												v79[v81[6 - 4]][v79[v81[1914 - (1261 + 650)]]] = v79[v81[2 + 2]];
												v73 = v73 + 1;
												v81 = v69[v73];
												v1400 = 11 - 4;
											end
											if ((1824 - (772 + 1045)) == v1400) then
												v1401 = v81[1 + 1];
												v79[v1401] = v79[v1401](v13(v79, v1401 + (145 - (102 + 42)), v81[3]));
												break;
											end
											if ((3315 >= 2353) and ((1845 - (1524 + 320)) == v1400)) then
												v79[v81[1272 - (1049 + 221)]] = v79[v81[159 - (18 + 138)]][v79[v81[9 - 5]]];
												v73 = v73 + (1103 - (67 + 1035));
												v81 = v69[v73];
												v79[v81[350 - (136 + 212)]] = v81[12 - 9];
												v1400 = 2;
											end
											if (v1400 == (2 + 0)) then
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v79[v81[1606 - (240 + 1364)]] = v79[v81[3]][v79[v81[1086 - (1050 + 32)]]];
												v73 = v73 + (3 - 2);
												v1400 = 2 + 1;
											end
											if (5 == v1400) then
												v73 = v73 + (1056 - (331 + 724));
												v81 = v69[v73];
												v79[v81[2]] = v81[1 + 2];
												v73 = v73 + (645 - (269 + 375));
												v1400 = 731 - (267 + 458);
											end
											if (v1400 == (0 + 0)) then
												v1401 = nil;
												v79[v81[2]] = v81[5 - 2];
												v73 = v73 + (819 - (667 + 151));
												v81 = v69[v73];
												v1400 = 1498 - (1410 + 87);
											end
											if (v1400 == (1900 - (1504 + 393))) then
												v81 = v69[v73];
												v79[v81[5 - 3]][v79[v81[7 - 4]]] = v79[v81[4]];
												v73 = v73 + (797 - (461 + 335));
												v81 = v69[v73];
												v1400 = 1 + 3;
											end
										end
									else
										v79[v81[1763 - (1730 + 31)]][v81[1670 - (728 + 939)]] = v81[14 - 10];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v79[v81[4 - 2]][v81[1071 - (138 + 930)]] = v79[v81[4 + 0]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2 + 0]] = v64[v81[12 - 9]];
										v73 = v73 + (1767 - (459 + 1307));
										v81 = v69[v73];
										v79[v81[1872 - (474 + 1396)]] = v79[v81[5 - 2]][v81[4 + 0]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[5 - 3]] = v79[v81[1 + 2]][v81[13 - 9]];
										v73 = v73 + 1;
										v81 = v69[v73];
										if not v79[v81[8 - 6]] then
											v73 = v73 + (592 - (562 + 29));
										else
											v73 = v81[3];
										end
									end
								elseif ((542 <= 3764) and (v82 == (33 + 5))) then
									v79[v81[1421 - (374 + 1045)]] = v81[3 + 0] ~= (0 - 0);
									v73 = v73 + (639 - (448 + 190));
									v81 = v69[v73];
									v79[v81[1 + 1]][v79[v81[3]]] = v79[v81[2 + 2]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]] = v81[2 + 1];
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v79[v81[5 - 3]] = v79[v81[1497 - (1307 + 187)]][v79[v81[15 - 11]]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[4 - 2]] = v81[8 - 5] ~= (683 - (232 + 451));
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]][v79[v81[3 + 0]]] = v79[v81[4]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[566 - (510 + 54)]][v79[v81[5 - 2]]] = v79[v81[4]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[38 - (13 + 23)]] = v81[5 - 2];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[3 - 1]] = v79[v81[1091 - (830 + 258)]][v79[v81[14 - 10]]];
									v73 = v73 + 1;
									v81 = v69[v73];
									for v7366 = v81[2 + 0], v81[3 + 0] do
										v79[v7366] = nil;
									end
								else
									local v1429 = 1441 - (860 + 581);
									while true do
										if ((809 <= 4959) and (v1429 == (0 - 0))) then
											v79[v81[2]] = v63[v81[3]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[2 + 0]] = v79[v81[244 - (237 + 4)]][v81[9 - 5]];
											v1429 = 2 - 1;
										end
										if ((1 - 0) == v1429) then
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[2 + 0]] = v79[v81[11 - 8]][v81[4]];
											v73 = v73 + 1 + 0;
											v1429 = 2 + 0;
										end
										if (v1429 == (1429 - (85 + 1341))) then
											do
												return;
											end
											break;
										end
										if ((v1429 == (3 - 1)) or (326 >= 4323)) then
											v81 = v69[v73];
											v79[v81[2]][v81[8 - 5]] = v79[v81[376 - (45 + 327)]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v1429 = 5 - 2;
										end
									end
								end
							elseif ((4306 > 647) and (v82 <= 46)) then
								if (v82 <= (544 - (444 + 58))) then
									if ((1480 > 1456) and (v82 <= (18 + 22))) then
										local v243 = 0 + 0;
										local v244;
										while true do
											if ((537 <= 1617) and ((1 + 1) == v243)) then
												v73 = v73 + (2 - 1);
												v81 = v69[v73];
												v79[v81[1734 - (64 + 1668)]] = v81[1976 - (1227 + 746)];
												v73 = v73 + (2 - 1);
												v243 = 3;
											end
											if (v243 == (1 - 0)) then
												v79[v81[496 - (415 + 79)]] = v81[1 + 2];
												v73 = v73 + 1;
												v81 = v69[v73];
												v79[v81[493 - (142 + 349)]] = v81[2 + 1];
												v243 = 2;
											end
											if (v243 == (3 - 0)) then
												v81 = v69[v73];
												v244 = v81[1 + 1];
												v79[v244] = v79[v244](v13(v79, v244 + 1 + 0, v81[3]));
												v73 = v73 + (2 - 1);
												v243 = 1868 - (1710 + 154);
											end
											if (v243 == (322 - (200 + 118))) then
												v81 = v69[v73];
												v79[v81[1 + 1]][v81[3]] = v79[v81[6 - 2]];
												v73 = v73 + 1;
												v81 = v69[v73];
												v243 = 7 - 2;
											end
											if (v243 == (5 + 0)) then
												v79[v81[2 + 0]] = v81[2 + 1];
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v73 = v81[6 - 3];
												break;
											end
											if (v243 == (1250 - (363 + 887))) then
												v244 = nil;
												v79[v81[2 - 0]] = v79[v81[14 - 11]][v81[1 + 3]];
												v73 = v73 + (2 - 1);
												v81 = v69[v73];
												v243 = 1 + 0;
											end
										end
									elseif (v82 == (1705 - (674 + 990))) then
										local v1430;
										local v1431;
										v79[v81[1 + 1]] = v63[v81[2 + 1]];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[1058 - (507 + 548)]][v81[841 - (289 + 548)]];
										v73 = v73 + (1819 - (821 + 997));
										v81 = v69[v73];
										v79[v81[257 - (195 + 60)]] = {};
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[1503 - (251 + 1250)]][v79[v81[8 - 5]]] = v79[v81[3 + 1]];
										v73 = v73 + (1033 - (809 + 223));
										v81 = v69[v73];
										v79[v81[2]] = v63[v81[3 - 0]];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[6 - 4]] = v79[v81[3 + 0]][v81[3 + 1]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2]] = {};
										v73 = v73 + (618 - (14 + 603));
										v81 = v69[v73];
										v79[v81[2]][v79[v81[3]]] = v79[v81[4]];
										v73 = v73 + (130 - (118 + 11));
										v81 = v69[v73];
										v79[v81[1 + 1]] = v63[v81[3]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[5 - 3]] = v79[v81[952 - (551 + 398)]][v81[4]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[1 + 1]] = {};
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2 + 0]][v79[v81[11 - 8]]] = v79[v81[9 - 5]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[11 - 8]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[1 + 1]] = v64[v81[3]];
										v73 = v73 + (90 - (40 + 49));
										v81 = v69[v73];
										v1431 = v81[7 - 5];
										v1430 = v79[v81[493 - (99 + 391)]];
										v79[v1431 + 1 + 0] = v1430;
										v79[v1431] = v1430[v81[17 - 13]];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[2 + 0]] = v63[v81[7 - 4]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[1606 - (1032 + 572)]] = v79[v81[3]][v81[4]];
										v73 = v73 + (418 - (203 + 214));
										v81 = v69[v73];
										v1431 = v81[2];
										v79[v1431] = v79[v1431](v13(v79, v1431 + (1818 - (568 + 1249)), v81[3 + 0]));
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v1431 = v81[7 - 5];
										v1430 = v79[v81[3]];
										v79[v1431 + (1307 - (913 + 393))] = v1430;
										v79[v1431] = v1430[v81[11 - 7]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2 - 0]] = v63[v81[413 - (269 + 141)]];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[1984 - (362 + 1619)]][v81[1629 - (950 + 675)]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v1431 = v81[1 + 1];
										v79[v1431] = v79[v1431](v13(v79, v1431 + (1180 - (216 + 963)), v81[1290 - (485 + 802)]));
										v73 = v73 + (560 - (432 + 127));
										v81 = v69[v73];
										v79[v81[1075 - (1065 + 8)]] = v79[v81[2 + 1]];
										v73 = v73 + (1602 - (635 + 966));
										v81 = v69[v73];
										v79[v81[2 + 0]] = v81[45 - (5 + 37)];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v73 = v81[2 + 1];
									else
										local v1473;
										local v1474;
										v1474 = v81[2 - 0];
										v1473 = v79[v81[3]];
										v79[v1474 + 1 + 0] = v1473;
										v79[v1474] = v1473[v81[4]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[3 - 1]] = v63[v81[11 - 8]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[5 - 2]][v81[4]];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v1474 = v81[2];
										v79[v1474] = v79[v1474](v13(v79, v1474 + 1, v81[3 + 0]));
										v73 = v73 + (530 - (318 + 211));
										v81 = v69[v73];
										v79[v81[9 - 7]] = v79[v81[1590 - (963 + 624)]];
									end
								elseif (v82 <= 44) then
									if ((4683 == 4683) and (v82 > (19 + 24))) then
										v63[v81[849 - (518 + 328)]] = v79[v81[4 - 2]];
									elseif ((v79[v81[2]] > v79[v81[4]]) or (1653 > 3662)) then
										v73 = v73 + (1 - 0);
									else
										v73 = v73 + v81[320 - (301 + 16)];
									end
								elseif (v82 == (131 - 86)) then
									local v1490 = 0 - 0;
									local v1491;
									while true do
										if (v1490 == 3) then
											v81 = v69[v73];
											v79[v81[5 - 3]] = not v79[v81[3 + 0]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v1490 = 4;
										end
										if (v1490 == 1) then
											v79[v81[2 + 0]] = v79[v81[5 - 2]][v81[3 + 1]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[6 - 4]] = v63[v81[1 + 2]];
											v1490 = 2;
										end
										if ((v1490 == (1023 - (829 + 190))) or (4895 <= 3061)) then
											v1491 = v81[7 - 5];
											v79[v1491](v13(v79, v1491 + (1 - 0), v81[3 - 0]));
											break;
										end
										if (v1490 == 2) then
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v79[v81[1 + 1]] = v79[v81[1 + 2]][v81[4]];
											v73 = v73 + (2 - 1);
											v1490 = 3 + 0;
										end
										if (v1490 == (613 - (520 + 93))) then
											v1491 = nil;
											v79[v81[278 - (259 + 17)]] = v63[v81[1 + 2]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v1490 = 1;
										end
									end
								else
									local v1492 = 0 + 0;
									local v1493;
									local v1494;
									while true do
										if ((3164 == 3164) and (v1492 == (6 - 4))) then
											v79[v81[593 - (396 + 195)]] = v63[v81[8 - 5]];
											v73 = v73 + (1762 - (440 + 1321));
											v81 = v69[v73];
											v79[v81[1831 - (1059 + 770)]] = v79[v81[13 - 10]][v81[549 - (424 + 121)]];
											v1492 = 1 + 2;
										end
										if (((1350 - (641 + 706)) == v1492) or (1658 == 250)) then
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v1494 = v81[442 - (249 + 191)];
											v79[v1494] = v79[v1494](v13(v79, v1494 + (4 - 3), v81[3]));
											v1492 = 2 + 2;
										end
										if (v1492 == 1) then
											v79[v1494 + (3 - 2)] = v1493;
											v79[v1494] = v1493[v81[431 - (183 + 244)]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v1492 = 732 - (434 + 296);
										end
										if ((4776 == 4776) and (v1492 == (0 - 0))) then
											v1493 = nil;
											v1494 = nil;
											v1494 = v81[514 - (169 + 343)];
											v1493 = v79[v81[3]];
											v1492 = 1;
										end
										if ((4 + 0) == v1492) then
											v73 = v73 + (1 - 0);
											v81 = v69[v73];
											if v79[v81[2]] then
												v73 = v73 + (2 - 1);
											else
												v73 = v81[3 + 0];
											end
											break;
										end
									end
								end
							elseif ((v82 <= (138 - 89)) or (731 >= 4769)) then
								if (v82 <= 47) then
									local v245 = 1123 - (651 + 472);
									local v246;
									local v247;
									while true do
										if (v245 == 6) then
											v247 = v81[2 + 0];
											v246 = v79[v81[2 + 1]];
											v79[v247 + (1 - 0)] = v246;
											v79[v247] = v246[v79[v81[487 - (397 + 86)]]];
											v245 = 883 - (423 + 453);
										end
										if (v245 == (1 + 4)) then
											v81 = v69[v73];
											v79[v81[1 + 1]] = v81[3];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v245 = 5 + 1;
										end
										if (((0 + 0) == v245) or (497 == 2689)) then
											v246 = nil;
											v247 = nil;
											v79[v81[2]][v79[v81[1193 - (50 + 1140)]]] = v79[v81[4 + 0]];
											v73 = v73 + 1 + 0;
											v245 = 1 + 0;
										end
										if (v245 == (3 - 0)) then
											v79[v247](v13(v79, v247 + 1, v81[3]));
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[2]] = v81[599 - (157 + 439)];
											v245 = 6 - 2;
										end
										if (v245 == (12 - 8)) then
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v79[v81[920 - (782 + 136)]] = v79[v81[3]][v79[v81[859 - (112 + 743)]]];
											v73 = v73 + (1172 - (1026 + 145));
											v245 = 1 + 4;
										end
										if ((558 <= 663) and ((726 - (493 + 225)) == v245)) then
											v81 = v69[v73];
											v79[v81[7 - 5]] = v81[2 + 1];
											break;
										end
										if ((70 <= 4827) and (v245 == (18 - 11))) then
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[5 - 3]] = {};
											v73 = v73 + 1 + 0;
											v245 = 13 - 5;
										end
										if (v245 == (1597 - (210 + 1385))) then
											v79[v81[1691 - (1201 + 488)]] = v79[v81[2 + 1]][v79[v81[6 - 2]]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v247 = v81[2 - 0];
											v245 = 3;
										end
										if ((v245 == (586 - (352 + 233))) or (1253 <= 496)) then
											v81 = v69[v73];
											v79[v81[4 - 2]] = v81[2 + 1];
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v245 = 2;
										end
									end
								elseif (v82 > 48) then
									local v1495 = 574 - (489 + 85);
									local v1496;
									local v1497;
									local v1498;
									local v1499;
									local v1500;
									while true do
										if (v1495 == (1502 - (277 + 1224))) then
											v1500 = nil;
											v79[v81[2]] = v63[v81[1496 - (663 + 830)]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v1495 = 4 - 2;
										end
										if (v1495 == (881 - (461 + 414))) then
											v1500 = v81[1 + 1];
											v1496 = {v79[v1500](v13(v79, v1500 + 1 + 0, v74))};
											v1497 = 0 + 0;
											for v12364 = v1500, v81[4] do
												local v12365 = 250 - (172 + 78);
												while true do
													if ((v12365 == (0 - 0)) or (4189 <= 3370)) then
														v1497 = v1497 + 1 + 0;
														v79[v12364] = v1496[v1497];
														break;
													end
												end
											end
											v1495 = 7;
										end
										if (v1495 == (0 - 0)) then
											v1496 = nil;
											v1497 = nil;
											v1496, v1498 = nil;
											v1499 = nil;
											v1495 = 1 + 0;
										end
										if ((1785 >= 937) and (v1495 == (1 + 1))) then
											v79[v81[3 - 1]] = v79[v81[3]][v81[4]];
											v73 = v73 + (1 - 0);
											v81 = v69[v73];
											v1500 = v81[1 + 1];
											v1495 = 2 + 1;
										end
										if ((v1495 == (2 + 1)) or (4696 < 3261)) then
											v1499 = v79[v81[11 - 8]];
											v79[v1500 + 1] = v1499;
											v79[v1500] = v1499[v81[9 - 5]];
											v73 = v73 + 1 + 0;
											v1495 = 4;
										end
										if (v1495 == (3 + 1)) then
											v81 = v69[v73];
											v1500 = v81[2];
											v1496, v1498 = v72(v79[v1500](v79[v1500 + 1]));
											v74 = (v1498 + v1500) - (448 - (133 + 314));
											v1495 = 5;
										end
										if (v1495 == (2 + 5)) then
											v73 = v73 + (214 - (199 + 14));
											v81 = v69[v73];
											v73 = v81[10 - 7];
											break;
										end
										if (v1495 == (1554 - (647 + 902))) then
											v1497 = 0 - 0;
											for v12366 = v1500, v74 do
												v1497 = v1497 + (234 - (85 + 148));
												v79[v12366] = v1496[v1497];
											end
											v73 = v73 + (1290 - (426 + 863));
											v81 = v69[v73];
											v1495 = 6;
										end
									end
								else
									local v1501;
									local v1502, v1503;
									local v1504;
									local v1505;
									v1505 = v81[9 - 7];
									v1504 = v79[v81[1657 - (873 + 781)]];
									v79[v1505 + (1 - 0)] = v1504;
									v79[v1505] = v1504[v81[10 - 6]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[7 - 5]] = v63[v81[3]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2 - 0]] = v63[v81[8 - 5]];
									v73 = v73 + (1948 - (414 + 1533));
									v81 = v69[v73];
									v79[v81[2 + 0]] = v64[v81[558 - (443 + 112)]];
									v73 = v73 + (1480 - (888 + 591));
									v81 = v69[v73];
									v1505 = v81[5 - 3];
									v1502, v1503 = v72(v79[v1505]());
									v74 = (v1503 + v1505) - 1;
									v1501 = 0 + 0;
									for v7417 = v1505, v74 do
										local v7418 = 0 - 0;
										while true do
											if ((814 <= 1479) and (v7418 == (0 + 0))) then
												v1501 = v1501 + 1;
												v79[v7417] = v1502[v1501];
												break;
											end
										end
									end
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v1505 = v81[2];
									v79[v1505] = v79[v1505](v13(v79, v1505 + 1 + 0, v74));
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									if not v79[v81[3 - 1]] then
										v73 = v73 + (1679 - (136 + 1542));
									else
										v73 = v81[9 - 6];
									end
								end
							elseif (v82 <= (51 + 0)) then
								if (v82 == (79 - 29)) then
									local v1520;
									local v1521;
									v1521 = v81[2 + 0];
									v1520 = v79[v81[489 - (68 + 418)]];
									v79[v1521 + 1] = v1520;
									v79[v1521] = v1520[v81[10 - 6]];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[2]] = v63[v81[3 + 0]];
									v73 = v73 + (1093 - (770 + 322));
									v81 = v69[v73];
									v79[v81[1 + 1]] = v79[v81[1 + 2]][v81[4]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v1521 = v81[2 - 0];
									v79[v1521] = v79[v1521](v13(v79, v1521 + (1 - 0), v81[7 - 4]));
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									if (not v79[v81[2 + 0]] or (3949 > 4367)) then
										v73 = v73 + (1 - 0);
									else
										v73 = v81[2 + 1];
									end
								else
									v79[v81[2 + 0]] = v81[3];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[7 - 5]] = v81[3 - 0] ~= 0;
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]][v79[v81[13 - 10]]] = v79[v81[13 - 9]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[9 - 7]] = v81[834 - (762 + 69)];
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[2 + 1];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[1 + 1]][v79[v81[3]]] = v79[v81[1 + 3]];
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v79[v81[159 - (8 + 149)]] = v81[1323 - (1199 + 121)];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[2]] = v64[v81[6 - 3]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[6 - 4]] = v81[6 - 3];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[1810 - (518 + 1289)]][v79[v81[6 - 2]]];
								end
							elseif (v82 == 52) then
								local v1551;
								local v1552;
								v79[v81[1 + 1]] = v64[v81[3 - 0]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[472 - (304 + 165)]][v81[4 + 0]];
								v73 = v73 + (161 - (54 + 106));
								v81 = v69[v73];
								v79[v81[1971 - (1618 + 351)]] = v63[v81[3 + 0]];
								v73 = v73 + (1017 - (10 + 1006));
								v81 = v69[v73];
								v79[v81[1 + 1]] = v64[v81[1 + 2]];
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[1036 - (912 + 121)]][v81[2 + 2]];
								v73 = v73 + (1290 - (1140 + 149));
								v81 = v69[v73];
								v79[v81[2 + 0]] = v79[v81[3]][v81[5 - 1]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v1552 = v81[6 - 4];
								v79[v1552] = v79[v1552](v13(v79, v1552 + 1, v81[5 - 2]));
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[6 - 4]] = v64[v81[189 - (165 + 21)]];
								v73 = v73 + (112 - (61 + 50));
								v81 = v69[v73];
								v79[v81[1 + 1]] = v79[v81[3]][v81[19 - 15]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[1 + 1]] = v63[v81[1463 - (1295 + 165)]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v64[v81[2 + 1]];
								v73 = v73 + (1398 - (819 + 578));
								v81 = v69[v73];
								v79[v81[1404 - (331 + 1071)]] = v79[v81[746 - (588 + 155)]][v81[4]];
								v73 = v73 + (1283 - (546 + 736));
								v81 = v69[v73];
								v79[v81[1939 - (1834 + 103)]] = v79[v81[2 + 1]][v81[4]];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v1552 = v81[1768 - (1536 + 230)];
								v79[v1552] = v79[v1552](v13(v79, v1552 + 1, v81[494 - (128 + 363)]));
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v63[v81[7 - 4]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v1552 = v81[1 + 1];
								v1551 = v79[v81[4 - 1]];
								v79[v1552 + (2 - 1)] = v1551;
								v79[v1552] = v1551[v81[9 - 5]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1011 - (615 + 394)]] = v63[v81[3]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[3 + 0]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[5 - 3]] = {};
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[8 - 6]] = v63[v81[654 - (59 + 592)]];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[4 - 1]][v81[3 + 1]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[173 - (70 + 101)]][v79[v81[7 - 4]]] = v81[3 + 1];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v1552 = v81[243 - (123 + 118)];
								v79[v1552] = v79[v1552](v13(v79, v1552 + 1, v81[1 + 2]));
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v1552 = v81[1401 - (653 + 746)];
								v1551 = v79[v81[3]];
								v79[v1552 + 1] = v1551;
								v79[v1552] = v1551[v81[7 - 3]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v1552 = v81[5 - 3];
								v79[v1552](v79[v1552 + 1 + 0]);
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 + 0]] = v63[v81[1 + 2]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v1552 = v81[1 + 1];
								v1551 = v79[v81[3]];
								v79[v1552 + (2 - 1)] = v1551;
								v79[v1552] = v1551[v81[4 + 0]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[3 - 1]] = v63[v81[1237 - (885 + 349)]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[8 - 5]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[5 - 3]] = {};
								v73 = v73 + (969 - (915 + 53));
								v81 = v69[v73];
								v79[v81[2]] = v63[v81[3]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[803 - (768 + 33)]] = v79[v81[3]][v81[4]];
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v79[v81[2 - 0]][v79[v81[331 - (287 + 41)]]] = v81[851 - (638 + 209)];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v1552 = v81[1688 - (96 + 1590)];
								v79[v1552] = v79[v1552](v13(v79, v1552 + 1, v81[1675 - (741 + 931)]));
								v73 = v73 + 1;
								v81 = v69[v73];
								v1552 = v81[1 + 1];
								v1551 = v79[v81[8 - 5]];
								v79[v1552 + 1] = v1551;
								v79[v1552] = v1551[v81[18 - 14]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v1552 = v81[2];
								v79[v1552](v79[v1552 + 1 + 0]);
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[7 - 5]] = v64[v81[1 + 2]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v79[v81[12 - 9]][v81[4 + 0]];
								v73 = v73 + (495 - (64 + 430));
								v81 = v69[v73];
								v79[v81[2]] = v63[v81[3 + 0]];
								v73 = v73 + (364 - (106 + 257));
								v81 = v69[v73];
								v1552 = v81[2 + 0];
								v79[v1552](v79[v1552 + (722 - (496 + 225))]);
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[3 - 1]] = v63[v81[14 - 11]];
								v73 = v73 + (1659 - (256 + 1402));
								v81 = v69[v73];
								v1552 = v81[1901 - (30 + 1869)];
								v1551 = v79[v81[3]];
								v79[v1552 + (1370 - (213 + 1156))] = v1551;
								v79[v1552] = v1551[v81[4]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v1552 = v81[190 - (96 + 92)];
								v79[v1552](v79[v1552 + 1 + 0]);
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[901 - (142 + 757)]] = v63[v81[3 + 0]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v1552 = v81[81 - (32 + 47)];
								v1551 = v79[v81[1980 - (1053 + 924)]];
								v79[v1552 + 1 + 0] = v1551;
								v79[v1552] = v1551[v81[6 - 2]];
								v73 = v73 + (1649 - (685 + 963));
								v81 = v69[v73];
								v1552 = v81[3 - 1];
								v79[v1552](v79[v1552 + 1]);
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								do
									return;
								end
							else
								local v1622 = 1709 - (541 + 1168);
								local v1623;
								while true do
									if ((1610 - (645 + 952)) == v1622) then
										v73 = v73 + (839 - (669 + 169));
										v81 = v69[v73];
										v79[v81[6 - 4]][v79[v81[6 - 3]]] = v79[v81[2 + 2]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[1 + 1]] = v81[768 - (181 + 584)];
										v73 = v73 + (1396 - (665 + 730));
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[8 - 5]];
										v1622 = 28 - 14;
									end
									if (v1622 == (1374 - (540 + 810))) then
										v81 = v69[v73];
										v79[v81[7 - 5]] = v81[8 - 5];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[206 - (166 + 37)]];
										v73 = v73 + (1882 - (22 + 1859));
										v81 = v69[v73];
										v79[v81[1774 - (843 + 929)]] = v81[265 - (30 + 232)];
										v73 = v73 + (2 - 1);
										v1622 = 802 - (55 + 722);
									end
									if (v1622 == (0 - 0)) then
										v1623 = nil;
										v1623 = v81[1677 - (78 + 1597)];
										v79[v1623] = v79[v1623](v13(v79, v1623 + 1 + 0, v81[3 + 0]));
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[551 - (305 + 244)]][v79[v81[3 + 0]]] = v79[v81[4]];
										v73 = v73 + (106 - (95 + 10));
										v81 = v69[v73];
										v79[v81[2 + 0]] = v81[9 - 6];
										v1622 = 1 - 0;
									end
									if (v1622 == (773 - (592 + 170))) then
										v81 = v69[v73];
										v79[v81[6 - 4]][v79[v81[7 - 4]]] = v79[v81[2 + 2]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[4 - 2]] = v81[1 + 2];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[5 - 2]];
										v73 = v73 + 1;
										v1622 = 519 - (353 + 154);
									end
									if ((2705 < 4559) and ((23 - 5) == v1622)) then
										v81 = v69[v73];
										v79[v81[2 - 0]] = v79[v81[3 + 0]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2]] = v81[3];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2 - 0]] = v81[5 - 2];
										v73 = v73 + 1;
										v1622 = 44 - 25;
									end
									if (v1622 == 7) then
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[88 - (7 + 79)]] = v81[3];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[183 - (24 + 157)]] = v79[v81[5 - 2]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2]] = v81[6 - 3];
										v1622 = 8;
									end
									if (v1622 == (5 + 12)) then
										v1623 = v81[4 - 2];
										v79[v1623] = v79[v1623](v13(v79, v1623 + 1, v81[383 - (262 + 118)]));
										v73 = v73 + (1084 - (1038 + 45));
										v81 = v69[v73];
										v79[v81[3 - 1]][v79[v81[3]]] = v79[v81[234 - (19 + 211)]];
										v73 = v73 + (114 - (88 + 25));
										v81 = v69[v73];
										v79[v81[4 - 2]] = v81[2 + 1];
										v73 = v73 + 1 + 0;
										v1622 = 1054 - (1007 + 29);
									end
									if (v1622 == (2 + 4)) then
										v81 = v69[v73];
										v79[v81[4 - 2]] = v81[14 - 11];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v1623 = v81[813 - (340 + 471)];
										v79[v1623] = v79[v1623](v13(v79, v1623 + (2 - 1), v81[3]));
										v73 = v73 + (590 - (276 + 313));
										v81 = v69[v73];
										v79[v81[4 - 2]][v79[v81[3 + 0]]] = v79[v81[2 + 2]];
										v1622 = 1 + 6;
									end
									if ((v1622 == 10) or (3310 == 4157)) then
										v79[v81[2]] = v81[3];
										v73 = v73 + (1973 - (495 + 1477));
										v81 = v69[v73];
										v79[v81[5 - 3]] = v81[2 + 1];
										v73 = v73 + 1;
										v81 = v69[v73];
										v1623 = v81[405 - (342 + 61)];
										v79[v1623] = v79[v1623](v13(v79, v1623 + 1 + 0, v81[168 - (4 + 161)]));
										v73 = v73 + 1 + 0;
										v1622 = 34 - 23;
									end
									if ((373 == 373) and (v1622 == (41 - 25))) then
										v79[v81[499 - (322 + 175)]] = v79[v81[566 - (173 + 390)]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2]] = v81[317 - (203 + 111)];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2 + 0]] = v81[8 - 5];
										v73 = v73 + 1;
										v81 = v69[v73];
										v1622 = 16 + 1;
									end
									if (v1622 == (727 - (57 + 649))) then
										v73 = v73 + (385 - (328 + 56));
										v81 = v69[v73];
										v1623 = v81[2];
										v79[v1623] = v79[v1623](v13(v79, v1623 + 1 + 0, v81[515 - (433 + 79)]));
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[1 + 1]][v79[v81[3]]] = v79[v81[4]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v1622 = 22;
									end
									if ((77 - 54) == v1622) then
										v79[v81[2]] = v81[14 - 11];
										v73 = v73 + 1;
										v81 = v69[v73];
										v1623 = v81[2 + 0];
										v79[v1623] = v79[v1623](v13(v79, v1623 + 1, v81[3]));
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[1038 - (562 + 474)]][v79[v81[6 - 3]]] = v79[v81[7 - 3]];
										v73 = v73 + (906 - (76 + 829));
										v1622 = 1697 - (1506 + 167);
									end
									if (v1622 == (28 - 13)) then
										v79[v1623] = v79[v1623](v13(v79, v1623 + (267 - (58 + 208)), v81[3]));
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2 + 0]][v79[v81[3 + 0]]] = v79[v81[4]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2 + 0]] = v81[12 - 9];
										v73 = v73 + (338 - (258 + 79));
										v81 = v69[v73];
										v1622 = 16;
									end
									if (v1622 == (4 + 21)) then
										v81 = v69[v73];
										v79[v81[2]] = v81[5 - 2];
										v73 = v73 + 1;
										v81 = v69[v73];
										v1623 = v81[2];
										v79[v1623] = v79[v1623](v13(v79, v1623 + (1471 - (1219 + 251)), v81[3]));
										v73 = v73 + (1672 - (1231 + 440));
										v81 = v69[v73];
										v79[v81[60 - (34 + 24)]][v79[v81[2 + 1]]] = v79[v81[7 - 3]];
										v1622 = 26;
									end
									if (v1622 == (6 + 6)) then
										v81 = v69[v73];
										v79[v81[2]] = v81[3];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[2]] = v81[9 - 6];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v1623 = v81[6 - 4];
										v79[v1623] = v79[v1623](v13(v79, v1623 + (2 - 1), v81[1592 - (877 + 712)]));
										v1622 = 8 + 5;
									end
									if (v1622 == (763 - (242 + 512))) then
										v79[v81[3 - 1]][v79[v81[630 - (92 + 535)]]] = v79[v81[4 + 0]];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v79[v81[1 + 1]] = v81[10 - 7];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2 + 0]] = v79[v81[1 + 2]];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v1622 = 15 - 5;
									end
									if ((v1622 == (1812 - (1476 + 309))) or (2599 < 1322)) then
										v73 = v73 + (1285 - (299 + 985));
										v81 = v69[v73];
										v79[v81[1 + 1]] = v81[9 - 6];
										v73 = v73 + (94 - (86 + 7));
										v81 = v69[v73];
										v1623 = v81[8 - 6];
										v79[v1623] = v79[v1623](v13(v79, v1623 + 1, v81[1 + 2]));
										v73 = v73 + 1;
										v81 = v69[v73];
										v1622 = 908 - (672 + 208);
									end
									if (v1622 == (3 + 2)) then
										v81 = v69[v73];
										v79[v81[134 - (14 + 118)]] = v81[448 - (339 + 106)];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2 + 0]] = v79[v81[1398 - (440 + 955)]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2]] = v81[4 - 1];
										v73 = v73 + 1 + 0;
										v1622 = 14 - 8;
									end
									if ((6 + 2) == v1622) then
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[355 - (260 + 93)]] = v81[3 + 0];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v1623 = v81[3 - 1];
										v79[v1623] = v79[v1623](v13(v79, v1623 + 1, v81[1977 - (1181 + 793)]));
										v73 = v73 + 1;
										v81 = v69[v73];
										v1622 = 3 + 6;
									end
									if (v1622 == (333 - (105 + 202))) then
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[812 - (352 + 458)]] = v81[11 - 8];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[2 + 0]] = v79[v81[8 - 5]];
										v73 = v73 + (950 - (438 + 511));
										v81 = v69[v73];
										v79[v81[1385 - (1262 + 121)]] = v81[3];
										v1622 = 1095 - (728 + 340);
									end
									if (v1622 == 4) then
										v79[v81[2]] = v81[1793 - (816 + 974)];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v1623 = v81[7 - 5];
										v79[v1623] = v79[v1623](v13(v79, v1623 + 1, v81[342 - (163 + 176)]));
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[9 - 7]][v79[v81[1 + 2]]] = v79[v81[4]];
										v73 = v73 + (1811 - (1564 + 246));
										v1622 = 350 - (124 + 221);
									end
									if ((13 + 6) == v1622) then
										v81 = v69[v73];
										v1623 = v81[453 - (115 + 336)];
										v79[v1623] = v79[v1623](v13(v79, v1623 + (1 - 0), v81[1 + 2]));
										v73 = v73 + (47 - (45 + 1));
										v81 = v69[v73];
										v79[v81[1 + 1]][v79[v81[1993 - (1282 + 708)]]] = v79[v81[1216 - (583 + 629)]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[5 - 3]] = v81[3];
										v1622 = 20;
									end
									if (v1622 == 20) then
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2 + 0]] = v79[v81[1173 - (943 + 227)]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2]] = v81[3];
										v73 = v73 + (1632 - (1539 + 92));
										v81 = v69[v73];
										v79[v81[1948 - (706 + 1240)]] = v81[3];
										v1622 = 279 - (81 + 177);
									end
									if (v1622 == (8 - 5)) then
										v79[v81[259 - (212 + 45)]] = v81[3];
										v73 = v73 + (3 - 2);
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[3]];
										v73 = v73 + (1947 - (708 + 1238));
										v81 = v69[v73];
										v79[v81[1 + 1]] = v81[1 + 2];
										v73 = v73 + 1;
										v81 = v69[v73];
										v1622 = 1671 - (586 + 1081);
									end
									if ((2730 >= 307) and (v1622 == (533 - (348 + 163)))) then
										v79[v81[2 + 0]] = v81[283 - (215 + 65)];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[4 - 2]] = v79[v81[1862 - (1541 + 318)]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2]] = v81[3 + 0];
										v73 = v73 + 1;
										v81 = v69[v73];
										v1622 = 23;
									end
									if ((2990 >= 437) and (v1622 == (1 + 0))) then
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2 + 0]] = v79[v81[1753 - (1036 + 714)]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2 + 0]] = v81[1283 - (883 + 397)];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2]] = v81[593 - (563 + 27)];
										v1622 = 7 - 5;
									end
									if ((1988 - (1369 + 617)) == v1622) then
										v73 = v73 + 1;
										v81 = v69[v73];
										v1623 = v81[1489 - (85 + 1402)];
										v79[v1623] = v79[v1623](v13(v79, v1623 + 1 + 0, v81[7 - 4]));
										v73 = v73 + (404 - (274 + 129));
										v81 = v69[v73];
										v79[v81[219 - (12 + 205)]][v79[v81[3]]] = v79[v81[4 + 0]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v1622 = 11 - 8;
									end
									if ((14 + 0) == v1622) then
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[386 - (27 + 357)]] = v81[483 - (91 + 389)];
										v73 = v73 + (298 - (90 + 207));
										v81 = v69[v73];
										v79[v81[2]] = v81[3];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v1623 = v81[2];
										v1622 = 876 - (706 + 155);
									end
									if (v1622 == (1823 - (730 + 1065))) then
										v79[v81[1565 - (1339 + 224)]][v79[v81[2 + 1]]] = v79[v81[4 + 0]];
										break;
									end
								end
							end
						elseif (v82 <= (119 - 39)) then
							if (v82 <= (909 - (268 + 575))) then
								if (v82 <= (1353 - (919 + 375))) then
									if ((1028 < 2340) and (v82 <= (153 - 97))) then
										if (v82 <= (1025 - (180 + 791))) then
											if v79[v81[1807 - (323 + 1482)]] then
												v73 = v73 + (1919 - (1177 + 741));
											else
												v73 = v81[1 + 2];
											end
										elseif (v82 > (206 - 151)) then
											local v1625;
											local v1626;
											v79[v81[1 + 1]] = v63[v81[6 - 3]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[2]] = v79[v81[3]][v81[113 - (96 + 13)]];
											v73 = v73 + (1922 - (962 + 959));
											v81 = v69[v73];
											v1626 = v81[4 - 2];
											v79[v1626] = v79[v1626](v13(v79, v1626 + 1 + 0, v81[1354 - (461 + 890)]));
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[7 - 5]] = v79[v81[246 - (19 + 224)]][v81[4]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[2]] = v79[v81[201 - (37 + 161)]][v81[4]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v1626 = v81[2];
											v1625 = v79[v81[2 + 1]];
											v79[v1626 + 1] = v1625;
											v79[v1626] = v1625[v81[2 + 2]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[63 - (60 + 1)]] = v79[v81[926 - (826 + 97)]][v81[4 + 0]];
											v73 = v73 + (3 - 2);
											v81 = v69[v73];
											v1626 = v81[2];
											v79[v1626] = v79[v1626](v13(v79, v1626 + (1 - 0), v81[688 - (375 + 310)]));
										else
											v79[v81[2]] = v63[v81[3]];
											v73 = v73 + (2000 - (1864 + 135));
											v81 = v69[v73];
											v79[v81[4 - 2]] = v63[v81[1 + 2]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[4 - 2]] = v79[v81[3]][v79[v81[4]]];
											v73 = v73 + (1132 - (314 + 817));
											v81 = v69[v73];
											do
												return v79[v81[2 + 0]];
											end
											v73 = v73 + 1;
											v81 = v69[v73];
											do
												return;
											end
										end
									elseif ((v82 <= (271 - (32 + 182))) or (210 > 2641)) then
										v79[v81[2]][v79[v81[3 + 0]]] = v79[v81[13 - 9]];
										v73 = v73 + (66 - (39 + 26));
										v81 = v69[v73];
										v79[v81[2]] = v81[147 - (54 + 90)];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[200 - (45 + 153)]] = v79[v81[2 + 1]][v79[v81[556 - (457 + 95)]]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[3 - 1]] = v81[3];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[7 - 5]][v79[v81[2 + 1]]] = v79[v81[13 - 9]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[5 - 3]] = v81[751 - (485 + 263)];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[709 - (575 + 132)]] = v79[v81[864 - (750 + 111)]][v79[v81[4]]];
									elseif ((342 < 1296) and (v82 > (1068 - (445 + 565)))) then
										v79[v81[2 + 0]][v81[1 + 2]] = v79[v81[6 - 2]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[312 - (189 + 121)]][v81[1 + 2]] = v81[1351 - (634 + 713)];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[540 - (493 + 45)]] = v64[v81[971 - (493 + 475)]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[1 + 2]][v81[4]];
										v73 = v73 + (785 - (158 + 626));
										v81 = v69[v73];
										v79[v81[1 + 1]] = v79[v81[3]][v81[5 - 1]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[1 + 1]][v81[3]] = v79[v81[1095 - (1035 + 56)]];
										v73 = v73 + (960 - (114 + 845));
										v81 = v69[v73];
										v79[v81[1 + 1]] = v64[v81[7 - 4]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[3 + 0]][v81[1053 - (179 + 870)]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2 - 0]] = v81[881 - (827 + 51)];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[5 - 3]] = v81[2 + 1];
									else
										v79[v81[475 - (95 + 378)]] = v81[1 + 2] * v79[v81[5 - 1]];
									end
								elseif (v82 <= (55 + 7)) then
									if (v82 <= (1071 - (334 + 677))) then
										v79[v81[7 - 5]] = v81[1059 - (1049 + 7)];
										v73 = v73 + (4 - 3);
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[3]][v79[v81[7 - 3]]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[5 - 3]][v79[v81[5 - 2]]] = v79[v81[2 + 2]];
										v73 = v73 + (1421 - (1004 + 416));
										v81 = v69[v73];
										v79[v81[2]] = v81[3];
										v73 = v73 + (1958 - (1621 + 336));
										v81 = v69[v73];
										v79[v81[1941 - (337 + 1602)]] = v79[v81[1520 - (1014 + 503)]][v79[v81[4]]];
										v73 = v73 + (1016 - (446 + 569));
										v81 = v69[v73];
										v79[v81[1 + 1]] = v81[8 - 5];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[3 - 1]] = v79[v81[3]][v79[v81[1 + 3]]];
										v73 = v73 + (506 - (223 + 282));
										v81 = v69[v73];
										v79[v81[1 + 1]] = v81[4 - 1];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v79[v81[672 - (623 + 47)]] = v79[v81[48 - (32 + 13)]][v79[v81[4]]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2]] = v81[3 + 0];
									elseif (v82 == 61) then
										local v1669;
										v79[v81[1803 - (1070 + 731)]] = #v79[v81[3 + 0]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2]] = v64[v81[3]];
										v73 = v73 + (1405 - (1257 + 147));
										v81 = v69[v73];
										v79[v81[1 + 1]] = v79[v81[3]][v81[4]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[3 - 1]] = v79[v81[3]] * v81[137 - (98 + 35)];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[6 - 4]] = v79[v81[3]] * v81[13 - 9];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v1669 = v81[2 + 0];
										v79[v1669] = v79[v1669](v13(v79, v1669 + 1 + 0, v81[560 - (395 + 162)]));
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[1943 - (816 + 1125)]] = v79[v81[3 - 0]];
										v73 = v73 + (1149 - (701 + 447));
										v81 = v69[v73];
										v79[v81[2]] = v81[3];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v73 = v81[4 - 1];
									elseif (v81[1343 - (391 + 950)] < v79[v81[4]]) then
										v73 = v73 + (2 - 1);
									else
										v73 = v81[7 - 4];
									end
								elseif (v82 <= (157 - 93)) then
									if ((2365 == 2365) and (v82 == 63)) then
										v79[v81[2]] = v79[v81[3 + 0]][v81[4]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2 + 0]] = v79[v81[10 - 7]][v81[1526 - (251 + 1271)]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[5 - 3]] = v79[v81[7 - 4]] * v79[v81[4]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2 - 0]] = v79[v81[1262 - (1147 + 112)]] + v79[v81[1 + 3]];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v79[v81[2]] = v81[1 + 2];
									elseif ((3718 > 1801) and (v79[v81[699 - (335 + 362)]] == v79[v81[4 + 0]])) then
										v73 = v73 + (1 - 0);
									else
										v73 = v81[7 - 4];
									end
								elseif ((2398 == 2398) and (v82 == 65)) then
									v79[v81[7 - 5]] = v79[v81[14 - 11]][v81[11 - 7]];
									v73 = v73 + (567 - (237 + 329));
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[10 - 7]][v81[4]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2 + 0]][v81[3]] = v79[v81[1128 - (408 + 716)]];
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v79[v81[823 - (344 + 477)]] = v63[v81[1 + 2]];
									v73 = v73 + (1762 - (1188 + 573));
									v81 = v69[v73];
									v79[v81[5 - 3]] = v79[v81[3 + 0]][v81[4]];
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v79[v81[2 - 0]][v81[7 - 4]] = v79[v81[1533 - (508 + 1021)]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1168 - (228 + 938)]] = v64[v81[688 - (332 + 353)]];
								else
									local v1707 = 0 - 0;
									local v1708;
									while true do
										if (v1707 == (7 - 4)) then
											v81 = v69[v73];
											v79[v81[2]] = v79[v81[3]][v81[4 + 0]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[7 - 5]] = v79[v81[426 - (18 + 405)]][v81[2 + 2]];
											v1707 = 3 + 1;
										end
										if (v1707 == (0 - 0)) then
											v1708 = nil;
											v79[v81[980 - (194 + 784)]] = v63[v81[1773 - (694 + 1076)]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[2]] = v79[v81[1907 - (122 + 1782)]][v81[4]];
											v1707 = 1 + 0;
										end
										if ((v1707 == 5) or (1668 == 2874)) then
											v1708 = v81[2 + 0];
											v79[v1708] = v79[v1708](v79[v1708 + 1]);
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[2 + 0]] = v63[v81[3 + 0]];
											v1707 = 17 - 11;
										end
										if (1 == v1707) then
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[2 + 0]] = v79[v81[3]][v79[v81[1974 - (214 + 1756)]]];
											v73 = v73 + (4 - 3);
											v81 = v69[v73];
											v1707 = 1 + 1;
										end
										if ((1 + 3) == v1707) then
											v73 = v73 + (586 - (217 + 368));
											v81 = v69[v73];
											v79[v81[5 - 3]] = v79[v81[2 + 1]][v81[3 + 1]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v1707 = 894 - (844 + 45);
										end
										if (v1707 == (290 - (242 + 42))) then
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[2]][v81[5 - 2]] = v79[v81[9 - 5]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v1707 = 7;
										end
										if (v1707 == 7) then
											v73 = v81[1203 - (132 + 1068)];
											break;
										end
										if (v1707 == 2) then
											v79[v81[2 - 0]] = v64[v81[1626 - (214 + 1409)]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[1636 - (497 + 1137)]] = v79[v81[943 - (9 + 931)]][v81[293 - (181 + 108)]];
											v73 = v73 + 1 + 0;
											v1707 = 7 - 4;
										end
									end
								end
							elseif (v82 <= (216 - 143)) then
								if (v82 <= 69) then
									if ((1272 < 1643) and (v82 <= (16 + 51))) then
										local v280 = v81[2 + 0];
										local v281 = v79[v81[479 - (296 + 180)]];
										v79[v280 + 1] = v281;
										v79[v280] = v281[v81[1407 - (1183 + 220)]];
									elseif ((2498 >= 950) and (v82 > (1333 - (1037 + 228)))) then
										local v1709;
										local v1710;
										v79[v81[2]] = v81[4 - 1];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[6 - 4]] = v79[v81[737 - (527 + 207)]][v79[v81[531 - (187 + 340)]]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[1872 - (1298 + 572)]][v79[v81[6 - 3]]] = v79[v81[174 - (144 + 26)]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v1710 = v81[4 - 2];
										v79[v1710](v13(v79, v1710 + 1, v81[3]));
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[2]] = v81[3];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[1 + 1]] = v79[v81[8 - 5]][v79[v81[9 - 5]]];
										v73 = v73 + (4 - 3);
										v81 = v69[v73];
										v79[v81[2 + 0]] = v81[3];
										v73 = v73 + 1;
										v81 = v69[v73];
										v1710 = v81[2 - 0];
										v1709 = v79[v81[3]];
										v79[v1710 + 1] = v1709;
										v79[v1710] = v1709[v79[v81[4 + 0]]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2]] = {};
										v73 = v73 + (203 - (5 + 197));
										v81 = v69[v73];
										v79[v81[688 - (339 + 347)]] = v81[6 - 3];
									else
										local v1730 = 0;
										local v1731;
										while true do
											if (v1730 == (10 - 7)) then
												v81 = v69[v73];
												v79[v81[378 - (365 + 11)]] = v79[v81[3 + 0]][v79[v81[15 - 11]]];
												v73 = v73 + 1;
												v81 = v69[v73];
												v79[v81[4 - 2]] = v79[v81[927 - (837 + 87)]][v81[6 - 2]];
												v73 = v73 + (1671 - (837 + 833));
												v1730 = 1 + 3;
											end
											if ((v1730 == (1391 - (356 + 1031))) or (1434 > 4545)) then
												v81 = v69[v73];
												v79[v81[1 + 1]] = v81[1649 - (73 + 1573)];
												v73 = v73 + (1389 - (1307 + 81));
												v81 = v69[v73];
												v79[v81[2]] = v81[237 - (7 + 227)];
												v73 = v73 + (1 - 0);
												v1730 = 171 - (90 + 76);
											end
											if (v1730 == (15 - 10)) then
												v81 = v69[v73];
												v79[v81[2]] = v81[3];
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v1731 = v81[2 + 0];
												v79[v1731] = v79[v1731](v13(v79, v1731 + 1 + 0, v81[3]));
												v1730 = 23 - 17;
											end
											if (v1730 == (267 - (197 + 63))) then
												v73 = v73 + 1;
												v81 = v69[v73];
												v79[v81[1 + 1]] = v79[v81[3]] + v79[v81[1 + 3]];
												break;
											end
											if ((v1730 == (0 + 0)) or (4099 <= 590)) then
												v1731 = nil;
												v79[v81[1 + 1]] = v79[v81[3 - 0]][v81[1373 - (618 + 751)]];
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v79[v81[1912 - (206 + 1704)]] = v79[v81[3]][v81[6 - 2]];
												v73 = v73 + (1 - 0);
												v1730 = 1 + 0;
											end
											if (v1730 == (1276 - (155 + 1120))) then
												v81 = v69[v73];
												v79[v81[1508 - (396 + 1110)]] = v79[v81[6 - 3]][v81[4]];
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v79[v81[2 + 0]] = v64[v81[3]];
												v73 = v73 + 1;
												v1730 = 2 + 0;
											end
											if ((2218 <= 3038) and (v1730 == (982 - (230 + 746)))) then
												v73 = v73 + 1;
												v81 = v69[v73];
												v79[v81[603 - (473 + 128)]] = v79[v81[51 - (39 + 9)]] * v79[v81[270 - (38 + 228)]];
												v73 = v73 + (1 - 0);
												v81 = v69[v73];
												v79[v81[475 - (106 + 367)]] = v79[v81[1 + 2]][v81[1866 - (354 + 1508)]];
												v1730 = 22 - 15;
											end
											if ((2 + 0) == v1730) then
												v81 = v69[v73];
												v79[v81[2 + 0]] = v63[v81[3 - 0]];
												v73 = v73 + (1245 - (334 + 910));
												v81 = v69[v73];
												v79[v81[897 - (92 + 803)]] = v79[v81[2 + 1]][v81[1185 - (1035 + 146)]];
												v73 = v73 + (617 - (230 + 386));
												v1730 = 2 + 1;
											end
										end
									end
								elseif ((v82 <= (1581 - (353 + 1157))) or (826 >= 2807)) then
									if (v82 == (1184 - (53 + 1061))) then
										local v1732 = 1635 - (1568 + 67);
										local v1733;
										while true do
											if ((v1732 == (1 + 1)) or (1732 <= 886)) then
												v79[v81[1 + 1]] = v81[7 - 4];
												v73 = v73 + (2 - 1);
												v81 = v69[v73];
												v79[v81[4 - 2]] = v81[3 + 0];
												v1732 = 1215 - (615 + 597);
											end
											if (v1732 == (1 + 0)) then
												v81 = v69[v73];
												v79[v81[2 - 0]][v79[v81[3 + 0]]] = v79[v81[1 + 3]];
												v73 = v73 + 1;
												v81 = v69[v73];
												v1732 = 2 + 0;
											end
											if ((v1732 == (1905 - (1056 + 843))) or (1725 > 4247)) then
												v73 = v73 + (1 - 0);
												v81 = v69[v73];
												v79[v81[2 - 0]] = v64[v81[3]];
												v73 = v73 + 1;
												v1732 = 19 - 12;
											end
											if ((0 + 0) == v1732) then
												v1733 = nil;
												v1733 = v81[1978 - (286 + 1690)];
												v79[v1733] = v79[v1733](v13(v79, v1733 + (912 - (98 + 813)), v81[1 + 2]));
												v73 = v73 + (2 - 1);
												v1732 = 1 + 0;
											end
											if (v1732 == (510 - (263 + 244))) then
												v73 = v73 + 1;
												v81 = v69[v73];
												v79[v81[2 + 0]][v79[v81[3]]] = v79[v81[4]];
												v73 = v73 + (1688 - (1502 + 185));
												v1732 = 1 + 3;
											end
											if (((19 - 15) == v1732) or (912 > 4890)) then
												v81 = v69[v73];
												v79[v81[5 - 3]] = v81[1530 - (629 + 898)];
												v73 = v73 + 1;
												v81 = v69[v73];
												v1732 = 13 - 8;
											end
											if ((12 - 7) == v1732) then
												v79[v81[2]] = v81[3] ~= 0;
												v73 = v73 + (366 - (12 + 353));
												v81 = v69[v73];
												v79[v81[1913 - (1680 + 231)]][v79[v81[1 + 2]]] = v79[v81[3 + 1]];
												v1732 = 6;
											end
											if (v1732 == (1156 - (212 + 937))) then
												v81 = v69[v73];
												v79[v81[2 + 0]] = v64[v81[1065 - (111 + 951)]];
												break;
											end
										end
									else
										local v1734 = 0 + 0;
										while true do
											if (v1734 == (29 - (18 + 9))) then
												v79[v81[1 + 1]] = v81[537 - (31 + 503)];
												v73 = v73 + (1633 - (595 + 1037));
												v81 = v69[v73];
												v1734 = 1447 - (189 + 1255);
											end
											if (v1734 == 5) then
												v79[v81[1 + 1]] = v79[v81[4 - 1]][v79[v81[1283 - (1170 + 109)]]];
												break;
											end
											if (0 == v1734) then
												v79[v81[1819 - (348 + 1469)]] = v81[1292 - (1115 + 174)];
												v73 = v73 + 1;
												v81 = v69[v73];
												v1734 = 1;
											end
											if (v1734 == (7 - 4)) then
												v79[v81[1016 - (85 + 929)]][v79[v81[2 + 1]]] = v79[v81[1871 - (1151 + 716)]];
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v1734 = 4 + 0;
											end
											if (v1734 == (1705 - (95 + 1609))) then
												v79[v81[6 - 4]] = v79[v81[3]][v79[v81[762 - (364 + 394)]]];
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v1734 = 2;
											end
											if (v1734 == (2 + 2)) then
												v79[v81[2]] = v81[1 + 2];
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v1734 = 5;
											end
										end
									end
								elseif ((v82 == (37 + 35)) or (1044 < 362)) then
									v79[v81[2]] = v81[2 + 1];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2 + 0]] = v79[v81[1 + 2]][v79[v81[960 - (719 + 237)]]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2]][v79[v81[3]]] = v79[v81[4 + 0]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[5 - 3]] = v81[7 - 4];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[1994 - (761 + 1230)]][v79[v81[197 - (80 + 113)]]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[1 + 2] ~= (0 - 0);
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1 + 1]][v79[v81[1 + 2]]] = v79[v81[1247 - (965 + 278)]];
									v73 = v73 + (1730 - (1391 + 338));
									v81 = v69[v73];
									v79[v81[4 - 2]] = v81[3];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[6 - 3]][v79[v81[2 + 2]]];
								else
									local v1750 = 0;
									local v1751;
									while true do
										if (3 == v1750) then
											v81 = v69[v73];
											v79[v81[1410 - (496 + 912)]] = v79[v81[9 - 6]][v81[1 + 3]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[3 - 1]] = v79[v81[3]][v79[v81[1334 - (1190 + 140)]]];
											v1750 = 2 + 2;
										end
										if ((v1750 == (720 - (317 + 401))) or (1667 > 2745)) then
											v79[v81[2]] = v64[v81[952 - (303 + 646)]];
											v73 = v73 + (3 - 2);
											v81 = v69[v73];
											v79[v81[2]] = v63[v81[1735 - (1675 + 57)]];
											v73 = v73 + 1 + 0;
											v1750 = 7 - 4;
										end
										if (0 == v1750) then
											v1751 = nil;
											v79[v81[1 + 1]] = v79[v81[980 - (338 + 639)]][v81[383 - (320 + 59)]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[734 - (628 + 104)]] = v63[v81[3 - 0]];
											v1750 = 1892 - (439 + 1452);
										end
										if (v1750 == (1951 - (105 + 1842))) then
											v73 = v73 + (4 - 3);
											v81 = v69[v73];
											v1751 = v81[4 - 2];
											v79[v1751] = v79[v1751](v13(v79, v1751 + (4 - 3), v81[1 + 2]));
											v73 = v73 + (1 - 0);
											v1750 = 5;
										end
										if (1 == v1750) then
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[1166 - (274 + 890)]] = v79[v81[3]][v81[4]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v1750 = 2 + 0;
										end
										if (v1750 == (5 + 0)) then
											v81 = v69[v73];
											v79[v81[2]] = v79[v81[1 + 2]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[2 + 0]][v81[3]] = v81[3 + 1];
											v1750 = 7 - 1;
										end
										if (v1750 == 6) then
											v73 = v73 + (820 - (731 + 88));
											v81 = v69[v73];
											v79[v81[2 + 0]][v81[2 + 1]] = v81[1 + 3];
											v73 = v73 + (1 - 0);
											v81 = v69[v73];
											v1750 = 21 - 14;
										end
										if ((v1750 == (20 - 13)) or (1920 >= 3732)) then
											v79[v81[3 - 1]][v81[3]] = v81[4 + 0];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[1 + 1]] = v81[3];
											break;
										end
									end
								end
							elseif ((v82 <= (52 + 24)) or (1669 == 4852)) then
								if ((v82 <= (232 - (139 + 19))) or (1998 > 4361)) then
									local v285 = 0 + 0;
									local v286;
									while true do
										if ((v285 == (1993 - (1687 + 306))) or (1896 >= 2575)) then
											v286 = nil;
											v79[v81[7 - 5]] = v79[v81[1157 - (1018 + 136)]][v81[1 + 3]];
											v73 = v73 + (4 - 3);
											v81 = v69[v73];
											v285 = 1;
										end
										if ((v285 == (819 - (117 + 698))) or (4209 == 1040)) then
											v286 = v81[2];
											v79[v286] = v79[v286](v13(v79, v286 + (482 - (305 + 176)), v81[1 + 2]));
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v285 = 8 - 3;
										end
										if ((v285 == (5 + 0)) or (2498 > 2677)) then
											v79[v81[2 - 0]][v81[6 - 3]] = v79[v81[4]];
											v73 = v73 + (1 - 0);
											v81 = v69[v73];
											v79[v81[262 - (159 + 101)]] = v81[14 - 11];
											v285 = 20 - 14;
										end
										if (v285 == (1 + 0)) then
											v79[v81[6 - 4]] = v81[5 - 2];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[268 - (112 + 154)]] = v81[6 - 3];
											v285 = 33 - (21 + 10);
										end
										if ((1948 > 1140) and (v285 == 3)) then
											v81 = v69[v73];
											v79[v81[1721 - (531 + 1188)]] = v81[3 + 0];
											v73 = v73 + (664 - (96 + 567));
											v81 = v69[v73];
											v285 = 5 - 1;
										end
										if (v285 == (3 + 3)) then
											v73 = v73 + 1;
											v81 = v69[v73];
											v73 = v81[10 - 7];
											break;
										end
										if (v285 == 2) then
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[1697 - (867 + 828)]] = v81[3];
											v73 = v73 + (2 - 1);
											v285 = 10 - 7;
										end
									end
								elseif (v82 > (167 - 92)) then
									local v1752;
									local v1753;
									v1753 = v81[2 - 0];
									v1752 = v79[v81[2 + 1]];
									v79[v1753 + (1 - 0)] = v1752;
									v79[v1753] = v1752[v81[4]];
									v73 = v73 + (772 - (134 + 637));
									v81 = v69[v73];
									v79[v81[1 + 1]] = v63[v81[1160 - (775 + 382)]];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[609 - (45 + 562)]] = v79[v81[3]][v81[4]];
									v73 = v73 + (863 - (545 + 317));
									v81 = v69[v73];
									v1753 = v81[2 - 0];
									v79[v1753] = v79[v1753](v13(v79, v1753 + (1027 - (763 + 263)), v81[1 + 2]));
									v73 = v73 + (1751 - (512 + 1238));
									v81 = v69[v73];
									if v79[v81[1596 - (272 + 1322)]] then
										v73 = v73 + 1;
									else
										v73 = v81[3];
									end
								else
									local v1764 = v81[3 - 1];
									v79[v1764](v13(v79, v1764 + (1247 - (533 + 713)), v81[31 - (14 + 14)]));
								end
							elseif (v82 <= 78) then
								if (v82 == (902 - (499 + 326))) then
									local v1765;
									local v1766;
									v79[v81[2]][v79[v81[3]]] = v79[v81[4]];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[426 - (104 + 320)]] = v81[2000 - (1929 + 68)];
									v73 = v73 + (1324 - (1206 + 117));
									v81 = v69[v73];
									v79[v81[2 + 0]] = v79[v81[3]][v79[v81[1596 - (683 + 909)]]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v1766 = v81[2];
									v79[v1766](v13(v79, v1766 + (1 - 0), v81[780 - (772 + 5)]));
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]] = v81[3];
									v73 = v73 + (1428 - (19 + 1408));
									v81 = v69[v73];
									v79[v81[290 - (134 + 154)]] = v79[v81[4 - 1]][v79[v81[12 - 8]]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[205 - (10 + 192)];
									v73 = v73 + (48 - (13 + 34));
									v81 = v69[v73];
									v1766 = v81[1291 - (342 + 947)];
									v1765 = v79[v81[3]];
									v79[v1766 + (4 - 3)] = v1765;
									v79[v1766] = v1765[v79[v81[1712 - (119 + 1589)]]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2]] = {};
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[2]] = v81[555 - (545 + 7)];
								else
									local v1786 = 0 - 0;
									local v1787;
									local v1788;
									while true do
										if (v1786 == (6 + 7)) then
											v81 = v69[v73];
											v79[v81[1705 - (494 + 1209)]]();
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v79[v81[1000 - (197 + 801)]] = v81[5 - 2];
											v73 = v73 + (4 - 3);
											v81 = v69[v73];
											v73 = v81[957 - (919 + 35)];
											break;
										end
										if (v1786 == (11 + 1)) then
											v81 = v69[v73];
											v79[v81[7 - 5]][v79[v81[470 - (369 + 98)]]] = v81[1119 - (400 + 715)];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v1788 = v81[2];
											v79[v1788] = v79[v1788](v13(v79, v1788 + 1 + 0, v81[1328 - (744 + 581)]));
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[1624 - (653 + 969)]] = v79[v81[3]][v81[7 - 3]];
											v73 = v73 + (1632 - (12 + 1619));
											v1786 = 176 - (103 + 60);
										end
										if (v1786 == 0) then
											v1787 = nil;
											v1788 = nil;
											v1788 = v81[9 - 7];
											v1787 = v79[v81[3]];
											v79[v1788 + 1] = v1787;
											v79[v1788] = v1787[v81[17 - 13]];
											v73 = v73 + (4 - 3);
											v81 = v69[v73];
											v79[v81[2]] = v63[v81[1665 - (710 + 952)]];
											v73 = v73 + (1869 - (555 + 1313));
											v1786 = 1 + 0;
										end
										if ((v1786 == (2 + 0)) or (4476 >= 4963)) then
											v79[v1788 + 1] = v1787;
											v79[v1788] = v1787[v81[4]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[2 + 0]] = v63[v81[1471 - (1261 + 207)]];
											v73 = v73 + (253 - (245 + 7));
											v81 = v69[v73];
											v79[v81[2]] = v64[v81[750 - (212 + 535)]];
											v73 = v73 + (4 - 3);
											v81 = v69[v73];
											v1786 = 3;
										end
										if ((v1786 == (1477 - (905 + 571))) or (2576 <= 2285)) then
											v81 = v69[v73];
											v79[v81[9 - 7]] = v79[v81[3 - 0]][v81[4]];
											v73 = v73 + (3 - 2);
											v81 = v69[v73];
											v1788 = v81[2];
											v79[v1788] = v79[v1788](v13(v79, v1788 + 1 + 0, v81[1466 - (522 + 941)]));
											v73 = v73 + (1512 - (292 + 1219));
											v81 = v69[v73];
											v1788 = v81[1114 - (787 + 325)];
											v1787 = v79[v81[8 - 5]];
											v1786 = 2 + 0;
										end
										if (v1786 == (6 - 3)) then
											v79[v81[536 - (424 + 110)]] = v79[v81[2 + 1]][v81[3 + 1]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[2]] = v81[1 + 2];
											v73 = v73 + (313 - (33 + 279));
											v81 = v69[v73];
											v1788 = v81[1 + 1];
											v79[v1788] = v79[v1788](v79[v1788 + (1354 - (1338 + 15))]);
											v73 = v73 + (1424 - (528 + 895));
											v81 = v69[v73];
											v1786 = 4;
										end
										if (v1786 == (4 + 3)) then
											v81 = v69[v73];
											v79[v81[1926 - (1606 + 318)]] = v64[v81[3]];
											v73 = v73 + (1820 - (298 + 1521));
											v81 = v69[v73];
											v1788 = v81[8 - 6];
											v1787 = v79[v81[313 - (154 + 156)]];
											v79[v1788 + (3 - 2)] = v1787;
											v79[v1788] = v1787[v81[4]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v1786 = 16 - 8;
										end
										if ((4091 >= 1140) and (v1786 == 11)) then
											v73 = v73 + (1116 - (712 + 403));
											v81 = v69[v73];
											v79[v81[452 - (168 + 282)]] = {};
											v73 = v73 + (1 - 0);
											v81 = v69[v73];
											v79[v81[2]] = v63[v81[3 + 0]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[2]] = v79[v81[8 - 5]][v81[1455 - (1242 + 209)]];
											v73 = v73 + (680 - (20 + 659));
											v1786 = 8 + 4;
										end
										if (v1786 == (3 + 1)) then
											v79[v81[2 - 0]] = {};
											v73 = v73 + (1 - 0);
											v81 = v69[v73];
											v79[v81[621 - (427 + 192)]] = v63[v81[6 - 3]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[1 + 1]] = v79[v81[1950 - (1427 + 520)]][v81[4]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[7 - 5]] = v63[v81[3]];
											v1786 = 5 + 0;
										end
										if ((3171 > 729) and (v1786 == 6)) then
											v81 = v69[v73];
											v1788 = v81[1234 - (712 + 520)];
											v79[v1788] = v79[v1788](v13(v79, v1788 + 1, v81[6 - 3]));
											v73 = v73 + (1347 - (565 + 781));
											v81 = v69[v73];
											v79[v81[2]] = v79[v81[568 - (35 + 530)]][v81[2 + 2]];
											v73 = v73 + (3 - 2);
											v81 = v69[v73];
											v79[v81[1380 - (1330 + 48)]]();
											v73 = v73 + 1 + 0;
											v1786 = 2 + 5;
										end
										if (v1786 == (17 - 7)) then
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[8 - 6]] = v79[v81[1172 - (854 + 315)]][v81[12 - 8]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[1 + 1]] = v81[47 - (31 + 13)];
											v73 = v73 + (1 - 0);
											v81 = v69[v73];
											v1788 = v81[2];
											v79[v1788] = v79[v1788](v79[v1788 + (2 - 1)]);
											v1786 = 9 + 2;
										end
										if (v1786 == (571 - (281 + 282))) then
											v79[v81[5 - 3]] = v63[v81[2 + 1]];
											v73 = v73 + (950 - (216 + 733));
											v81 = v69[v73];
											v79[v81[1849 - (137 + 1710)]] = v79[v81[8 - 5]][v81[542 - (100 + 438)]];
											v73 = v73 + (1366 - (205 + 1160));
											v81 = v69[v73];
											v1788 = v81[2 + 0];
											v79[v1788] = v79[v1788](v13(v79, v1788 + 1, v81[2 + 1]));
											v73 = v73 + (1306 - (535 + 770));
											v81 = v69[v73];
											v1786 = 9;
										end
										if (v1786 == (1 + 4)) then
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[2]] = v79[v81[2 + 1]][v81[1998 - (211 + 1783)]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[1431 - (1236 + 193)]] = v79[v81[913 - (793 + 117)]][v81[1896 - (1607 + 285)]];
											v73 = v73 + (861 - (747 + 113));
											v81 = v69[v73];
											v79[v81[2]][v79[v81[3]]] = v79[v81[4]];
											v73 = v73 + 1;
											v1786 = 1982 - (80 + 1896);
										end
										if (v1786 == (43 - 34)) then
											v1788 = v81[2 - 0];
											v1787 = v79[v81[3 + 0]];
											v79[v1788 + (2 - 1)] = v1787;
											v79[v1788] = v1787[v81[3 + 1]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[5 - 3]] = v63[v81[2 + 1]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[2]] = v64[v81[6 - 3]];
											v1786 = 464 - (246 + 208);
										end
									end
								end
							elseif (v82 == 79) then
								v79[v81[1894 - (614 + 1278)]][v81[2 + 1]] = v81[318 - (249 + 65)];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[1277 - (726 + 549)]] = v63[v81[3 + 0]];
								v73 = v73 + (1425 - (916 + 508));
								v81 = v69[v73];
								v79[v81[2]][v81[9 - 6]] = v81[3 + 1];
								v73 = v73 + (324 - (140 + 183));
								v81 = v69[v73];
								v79[v81[2]] = v81[3 + 0];
								v73 = v73 + (565 - (297 + 267));
								v81 = v69[v73];
								v73 = v81[2 + 1];
							else
								local v1799;
								v79[v81[344 - (37 + 305)]] = v79[v81[1269 - (323 + 943)]][v79[v81[2 + 2]]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2 - 0]] = v64[v81[1538 - (394 + 1141)]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]] = v81[2 + 1];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v79[v81[3 - 0]][v79[v81[5 - 1]]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v81[3];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[531 - (87 + 442)]] = v81[808 - (13 + 792)];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[3 + 0];
								v73 = v73 + 1;
								v81 = v69[v73];
								v1799 = v81[1867 - (1231 + 634)];
								v79[v1799] = v79[v1799](v13(v79, v1799 + (1767 - (1362 + 404)), v81[3]));
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[2 + 0]][v79[v81[8 - 5]]] = v79[v81[4]];
								v73 = v73 + (1017 - (660 + 356));
								v81 = v69[v73];
								v79[v81[2]] = v81[3];
							end
						elseif (v82 <= (133 - 40)) then
							if (v82 <= (78 + 8)) then
								if (v82 <= 83) then
									if ((808 <= 1233) and (v82 <= (2031 - (1111 + 839)))) then
										local v287 = 0;
										local v288;
										local v289;
										local v290;
										while true do
											if (v287 == (958 - (496 + 455))) then
												v79[v81[700 - (66 + 632)]] = v79[v81[4 - 1]][v81[1140 - (441 + 695)]];
												v73 = v73 + (2 - 1);
												v81 = v69[v73];
												v289 = v81[3];
												v287 = 14 - 6;
											end
											if ((2 == v287) or (248 > 3281)) then
												v81 = v69[v73];
												v79[v81[9 - 7]] = v79[v81[2 + 1]][v81[4]];
												v73 = v73 + (1839 - (286 + 1552));
												v81 = v69[v73];
												v287 = 1280 - (1016 + 261);
											end
											if (((1321 - (708 + 612)) == v287) or (4172 <= 247)) then
												v73 = v73 + (2 - 1);
												v81 = v69[v73];
												v79[v81[1 + 1]] = v63[v81[382 - (113 + 266)]];
												v73 = v73 + (1171 - (979 + 191));
												v287 = 2;
											end
											if (v287 == (5 - 2)) then
												v79[v81[2]] = v64[v81[3]];
												v73 = v73 + (1736 - (339 + 1396));
												v81 = v69[v73];
												v79[v81[2]] = v79[v81[1 + 2]][v81[4 + 0]];
												v287 = 7 - 3;
											end
											if (((5 + 0) == v287) or (4721 < 2974)) then
												v81 = v69[v73];
												v290 = v81[2];
												v79[v290] = v79[v290](v79[v290 + 1]);
												v73 = v73 + 1 + 0;
												v287 = 353 - (187 + 160);
											end
											if (v287 == (8 - 4)) then
												v73 = v73 + (3 - 2);
												v81 = v69[v73];
												v79[v81[2]] = v79[v81[1 + 2]];
												v73 = v73 + (3 - 2);
												v287 = 5;
											end
											if ((526 == 526) and (v287 == (0 + 0))) then
												v288 = nil;
												v289 = nil;
												v290 = nil;
												v79[v81[1 + 1]] = v79[v81[5 - 2]];
												v287 = 329 - (56 + 272);
											end
											if ((4 + 2) == v287) then
												v81 = v69[v73];
												v79[v81[2]] = v63[v81[3]];
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v287 = 7;
											end
											if ((v287 == (18 - 10)) or (3890 <= 1500)) then
												v288 = v79[v289];
												for v8279 = v289 + 1 + 0, v81[644 - (455 + 185)] do
													v288 = v288 .. v79[v8279];
												end
												v79[v81[790 - (757 + 31)]] = v288;
												v73 = v73 + (2000 - (762 + 1237));
												v287 = 9;
											end
											if (v287 == 9) then
												v81 = v69[v73];
												v79[v81[2]][v81[3]] = v79[v81[8 - 4]];
												break;
											end
										end
									elseif (v82 == (351 - (265 + 4))) then
										local v1817 = 0;
										while true do
											if ((4 - 2) == v1817) then
												v81 = v69[v73];
												v79[v81[2 + 0]] = v79[v81[5 - 2]] * v79[v81[10 - 6]];
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v1817 = 8 - 5;
											end
											if (v1817 == (5 - 2)) then
												v79[v81[2]] = v79[v81[5 - 2]] + v79[v81[4]];
												v73 = v73 + (1735 - (1691 + 43));
												v81 = v69[v73];
												v79[v81[2 + 0]] = v81[9 - 6];
												break;
											end
											if (v1817 == (0 + 0)) then
												v79[v81[7 - 5]] = v79[v81[179 - (127 + 49)]] + v79[v81[4]];
												v73 = v73 + (1681 - (281 + 1399));
												v81 = v69[v73];
												v79[v81[1661 - (184 + 1475)]] = v79[v81[3]][v81[4]];
												v1817 = 1 - 0;
											end
											if (v1817 == (2 - 1)) then
												v73 = v73 + (2 - 1);
												v81 = v69[v73];
												v79[v81[2 + 0]] = v79[v81[3 + 0]][v81[1295 - (260 + 1031)]];
												v73 = v73 + (1178 - (313 + 864));
												v1817 = 694 - (655 + 37);
											end
										end
									else
										local v1818;
										v79[v81[2]] = v63[v81[3 + 0]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2 - 0]] = v79[v81[6 - 3]][v81[2 + 2]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[3 - 1]] = v79[v81[773 - (383 + 387)]][v79[v81[2 + 2]]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v1818 = v81[6 - 4];
										v79[v1818] = v79[v1818]();
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[1 + 2]];
										v73 = v73 + (511 - (304 + 206));
										v81 = v69[v73];
										v79[v81[227 - (182 + 43)]] = v81[778 - (264 + 511)];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v73 = v81[6 - 3];
									end
								elseif (v82 <= (1065 - (128 + 853))) then
									local v291 = v81[1704 - (1635 + 67)];
									local v292 = v79[v291];
									local v293 = v81[1 + 2];
									for v936 = 1 + 0, v293 do
										v292[v936] = v79[v291 + v936];
									end
								elseif ((1100 == 1100) and (v82 == (282 - (131 + 66)))) then
									local v1832;
									v79[v81[6 - 4]][v81[14 - 11]] = v81[4];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2 + 0]][v81[3]] = v79[v81[5 - 1]];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[1607 - (306 + 1299)]] = v63[v81[2 + 1]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[791 - (671 + 118)]][v81[11 - 8]] = v79[v81[4]];
									v73 = v73 + (77 - (73 + 3));
									v81 = v69[v73];
									v79[v81[5 - 3]] = v64[v81[14 - 11]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[1758 - (1668 + 87)]][v81[1 + 3]];
									v73 = v73 + (1900 - (296 + 1603));
									v81 = v69[v73];
									v79[v81[108 - (79 + 27)]] = v63[v81[3 + 0]];
									v73 = v73 + (1008 - (700 + 307));
									v81 = v69[v73];
									v79[v81[2 + 0]] = v79[v81[3]][v81[1803 - (1477 + 322)]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v1832 = v81[4 - 2];
									v79[v1832] = v79[v1832](v79[v1832 + 1 + 0]);
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[9 - 6]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[8 - 6]] = v64[v81[3]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[1 + 1]] = v79[v81[6 - 3]][v81[4]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2 - 0]] = v81[5 - 2];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1788 - (20 + 1766)]] = v81[3];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v1832 = v81[811 - (88 + 721)];
									v79[v1832] = v79[v1832](v13(v79, v1832 + 1, v81[3 + 0]));
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1 + 1]][v81[2 + 1]] = v79[v81[9 - 5]];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[2]] = v64[v81[440 - (93 + 344)]];
									v73 = v73 + (1214 - (960 + 253));
									v81 = v69[v73];
									v79[v81[1 + 1]] = v79[v81[8 - 5]][v81[11 - 7]];
									v73 = v73 + (1417 - (74 + 1342));
									v81 = v69[v73];
									v79[v81[1 + 1]] = v79[v81[477 - (33 + 441)]][v81[4]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2]][v81[3]] = v79[v81[4]];
									v73 = v73 + (1420 - (64 + 1355));
									v81 = v69[v73];
									v79[v81[2 - 0]] = v64[v81[14 - (5 + 6)]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1 + 1]] = v79[v81[1 + 2]][v81[450 - (369 + 77)]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[3]][v81[742 - (438 + 300)]];
									v73 = v73 + (295 - (50 + 244));
									v81 = v69[v73];
									v79[v81[1203 - (95 + 1106)]][v81[5 - 2]] = v79[v81[19 - 15]];
									v73 = v73 + (1897 - (1741 + 155));
									v81 = v69[v73];
									v79[v81[5 - 3]] = v64[v81[4 - 1]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[3 - 1]] = v79[v81[3]][v81[2 + 2]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2 + 0]] = v79[v81[7 - 4]][v81[4]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2]][v81[1780 - (1263 + 514)]] = v79[v81[4]];
									v73 = v73 + (498 - (73 + 424));
									v81 = v69[v73];
									v79[v81[4 - 2]][v81[311 - (93 + 215)]] = v79[v81[13 - 9]];
									v73 = v73 + (1936 - (1756 + 179));
									v81 = v69[v73];
									v79[v81[1681 - (550 + 1129)]] = v81[110 - (57 + 50)];
								else
									local v1882;
									v79[v81[631 - (30 + 599)]] = v79[v81[1 + 2]][v79[v81[4 - 0]]];
									v73 = v73 + (919 - (794 + 124));
									v81 = v69[v73];
									v79[v81[1 + 1]] = v64[v81[1 + 2]];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[1929 - (1299 + 628)]] = v81[3];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[5 - 3]] = v79[v81[3]][v79[v81[4 + 0]]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[1447 - (335 + 1110)]] = v81[3 + 0];
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v79[v81[2]] = v81[3];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[3 - 1]] = v81[3];
									v73 = v73 + 1;
									v81 = v69[v73];
									v1882 = v81[334 - (268 + 64)];
									v79[v1882] = v79[v1882](v13(v79, v1882 + 1 + 0, v81[3]));
									v73 = v73 + (1279 - (243 + 1035));
									v81 = v69[v73];
									v79[v81[4 - 2]][v79[v81[3]]] = v79[v81[18 - 14]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]][v79[v81[3]]] = v79[v81[4]];
								end
							elseif ((v82 <= (377 - 288)) or (4125 < 1343)) then
								if (v82 <= (54 + 33)) then
									local v294 = 0;
									local v295;
									while true do
										if ((v294 == (3 + 0)) or (978 >= 1974)) then
											v73 = v73 + (1 - 0);
											v81 = v69[v73];
											if v79[v81[102 - (90 + 10)]] then
												v73 = v73 + (805 - (209 + 595));
											else
												v73 = v81[808 - (603 + 202)];
											end
											break;
										end
										if (v294 == (2 + 0)) then
											v79[v295] = v79[v295](v13(v79, v295 + (3 - 2), v81[2 + 1]));
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v79[v81[1 + 1]] = v79[v81[8 - 5]];
											v294 = 12 - 9;
										end
										if ((v294 == (279 - (174 + 105))) or (4760 == 2764)) then
											v295 = nil;
											v79[v81[2]] = v63[v81[9 - 6]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v294 = 914 - (532 + 381);
										end
										if (v294 == (1 + 0)) then
											v79[v81[841 - (137 + 702)]] = v79[v81[8 - 5]][v81[1 + 3]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v295 = v81[7 - 5];
											v294 = 1888 - (1819 + 67);
										end
									end
								elseif (v82 > (53 + 35)) then
									local v1902 = 0 + 0;
									local v1903;
									while true do
										if ((1359 - (259 + 1098)) == v1902) then
											v81 = v69[v73];
											v79[v81[2 + 0]][v81[1 + 2]] = v81[1 + 3];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[6 - 4]] = v64[v81[2 + 1]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[2]] = v79[v81[14 - 11]][v81[4]];
											v1902 = 1709 - (667 + 1039);
										end
										if (v1902 == 0) then
											v1903 = nil;
											v79[v81[2]] = v81[1022 - (274 + 745)];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v1903 = v81[1 + 1];
											v79[v1903] = v79[v1903](v13(v79, v1903 + (431 - (288 + 142)), v81[1309 - (301 + 1005)]));
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v1902 = 2 - 1;
										end
										if (v1902 == (1887 - (674 + 1199))) then
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[2 + 0]][v81[2 + 1]] = v79[v81[11 - 7]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[8 - 6]] = v64[v81[1 + 2]];
											v73 = v73 + (446 - (92 + 353));
											v81 = v69[v73];
											v1902 = 14 + 1;
										end
										if ((v1902 == (16 - 9)) or (2555 <= 439)) then
											v81 = v69[v73];
											v79[v81[3 - 1]] = v63[v81[8 - 5]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[2 + 0]] = v79[v81[4 - 1]][v81[8 - 4]];
											v73 = v73 + (4 - 3);
											v81 = v69[v73];
											v79[v81[2 + 0]] = v79[v81[5 - 2]];
											v1902 = 273 - (34 + 231);
										end
										if ((3707 > 2756) and (v1902 == 1)) then
											v79[v81[1319 - (930 + 387)]][v81[3 + 0]] = v79[v81[3 + 1]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[5 - 3]][v81[700 - (389 + 308)]] = v81[9 - 5];
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v79[v81[5 - 3]][v81[2 + 1]] = v81[326 - (125 + 197)];
											v73 = v73 + (998 - (339 + 658));
											v1902 = 4 - 2;
										end
										if (v1902 == (5 - 2)) then
											v73 = v73 + (1349 - (743 + 605));
											v81 = v69[v73];
											v79[v81[2 + 0]] = v79[v81[1 + 2]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v1903 = v81[2];
											v79[v1903] = v79[v1903](v79[v1903 + 1]);
											v73 = v73 + 1;
											v1902 = 14 - 10;
										end
										if (v1902 == (36 - 24)) then
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[2]] = v79[v81[2 + 1]][v81[4]];
											v73 = v73 + (250 - (197 + 52));
											v81 = v69[v73];
											v79[v81[3 - 1]] = v63[v81[3]];
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v1902 = 8 + 5;
										end
										if (8 == v1902) then
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v1903 = v81[3 - 1];
											v79[v1903] = v79[v1903](v13(v79, v1903 + (3 - 2), v81[3]));
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v79[v81[1 + 1]][v81[3]] = v79[v81[5 - 1]];
											v73 = v73 + (1098 - (97 + 1000));
											v1902 = 31 - 22;
										end
										if ((1396 > 1357) and (v1902 == (1855 - (143 + 1702)))) then
											v73 = v73 + (1 - 0);
											v81 = v69[v73];
											v79[v81[371 - (40 + 329)]] = v79[v81[3 + 0]][v81[2 + 2]];
											v73 = v73 + (1 - 0);
											v81 = v69[v73];
											v79[v81[2]] = v79[v81[1 + 2]];
											v73 = v73 + (66 - (9 + 56));
											v81 = v69[v73];
											v1902 = 11;
										end
										if ((1759 >= 1120) and (v1902 == 15)) then
											v79[v81[586 - (531 + 53)]] = v79[v81[3 + 0]][v81[4]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[775 - (89 + 684)]] = v79[v81[3 + 0]][v81[2 + 2]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											if (not v79[v81[2 - 0]] or (1337 > 3499)) then
												v73 = v73 + 1 + 0;
											else
												v73 = v81[3];
											end
											break;
										end
										if ((5 + 0) == v1902) then
											v73 = v73 + (614 - (238 + 375));
											v81 = v69[v73];
											v79[v81[2]] = v79[v81[3 + 0]][v81[4]];
											v73 = v73 + (1 - 0);
											v81 = v69[v73];
											v79[v81[2 + 0]] = v79[v81[8 - 5]][v79[v81[4]]];
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v1902 = 16 - 10;
										end
										if (v1902 == (28 - 15)) then
											v79[v81[7 - 5]] = v79[v81[3 - 0]][v81[4 + 0]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v1903 = v81[1 + 1];
											v79[v1903] = v79[v1903](v79[v1903 + (463 - (428 + 34))]);
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[2]][v81[3]] = v79[v81[5 - 1]];
											v1902 = 30 - 16;
										end
										if ((21 - 12) == v1902) then
											v81 = v69[v73];
											v79[v81[920 - (223 + 695)]] = v64[v81[9 - 6]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[513 - (329 + 182)]] = v79[v81[1 + 2]][v81[6 - 2]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[1 + 1]] = v63[v81[2 + 1]];
											v1902 = 21 - 11;
										end
										if (v1902 == (7 - 1)) then
											v79[v81[1202 - (177 + 1023)]][v81[5 - 2]] = v79[v81[2 + 2]];
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v79[v81[1467 - (120 + 1345)]] = v64[v81[340 - (8 + 329)]];
											v73 = v73 + (126 - (19 + 106));
											v81 = v69[v73];
											v79[v81[7 - 5]] = v79[v81[3 - 0]][v81[4 + 0]];
											v73 = v73 + (2 - 1);
											v1902 = 18 - 11;
										end
										if ((4359 > 814) and (4 == v1902)) then
											v81 = v69[v73];
											v79[v81[7 - 5]][v81[6 - 3]] = v79[v81[2 + 2]];
											v73 = v73 + (1504 - (957 + 546));
											v81 = v69[v73];
											v79[v81[8 - 6]] = v64[v81[2 + 1]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[1 + 1]] = v63[v81[2 + 1]];
											v1902 = 708 - (227 + 476);
										end
										if ((22 - 11) == v1902) then
											v1903 = v81[3 - 1];
											v79[v1903] = v79[v1903](v13(v79, v1903 + 1, v81[4 - 1]));
											v73 = v73 + (1 - 0);
											v81 = v69[v73];
											v79[v81[2]][v81[3 - 0]] = v79[v81[958 - (166 + 788)]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[2]] = v64[v81[989 - (21 + 965)]];
											v1902 = 708 - (127 + 569);
										end
									end
								else
									local v1904 = 0 + 0;
									local v1905;
									while true do
										if (v1904 == 4) then
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[1 + 1]] = v79[v81[4 - 1]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[4 - 2]] = v63[v81[2 + 1]];
											v1904 = 2 + 3;
										end
										if (v1904 == 3) then
											v81 = v69[v73];
											v79[v81[1294 - (1162 + 130)]] = v81[5 - 2];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v1905 = v81[2];
											v79[v1905] = v79[v1905](v13(v79, v1905 + (2 - 1), v81[3]));
											v1904 = 940 - (889 + 47);
										end
										if (v1904 == (2 + 0)) then
											v81 = v69[v73];
											v79[v81[2]] = v81[3];
											v73 = v73 + (1265 - (1153 + 111));
											v81 = v69[v73];
											v79[v81[2]] = v81[3];
											v73 = v73 + (1 - 0);
											v1904 = 2 + 1;
										end
										if ((v1904 == 1) or (2287 > 4175)) then
											v81 = v69[v73];
											v79[v81[2 + 0]] = v79[v81[1 + 2]][v79[v81[2 + 2]]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[1 + 1]] = v79[v81[5 - 2]][v81[3 + 1]];
											v73 = v73 + (97 - (23 + 73));
											v1904 = 287 - (26 + 259);
										end
										if (v1904 == (3 + 2)) then
											v73 = v73 + (1 - 0);
											v81 = v69[v73];
											v79[v81[2]] = v79[v81[3]][v81[4]];
											v73 = v73 + (3 - 2);
											v81 = v69[v73];
											v79[v81[1631 - (1094 + 535)]] = v79[v81[3]][v81[1 + 3]];
											v1904 = 6;
										end
										if ((1651 < 4865) and (v1904 == (1876 - (1554 + 322)))) then
											v1905 = nil;
											v79[v81[2]] = v63[v81[1428 - (989 + 436)]];
											v73 = v73 + (1179 - (816 + 362));
											v81 = v69[v73];
											v79[v81[2]] = v79[v81[5 - 2]][v81[9 - 5]];
											v73 = v73 + (3 - 2);
											v1904 = 1;
										end
										if (v1904 == (10 - 4)) then
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											if ((3421 >= 2542) and v79[v81[8 - 6]]) then
												v73 = v73 + 1 + 0;
											else
												v73 = v81[766 - (86 + 677)];
											end
											break;
										end
									end
								end
							elseif ((v82 <= (56 + 35)) or (1796 == 1785)) then
								if (v82 > 90) then
									local v1906;
									v79[v81[2]] = v81[3];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1028 - (263 + 763)]] = v79[v81[3]][v79[v81[2 + 2]]];
									v73 = v73 + (859 - (649 + 209));
									v81 = v69[v73];
									v79[v81[8 - 6]] = v81[734 - (643 + 88)];
									v73 = v73 + (1770 - (54 + 1715));
									v81 = v69[v73];
									v79[v81[7 - 5]] = v81[8 - 5];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[1 + 2];
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v1906 = v81[1385 - (132 + 1251)];
									v79[v1906] = v79[v1906](v13(v79, v1906 + 1 + 0, v81[3]));
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2 + 0]][v79[v81[3]]] = v79[v81[4]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[460 - (185 + 273)]] = v81[3];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[3]][v79[v81[11 - 7]]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v81[1227 - (361 + 863)];
								else
									local v1925;
									v1925 = v81[5 - 3];
									v79[v1925] = v79[v1925](v13(v79, v1925 + (1328 - (443 + 884)), v81[7 - 4]));
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2 - 0]][v79[v81[3 + 0]]] = v79[v81[3 + 1]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[749 - (16 + 731)]] = v81[3];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[3]][v79[v81[4]]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[763 - (527 + 233)];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[4 - 2]][v79[v81[3 + 0]]] = v79[v81[1789 - (1107 + 678)]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[53 - (4 + 46)];
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v79[v81[3 - 1]] = v79[v81[3]][v79[v81[3 + 1]]];
								end
							elseif (v82 == (194 - 102)) then
								for v7485 = v81[2], v81[4 - 1] do
									v79[v7485] = nil;
								end
								v73 = v73 + (1397 - (1262 + 134));
								v81 = v69[v73];
								v79[v81[2]][v79[v81[6 - 3]]] = v79[v81[1 + 3]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v81[798 - (383 + 412)];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v79[v81[2 + 1]][v79[v81[4]]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								for v7487 = v81[2 + 0], v81[3 - 0] do
									v79[v7487] = nil;
								end
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[5 - 3]][v79[v81[3 - 0]]] = v79[v81[10 - 6]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[709 - (667 + 40)]] = v81[1313 - (436 + 874)];
								v73 = v73 + (1607 - (762 + 844));
								v81 = v69[v73];
								v79[v81[2 - 0]] = v79[v81[6 - 3]][v79[v81[1 + 3]]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[478 - (209 + 267)]] = v81[3] ~= (0 - 0);
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[5 - 3]][v79[v81[1714 - (1611 + 100)]]] = v79[v81[4 + 0]];
							else
								local v1958;
								local v1959;
								v79[v81[2]] = v79[v81[787 - (14 + 770)]][v81[1788 - (1165 + 619)]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v1959 = v81[2];
								v1958 = v79[v81[384 - (229 + 152)]];
								v79[v1959 + (195 - (107 + 87))] = v1958;
								v79[v1959] = v1958[v81[6 - 2]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v63[v81[3 + 0]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[14 - 11]][v81[15 - 11]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v1959 = v81[16 - (13 + 1)];
								v79[v1959] = v79[v1959](v13(v79, v1959 + 1 + 0, v81[2 + 1]));
								v73 = v73 + (1059 - (987 + 71));
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[8 - 5]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								if v79[v81[701 - (514 + 185)]] then
									v73 = v73 + 1 + 0;
								else
									v73 = v81[5 - 2];
								end
							end
						elseif ((v82 <= 100) or (3740 == 2660)) then
							if (v82 <= (369 - 273)) then
								if (v82 <= (1598 - (771 + 733))) then
									local v296 = 0 - 0;
									local v297;
									while true do
										if (v296 == (17 - 9)) then
											v73 = v73 + (1168 - (407 + 760));
											v81 = v69[v73];
											v297 = v81[2 + 0];
											v296 = 9;
										end
										if (v296 == (1 + 0)) then
											v81 = v69[v73];
											v79[v81[2 + 0]] = v79[v81[1857 - (169 + 1685)]][v81[4]];
											v73 = v73 + 1;
											v296 = 1 + 1;
										end
										if (v296 == (400 - (41 + 350))) then
											v79[v297] = v79[v297](v13(v79, v297 + (2 - 1), v81[7 - 4]));
											break;
										end
										if (v296 == (12 - 9)) then
											v81 = v69[v73];
											v79[v81[4 - 2]] = v79[v81[2 + 1]][v81[4]];
											v73 = v73 + (888 - (790 + 97));
											v296 = 18 - 14;
										end
										if (v296 == (2 + 4)) then
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[2]] = v63[v81[248 - (235 + 10)]];
											v296 = 5 + 2;
										end
										if (v296 == (3 - 1)) then
											v81 = v69[v73];
											v79[v81[1185 - (887 + 296)]] = v63[v81[1048 - (512 + 533)]];
											v73 = v73 + (1425 - (662 + 762));
											v296 = 680 - (334 + 343);
										end
										if ((37 <= 291) and ((16 - 11) == v296)) then
											v81 = v69[v73];
											v297 = v81[491 - (198 + 291)];
											v79[v297] = v79[v297](v79[v297 + 1 + 0]);
											v296 = 580 - (141 + 433);
										end
										if (v296 == 7) then
											v73 = v73 + (4 - 3);
											v81 = v69[v73];
											v79[v81[2 + 0]] = v79[v81[780 - (227 + 550)]][v81[9 - 5]];
											v296 = 21 - 13;
										end
										if (v296 == (107 - (72 + 31))) then
											v81 = v69[v73];
											v79[v81[350 - (89 + 259)]] = v79[v81[3 + 0]];
											v73 = v73 + 1 + 0;
											v296 = 1 + 4;
										end
										if (v296 == (0 - 0)) then
											v297 = nil;
											v79[v81[2 + 0]] = v79[v81[3]][v81[7 - 3]];
											v73 = v73 + (1404 - (1333 + 70));
											v296 = 1833 - (701 + 1131);
										end
									end
								elseif (v82 == (222 - (55 + 72))) then
									local v1973;
									local v1974;
									v1974 = v81[158 - (99 + 57)];
									v79[v1974](v13(v79, v1974 + (1 - 0), v81[2 + 1]));
									v73 = v73 + (1580 - (1243 + 336));
									v81 = v69[v73];
									v79[v81[1331 - (774 + 555)]] = v81[3];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[3]][v79[v81[4]]];
									v73 = v73 + (800 - (150 + 649));
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[4 - 1];
									v73 = v73 + 1;
									v81 = v69[v73];
									v1974 = v81[3 - 1];
									v1973 = v79[v81[1987 - (1122 + 862)]];
									v79[v1974 + (1 - 0)] = v1973;
									v79[v1974] = v1973[v79[v81[4]]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[3 - 1]] = {};
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1 + 1]] = v81[3];
									v73 = v73 + (744 - (549 + 194));
									v81 = v69[v73];
									v79[v81[2 + 0]] = v79[v81[11 - 8]][v79[v81[1 + 3]]];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[3];
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v79[v81[1705 - (453 + 1250)]] = v79[v81[3]][v79[v81[11 - 7]]];
								else
									local v1993;
									local v1994;
									v79[v81[2]][v79[v81[3 + 0]]] = v79[v81[579 - (203 + 372)]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1 + 1]] = v81[8 - 5];
									v73 = v73 + (1383 - (978 + 404));
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[9 - 6]][v79[v81[4 + 0]]];
									v73 = v73 + (319 - (56 + 262));
									v81 = v69[v73];
									v1994 = v81[1 + 1];
									v79[v1994](v13(v79, v1994 + (115 - (108 + 6)), v81[2 + 1]));
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v81[3];
									v73 = v73 + (1953 - (653 + 1299));
									v81 = v69[v73];
									v79[v81[2 + 0]] = v79[v81[3]][v79[v81[2 + 2]]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[4 - 2]] = v81[3];
									v73 = v73 + (1923 - (1042 + 880));
									v81 = v69[v73];
									v1994 = v81[2];
									v1993 = v79[v81[1 + 2]];
									v79[v1994 + (1003 - (16 + 986))] = v1993;
									v79[v1994] = v1993[v79[v81[1222 - (700 + 518)]]];
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v79[v81[2 - 0]] = {};
									v73 = v73 + (1512 - (617 + 894));
									v81 = v69[v73];
									v79[v81[3 - 1]] = v81[461 - (271 + 187)];
								end
							elseif (v82 <= (1682 - (731 + 853))) then
								if (v82 == 97) then
									local v2015 = 0 - 0;
									while true do
										if ((947 <= 1714) and (v2015 == (1527 - (199 + 1322)))) then
											v79[v81[2]] = v81[5 - 2];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[2]] = v79[v81[1663 - (1291 + 369)]][v79[v81[4]]];
											break;
										end
										if ((0 + 0) == v2015) then
											v79[v81[1 + 1]] = v81[3 + 0];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[2]] = v79[v81[1 + 2]][v79[v81[689 - (561 + 124)]]];
											v2015 = 1 + 0;
										end
										if (v2015 == (854 - (25 + 828))) then
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v79[v81[3 - 1]] = v81[593 - (99 + 491)] ~= (48 - (18 + 30));
											v73 = v73 + (2 - 1);
											v2015 = 3 - 1;
										end
										if (v2015 == (5 - 1)) then
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[6 - 4]] = v79[v81[735 - (501 + 231)]][v79[v81[4]]];
											v73 = v73 + 1 + 0;
											v2015 = 1703 - (470 + 1228);
										end
										if (v2015 == 5) then
											v81 = v69[v73];
											v79[v81[2]] = {};
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v2015 = 4 + 2;
										end
										if ((3277 <= 3634) and (v2015 == (689 - (537 + 149)))) then
											v79[v81[2]][v79[v81[3 - 0]]] = v79[v81[3 + 1]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[3 - 1]] = v81[9 - 6];
											v2015 = 11 - 7;
										end
										if (v2015 == (2 + 0)) then
											v81 = v69[v73];
											v79[v81[1 + 1]][v79[v81[2 + 1]]] = v79[v81[4]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v2015 = 3 + 0;
										end
									end
								else
									v79[v81[2]] = v79[v81[3]][v81[1 + 3]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[4 - 1]][v81[2 + 2]];
									v73 = v73 + (580 - (134 + 445));
									v81 = v69[v73];
									v79[v81[3 - 1]][v81[3 + 0]] = v79[v81[3 + 1]];
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v79[v81[2]] = v63[v81[3]];
									v73 = v73 + (261 - (36 + 224));
									v81 = v69[v73];
									v79[v81[1862 - (1033 + 827)]] = v79[v81[1849 - (1002 + 844)]][v81[1354 - (1126 + 224)]];
									v73 = v73 + 1;
									v81 = v69[v73];
									if (v79[v81[1 + 1]] or (3173 == 3884)) then
										v73 = v73 + 1 + 0;
									else
										v73 = v81[9 - 6];
									end
								end
							elseif (v82 == (163 - (48 + 16))) then
								local v2025;
								local v2026;
								v79[v81[2 + 0]] = v79[v81[14 - 11]][v81[12 - 8]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v2026 = v81[1091 - (910 + 179)];
								v2025 = v79[v81[5 - 2]];
								v79[v2026 + (1 - 0)] = v2025;
								v79[v2026] = v2025[v81[1383 - (933 + 446)]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v2026 = v81[2];
								v79[v2026](v79[v2026 + (1525 - (248 + 1276))]);
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v63[v81[3]];
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v79[v81[2]][v81[9 - 6]] = v81[4];
								v73 = v73 + (1546 - (151 + 1394));
								v81 = v69[v73];
								v73 = v81[947 - (929 + 15)];
							else
								local v2041 = 0;
								local v2042;
								while true do
									if (v2041 == (1999 - (1173 + 823))) then
										v81 = v69[v73];
										v2042 = v81[2 - 0];
										v79[v2042] = v79[v2042](v79[v2042 + 1]);
										v73 = v73 + (1777 - (482 + 1294));
										v2041 = 7 - 3;
									end
									if (v2041 == (4 + 4)) then
										v79[v81[2]][v81[3]] = v79[v81[1310 - (1125 + 181)]];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[2]] = v81[2 + 1];
										break;
									end
									if (v2041 == 0) then
										v2042 = nil;
										v79[v81[2 - 0]] = v64[v81[1192 - (626 + 563)]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v2041 = 1251 - (153 + 1097);
									end
									if ((v2041 == (12 - 8)) or (340 >= 499)) then
										v81 = v69[v73];
										v79[v81[1 + 1]][v81[7 - 4]] = v79[v81[3 + 1]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v2041 = 2 + 3;
									end
									if (v2041 == (1 + 0)) then
										v79[v81[2]] = v79[v81[3 + 0]][v81[4]];
										v73 = v73 + (1158 - (199 + 958));
										v81 = v69[v73];
										v79[v81[2]] = v63[v81[3]];
										v2041 = 2;
									end
									if (v2041 == (5 + 2)) then
										v81 = v69[v73];
										v79[v81[4 - 2]] = v79[v81[6 - 3]][v81[1180 - (1169 + 7)]];
										v73 = v73 + (1874 - (751 + 1122));
										v81 = v69[v73];
										v2041 = 1 + 7;
									end
									if (((6 + 0) == v2041) or (4615 <= 3882)) then
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[1 + 1]] = v63[v81[4 - 1]];
										v73 = v73 + (1182 - (589 + 592));
										v2041 = 13 - 6;
									end
									if (v2041 == (2 + 3)) then
										v79[v81[26 - (13 + 11)]] = v63[v81[2 + 1]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[1262 - (684 + 576)]] = v79[v81[2 + 1]][v81[9 - 5]];
										v2041 = 6;
									end
									if ((3421 >= 2333) and (v2041 == (1 + 1))) then
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[3 - 0]][v81[4 + 0]];
										v73 = v73 + 1 + 0;
										v2041 = 2 + 1;
									end
								end
							end
						elseif (v82 <= (16 + 87)) then
							if (v82 <= (31 + 70)) then
								local v298;
								v79[v81[1850 - (230 + 1618)]] = v64[v81[3 + 0]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 + 0]] = v63[v81[206 - (131 + 72)]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[206 - (144 + 60)]] = v79[v81[12 - 9]][v81[6 - 2]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[14 - 11]][v79[v81[1 + 3]]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v298 = v81[1924 - (523 + 1399)];
								v79[v298] = v79[v298]();
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2 + 0]][v81[407 - (72 + 332)]] = v79[v81[980 - (269 + 707)]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[4 - 2]] = v64[v81[133 - (123 + 7)]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 + 0]] = v79[v81[13 - 10]][v81[4]];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[1090 - (38 + 1050)]] = v79[v81[2 + 1]][v81[2 + 2]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[826 - (426 + 397)]][v81[1410 - (751 + 655)]];
							elseif (v82 == (203 - 101)) then
								local v2043;
								local v2044;
								v79[v81[2]] = v81[1 + 2];
								v73 = v73 + (1246 - (39 + 1206));
								v81 = v69[v73];
								v79[v81[5 - 3]] = v81[3];
								v73 = v73 + (842 - (566 + 275));
								v81 = v69[v73];
								v79[v81[937 - (167 + 768)]] = v81[2 + 1];
								v73 = v73 + 1;
								v81 = v69[v73];
								v2044 = v81[2 - 0];
								v79[v2044] = v79[v2044](v13(v79, v2044 + 1 + 0, v81[3 + 0]));
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2 - 0]][v79[v81[3]]] = v79[v81[19 - (8 + 7)]];
								v73 = v73 + (1684 - (1510 + 173));
								v81 = v69[v73];
								v79[v81[2 - 0]] = v81[1 + 2];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[255 - (30 + 223)]] = v79[v81[1259 - (300 + 956)]][v79[v81[126 - (22 + 100)]]];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[284 - (47 + 235)]] = v64[v81[9 - 6]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[488 - (21 + 465)]] = v81[3 + 0];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v79[v81[3]][v79[v81[4 - 0]]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1219 - (553 + 664)]] = v81[2 + 1];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[80 - (73 + 5)]] = v81[3];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1717 - (1128 + 587)]] = v81[11 - 8];
								v73 = v73 + (691 - (558 + 132));
								v81 = v69[v73];
								v2044 = v81[2];
								v79[v2044] = v79[v2044](v13(v79, v2044 + 1, v81[7 - 4]));
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[5 - 3]][v79[v81[1 + 2]]] = v79[v81[4 + 0]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[4 - 1];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 + 0]] = v79[v81[774 - (294 + 477)]][v79[v81[4]]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v64[v81[6 - 3]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[2]] = v81[1 + 2];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[4 - 2]] = v79[v81[985 - (97 + 885)]][v79[v81[2 + 2]]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[367 - (271 + 94)]] = v81[1606 - (777 + 826)];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[3];
								v73 = v73 + (1356 - (117 + 1238));
								v81 = v69[v73];
								v79[v81[1717 - (686 + 1029)]] = v81[1359 - (1074 + 282)];
								v73 = v73 + (1618 - (1359 + 258));
								v81 = v69[v73];
								v2044 = v81[4 - 2];
								v79[v2044] = v79[v2044](v13(v79, v2044 + (1936 - (1730 + 205)), v81[531 - (67 + 461)]));
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[2 - 0]][v79[v81[6 - 3]]] = v79[v81[1 + 3]];
								v73 = v73 + (630 - (129 + 500));
								v81 = v69[v73];
								v79[v81[1713 - (1157 + 554)]] = v81[3 - 0];
								v73 = v73 + (608 - (82 + 525));
								v81 = v69[v73];
								v79[v81[2 + 0]] = v79[v81[3]][v79[v81[8 - 4]]];
								v73 = v73 + (1624 - (948 + 675));
								v81 = v69[v73];
								v79[v81[1 + 1]] = v64[v81[3]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[5 - 3]] = v81[3];
								v73 = v73 + (854 - (406 + 447));
								v81 = v69[v73];
								v79[v81[119 - (91 + 26)]] = v79[v81[3]][v79[v81[13 - 9]]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[988 - (968 + 18)]] = v81[3 + 0];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v81[5 - 2];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[269 - (172 + 95)]] = v81[3];
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v2044 = v81[267 - (260 + 5)];
								v79[v2044] = v79[v2044](v13(v79, v2044 + (2 - 1), v81[822 - (265 + 554)]));
								v73 = v73 + (1572 - (1440 + 131));
								v81 = v69[v73];
								v79[v81[5 - 3]][v79[v81[3]]] = v79[v81[4]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1397 - (253 + 1142)]] = v81[256 - (133 + 120)];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[1959 - (809 + 1147)]][v79[v81[501 - (178 + 319)]]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[2]] = v64[v81[2 + 1]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1272 - (1255 + 15)]] = v81[1545 - (1221 + 321)];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[2 + 0]] = v79[v81[11 - 8]][v79[v81[14 - 10]]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[6 - 3];
								v73 = v73 + (408 - (204 + 203));
								v81 = v69[v73];
								v79[v81[80 - (48 + 30)]] = v81[2 + 1];
								v73 = v73 + (1965 - (1472 + 492));
								v81 = v69[v73];
								v79[v81[5 - 3]] = v81[2 + 1];
								v73 = v73 + (612 - (258 + 353));
								v81 = v69[v73];
								v2044 = v81[1996 - (1382 + 612)];
								v79[v2044] = v79[v2044](v13(v79, v2044 + 1, v81[3 + 0]));
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1 + 1]][v79[v81[8 - 5]]] = v79[v81[3 + 1]];
								v73 = v73 + (120 - (35 + 84));
								v81 = v69[v73];
								v79[v81[217 - (75 + 140)]][v79[v81[3]]] = v79[v81[14 - 10]];
								v73 = v73 + (1800 - (923 + 876));
								v81 = v69[v73];
								v79[v81[5 - 3]] = v81[815 - (284 + 528)];
								v73 = v73 + (1020 - (867 + 152));
								v81 = v69[v73];
								v79[v81[1108 - (709 + 397)]] = v79[v81[3]][v79[v81[14 - 10]]];
								v73 = v73 + (37 - (21 + 15));
								v81 = v69[v73];
								v79[v81[2 - 0]] = v81[3];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v2044 = v81[2];
								v2043 = v79[v81[1 + 2]];
								v79[v2044 + (2 - 1)] = v2043;
								v79[v2044] = v2043[v79[v81[9 - 5]]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1 + 1]] = {};
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]] = v81[138 - (97 + 38)];
								v73 = v73 + (81 - (52 + 28));
								v81 = v69[v73];
								v79[v81[1 + 1]] = v79[v81[852 - (59 + 790)]][v79[v81[4 + 0]]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[943 - (467 + 473)];
								v73 = v73 + (4 - 3);
								v81 = v69[v73];
								v79[v81[5 - 3]] = v79[v81[7 - 4]][v79[v81[9 - 5]]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1 + 1]][v79[v81[6 - 3]]] = v79[v81[15 - 11]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[1 + 2];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[239 - (58 + 179)]] = v79[v81[7 - 4]][v79[v81[1257 - (677 + 576)]]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v81[6 - 3];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[222 - (88 + 132)]] = v79[v81[3]][v79[v81[4 + 0]]];
								v73 = v73 + (4 - 3);
								v81 = v69[v73];
								v79[v81[6 - 4]][v79[v81[3]]] = v79[v81[295 - (12 + 279)]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v2044 = v81[3 - 1];
								v79[v2044] = v79[v2044](v13(v79, v2044 + 1, v81[1 + 2]));
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[949 - (652 + 295)]] = v81[1 + 2];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v2044 = v81[991 - (848 + 141)];
								v2043 = v79[v81[743 - (372 + 368)]];
								v79[v2044 + 1 + 0] = v2043;
								v79[v2044] = v2043[v79[v81[1134 - (542 + 588)]]];
								v73 = v73 + (819 - (6 + 812));
								v81 = v69[v73];
								v79[v81[1707 - (1599 + 106)]] = {};
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[2 + 1];
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v79[v81[2 - 0]] = v79[v81[1 + 2]][v79[v81[1 + 3]]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[1 + 2];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1931 - (1690 + 239)]] = v79[v81[10 - 7]][v79[v81[3 + 1]]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[4 - 2]][v79[v81[3]]] = v79[v81[3 + 1]];
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v2044 = v81[1870 - (1736 + 132)];
								v79[v2044](v13(v79, v2044 + 1 + 0, v81[9 - 6]));
								v73 = v73 + (4 - 3);
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[35 - (27 + 5)];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v2044 = v81[2 + 0];
								v2043 = v79[v81[2 + 1]];
								v79[v2044 + 1 + 0] = v2043;
								v79[v2044] = v2043[v79[v81[3 + 1]]];
								v73 = v73 + (1118 - (771 + 346));
								v81 = v69[v73];
								v79[v81[1636 - (1577 + 57)]] = {};
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2 - 0]] = v81[3];
								v73 = v73 + (1081 - (684 + 396));
								v81 = v69[v73];
								v79[v81[5 - 3]] = v79[v81[1199 - (700 + 496)]][v79[v81[4 + 0]]];
								v73 = v73 + (253 - (65 + 187));
								v81 = v69[v73];
								v79[v81[941 - (827 + 112)]] = v81[3 + 0];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[4 - 2]] = v79[v81[7 - 4]][v79[v81[4]]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[9 - 7]][v79[v81[1 + 2]]] = v79[v81[1 + 3]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]] = v81[1199 - (551 + 645)];
							else
								local v2151 = 343 - (166 + 177);
								while true do
									if (v2151 == (1864 - (1361 + 495))) then
										v73 = v81[7 - 4];
										break;
									end
									if (v2151 == 4) then
										v79[v81[2]] = v79[v81[2 + 1]][v81[8 - 4]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v2151 = 5;
									end
									if (v2151 == (231 - (148 + 76))) then
										v79[v81[7 - 5]] = v81[7 - 4];
										v73 = v73 + 1;
										v81 = v69[v73];
										v2151 = 8;
									end
									if (v2151 == (4 + 2)) then
										v79[v81[1744 - (735 + 1007)]] = v79[v81[3]][v81[4]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v2151 = 286 - (111 + 168);
									end
									if (v2151 == (0 + 0)) then
										v79[v81[1 + 1]] = v63[v81[3]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v2151 = 1 - 0;
									end
									if (v2151 == (1 + 0)) then
										v79[v81[2 + 0]] = v79[v81[1 + 2]][v81[17 - 13]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v2151 = 934 - (147 + 785);
									end
									if (v2151 == (669 - (483 + 183))) then
										v79[v81[2]] = v79[v81[8 - 5]][v81[4]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v2151 = 1915 - (1790 + 121);
									end
									if (v2151 == (6 - 4)) then
										v79[v81[1541 - (259 + 1280)]] = v79[v81[1587 - (160 + 1424)]][v81[4 + 0]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v2151 = 773 - (479 + 291);
									end
									if (v2151 == (9 - 4)) then
										v79[v81[973 - (569 + 402)]] = v79[v81[1308 - (635 + 670)]] - v79[v81[9 - 5]];
										v73 = v73 + (3 - 2);
										v81 = v69[v73];
										v2151 = 604 - (42 + 556);
									end
								end
							end
						elseif ((v82 <= (1506 - (1246 + 155))) or (3568 <= 2647)) then
							if (v82 > (836 - (31 + 701))) then
								local v2152 = 0 - 0;
								local v2153;
								while true do
									if ((183 < 2554) and ((506 - (393 + 106)) == v2152)) then
										v73 = v73 + (1172 - (727 + 444));
										v81 = v69[v73];
										v79[v81[2]] = v81[8 - 5];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[655 - (269 + 384)]] = v79[v81[3]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[1571 - (598 + 971)]] = v81[2 + 1];
										v2152 = 26 - 18;
									end
									if ((v2152 == (18 - 14)) or (4820 < 4018)) then
										v79[v81[5 - 3]] = v81[1448 - (800 + 645)];
										v73 = v73 + 1;
										v81 = v69[v73];
										v2153 = v81[1 + 1];
										v79[v2153] = v79[v2153](v13(v79, v2153 + (791 - (687 + 103)), v81[1165 - (142 + 1020)]));
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[1 + 1]][v79[v81[516 - (306 + 207)]]] = v79[v81[1408 - (112 + 1292)]];
										v73 = v73 + 1 + 0;
										v2152 = 957 - (587 + 365);
									end
									if ((1408 <= 2329) and (v2152 == (1726 - (829 + 886)))) then
										v81 = v69[v73];
										v79[v81[4 - 2]][v79[v81[1 + 2]]] = v79[v81[4]];
										v73 = v73 + (3 - 2);
										v81 = v69[v73];
										v79[v81[6 - 4]] = v81[3 + 0];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2 - 0]] = v79[v81[980 - (613 + 364)]];
										v73 = v73 + 1 + 0;
										v2152 = 6 + 6;
									end
									if ((3 + 10) == v2152) then
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[7 - 5]][v79[v81[9 - 6]]] = v79[v81[3 + 1]];
										v73 = v73 + (1940 - (1467 + 472));
										v81 = v69[v73];
										v79[v81[2 - 0]] = v81[3];
										v73 = v73 + (1548 - (1077 + 470));
										v81 = v69[v73];
										v79[v81[1 + 1]] = v79[v81[1 + 2]];
										v2152 = 63 - 49;
									end
									if (v2152 == (447 - (12 + 417))) then
										v81 = v69[v73];
										v79[v81[4 - 2]] = v79[v81[3]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2 - 0]] = v81[3];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v79[v81[2]] = v81[5 - 2];
										v73 = v73 + 1 + 0;
										v2152 = 8 + 11;
									end
									if (v2152 == (1 + 2)) then
										v79[v81[5 - 3]] = v81[1108 - (924 + 181)];
										v73 = v73 + (798 - (263 + 534));
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[1 + 2]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2 + 0]] = v81[5 - 2];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v2152 = 3 + 1;
									end
									if (v2152 == (729 - (562 + 145))) then
										v79[v81[2]] = v81[1 + 2];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[2 + 1]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[1 + 1]] = v81[3];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v2152 = 23 + 0;
									end
									if (v2152 == (41 - 32)) then
										v79[v81[1 + 1]][v79[v81[2 + 1]]] = v79[v81[1880 - (1459 + 417)]];
										v73 = v73 + (287 - (194 + 92));
										v81 = v69[v73];
										v79[v81[1387 - (1057 + 328)]] = v81[8 - 5];
										v73 = v73 + (4 - 3);
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[535 - (5 + 527)]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v2152 = 10;
									end
									if (v2152 == (800 - (342 + 438))) then
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[1 + 1]] = v79[v81[3 + 0]];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v79[v81[1 + 1]] = v81[3];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[3 - 1]] = v81[3];
										v2152 = 37 - 16;
									end
									if (v2152 == 19) then
										v81 = v69[v73];
										v2153 = v81[14 - (6 + 6)];
										v79[v2153] = v79[v2153](v13(v79, v2153 + 1, v81[8 - 5]));
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[1 + 1]][v79[v81[1256 - (206 + 1047)]]] = v79[v81[4]];
										v73 = v73 + (1113 - (470 + 642));
										v81 = v69[v73];
										v79[v81[1 + 1]] = v81[1070 - (552 + 515)];
										v2152 = 17 + 3;
									end
									if (v2152 == 14) then
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2 + 0]] = v81[2 + 1];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2 + 0]] = v81[3];
										v73 = v73 + 1;
										v81 = v69[v73];
										v2153 = v81[2 + 0];
										v2152 = 15;
									end
									if ((1056 - (701 + 350)) == v2152) then
										v81 = v69[v73];
										v79[v81[2 + 0]] = v81[2 + 1];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2 - 0]] = v79[v81[9 - 6]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[4 - 2]] = v81[1 + 2];
										v73 = v73 + 1 + 0;
										v2152 = 6;
									end
									if ((1119 <= 3850) and (v2152 == 26)) then
										v73 = v73 + (3 - 2);
										v81 = v69[v73];
										v79[v81[1348 - (281 + 1065)]] = v81[13 - 10];
										v73 = v73 + (3 - 2);
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[1214 - (1114 + 97)]];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v79[v81[1915 - (279 + 1634)]] = v81[1283 - (1213 + 67)];
										v2152 = 218 - (65 + 126);
									end
									if ((4804 == 4804) and (v2152 == 17)) then
										v2153 = v81[2 + 0];
										v79[v2153] = v79[v2153](v13(v79, v2153 + (1086 - (189 + 896)), v81[1 + 2]));
										v73 = v73 + (1964 - (1872 + 91));
										v81 = v69[v73];
										v79[v81[4 - 2]][v79[v81[3 + 0]]] = v79[v81[14 - 10]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[1 + 1]] = v81[10 - 7];
										v73 = v73 + (77 - (22 + 54));
										v2152 = 41 - 23;
									end
									if ((2224 < 4503) and (8 == v2152)) then
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[1 + 1]] = v81[11 - 8];
										v73 = v73 + 1;
										v81 = v69[v73];
										v2153 = v81[1536 - (553 + 981)];
										v79[v2153] = v79[v2153](v13(v79, v2153 + 1, v81[3 + 0]));
										v73 = v73 + 1;
										v81 = v69[v73];
										v2152 = 6 + 3;
									end
									if (v2152 == 1) then
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[5 - 3]] = v79[v81[3]];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v79[v81[1899 - (1320 + 577)]] = v81[852 - (667 + 182)];
										v73 = v73 + (1289 - (1115 + 173));
										v81 = v69[v73];
										v79[v81[3 - 1]] = v81[3 + 0];
										v2152 = 2;
									end
									if ((v2152 == (1779 - (1375 + 380))) or (1889 < 1416)) then
										v81 = v69[v73];
										v79[v81[1 + 1]] = v81[29 - (12 + 14)];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[4 - 2]] = v79[v81[7 - 4]];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[2]] = v81[4 - 1];
										v73 = v73 + (1 - 0);
										v2152 = 756 - (354 + 377);
									end
									if (v2152 == 2) then
										v73 = v73 + (4 - 3);
										v81 = v69[v73];
										v2153 = v81[5 - 3];
										v79[v2153] = v79[v2153](v13(v79, v2153 + (1983 - (263 + 1719)), v81[2 + 1]));
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[361 - (335 + 24)]][v79[v81[954 - (882 + 69)]]] = v79[v81[1690 - (657 + 1029)]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v2152 = 1203 - (685 + 515);
									end
									if (v2152 == (1665 - (745 + 893))) then
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[774 - (274 + 498)]] = v81[1 + 2];
										v73 = v73 + 1;
										v81 = v69[v73];
										v2153 = v81[1 + 1];
										v79[v2153] = v79[v2153](v13(v79, v2153 + 1, v81[1609 - (1035 + 571)]));
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v2152 = 28;
									end
									if (v2152 == (4 + 6)) then
										v79[v81[7 - 5]] = v81[8 - 5];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2 + 0]] = v81[8 - 5];
										v73 = v73 + 1;
										v81 = v69[v73];
										v2153 = v81[226 - (109 + 115)];
										v79[v2153] = v79[v2153](v13(v79, v2153 + (1400 - (1047 + 352)), v81[3]));
										v73 = v73 + (1766 - (852 + 913));
										v2152 = 8 + 3;
									end
									if (v2152 == (1351 - (384 + 961))) then
										v81 = v69[v73];
										v79[v81[4 - 2]] = v81[3];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v2153 = v81[7 - 5];
										v79[v2153] = v79[v2153](v13(v79, v2153 + (593 - (591 + 1)), v81[1 + 2]));
										v73 = v73 + (1471 - (218 + 1252));
										v81 = v69[v73];
										v79[v81[2]][v79[v81[3 + 0]]] = v79[v81[360 - (321 + 35)]];
										v2152 = 7;
									end
									if (v2152 == (394 - (239 + 155))) then
										v2153 = nil;
										v2153 = v81[2 + 0];
										v79[v2153] = v79[v2153](v13(v79, v2153 + (43 - (41 + 1)), v81[3]));
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[202 - (80 + 120)]][v79[v81[3 + 0]]] = v79[v81[7 - 3]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2 + 0]] = v81[14 - 11];
										v2152 = 2 - 1;
									end
									if (v2152 == (88 - 67)) then
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v2153 = v81[2];
										v79[v2153] = v79[v2153](v13(v79, v2153 + 1, v81[2 + 1]));
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[1 + 1]][v79[v81[1229 - (165 + 1061)]]] = v79[v81[4]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v2152 = 18 + 4;
									end
									if (v2152 == 15) then
										v79[v2153] = v79[v2153](v13(v79, v2153 + (1644 - (596 + 1047)), v81[1 + 2]));
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2 + 0]][v79[v81[3 - 0]]] = v79[v81[3 + 1]];
										v73 = v73 + (738 - (185 + 552));
										v81 = v69[v73];
										v79[v81[2]] = v81[3];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v2152 = 617 - (507 + 94);
									end
									if (v2152 == (123 - 95)) then
										v79[v81[1 + 1]][v79[v81[4 - 1]]] = v79[v81[1741 - (569 + 1168)]];
										break;
									end
									if ((2937 == 2937) and (v2152 == (22 - 10))) then
										v81 = v69[v73];
										v79[v81[3 - 1]] = v81[354 - (118 + 233)];
										v73 = v73 + (345 - (279 + 65));
										v81 = v69[v73];
										v79[v81[2 - 0]] = v81[4 - 1];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v2153 = v81[2];
										v79[v2153] = v79[v2153](v13(v79, v2153 + 1, v81[7 - 4]));
										v2152 = 1831 - (1414 + 404);
									end
									if ((2655 == 2655) and (v2152 == (781 - (347 + 409)))) then
										v81 = v69[v73];
										v79[v81[2 + 0]] = v81[3 + 0];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v2153 = v81[1 + 1];
										v79[v2153] = v79[v2153](v13(v79, v2153 + (1579 - (420 + 1158)), v81[7 - 4]));
										v73 = v73 + (612 - (406 + 205));
										v81 = v69[v73];
										v79[v81[2]][v79[v81[10 - 7]]] = v79[v81[4]];
										v2152 = 15 + 11;
									end
									if (v2152 == 16) then
										v79[v81[2 + 0]] = v79[v81[7 - 4]];
										v73 = v73 + (62 - (28 + 33));
										v81 = v69[v73];
										v79[v81[1 + 1]] = v81[1010 - (858 + 149)];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2 - 0]] = v81[3];
										v73 = v73 + (1508 - (829 + 678));
										v81 = v69[v73];
										v2152 = 13 + 4;
									end
									if (v2152 == (1239 - (143 + 1073))) then
										v79[v81[1817 - (898 + 917)]] = v81[5 - 2];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v2153 = v81[1471 - (882 + 587)];
										v79[v2153] = v79[v2153](v13(v79, v2153 + 1 + 0, v81[2 + 1]));
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2]][v79[v81[267 - (140 + 124)]]] = v79[v81[4 + 0]];
										v73 = v73 + (1536 - (1105 + 430));
										v2152 = 64 - 40;
									end
								end
							else
								local v2154 = 0 - 0;
								local v2155;
								while true do
									if (v2154 == (6 - 3)) then
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v79[v81[2 + 0]] = v63[v81[2 + 1]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2 + 0]] = v79[v81[1 + 2]][v81[1995 - (1047 + 944)]];
										v73 = v73 + (1303 - (206 + 1096));
										v2154 = 198 - (30 + 164);
									end
									if (v2154 == (17 - 13)) then
										v81 = v69[v73];
										v79[v81[1 + 1]] = v79[v81[1477 - (1383 + 91)]][v81[15 - 11]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2]][v81[5 - 2]] = v79[v81[1664 - (1174 + 486)]];
										v73 = v73 + (428 - (172 + 255));
										v81 = v69[v73];
										v2154 = 15 - 10;
									end
									if (v2154 == (11 - 6)) then
										v79[v81[1530 - (594 + 934)]][v81[571 - (211 + 357)]] = v81[1 + 3];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2 - 0]][v81[3 + 0]] = v81[1418 - (159 + 1255)];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[779 - (24 + 753)]][v81[2 + 1]] = v81[4 - 0];
										v2154 = 1138 - (898 + 234);
									end
									if (v2154 == (536 - (333 + 202))) then
										v79[v81[1 + 1]] = v81[2 + 1];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v79[v81[1281 - (1018 + 261)]] = v81[7 - 4];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[133 - (93 + 38)]] = v81[1 + 2];
										v2154 = 2 + 0;
									end
									if ((2 + 5) == v2154) then
										v81 = v69[v73];
										v79[v81[2 + 0]] = v79[v81[6 - 3]][v81[14 - 10]];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[2]] = v63[v81[14 - 11]];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v2154 = 2 + 6;
									end
									if (v2154 == (0 - 0)) then
										v2155 = nil;
										v79[v81[2 + 0]] = v79[v81[423 - (14 + 406)]][v81[7 - 3]];
										v73 = v73 + (3 - 2);
										v81 = v69[v73];
										v79[v81[2]] = v81[3];
										v73 = v73 + 1;
										v81 = v69[v73];
										v2154 = 1631 - (20 + 1610);
									end
									if ((1471 < 4366) and (v2154 == (3 + 3))) then
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[5 - 3]][v81[520 - (243 + 274)]] = v79[v81[4]];
										v73 = v73 + (1623 - (1437 + 185));
										v81 = v69[v73];
										v79[v81[5 - 3]] = v64[v81[2 + 1]];
										v73 = v73 + 1;
										v2154 = 26 - 19;
									end
									if (v2154 == (8 + 0)) then
										v79[v81[1 + 1]] = v79[v81[819 - (326 + 490)]][v81[3 + 1]];
										v73 = v73 + (204 - (181 + 22));
										v81 = v69[v73];
										v2155 = v81[77 - (35 + 40)];
										v79[v2155] = v79[v2155](v79[v2155 + (3 - 2)]);
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v2154 = 1 + 8;
									end
									if (v2154 == (887 - (297 + 581))) then
										v79[v81[1 + 1]] = v79[v81[3 - 0]];
										v73 = v73 + (3 - 2);
										v81 = v69[v73];
										v79[v81[1 + 1]] = v81[12 - 9];
										break;
									end
									if (v2154 == (8 - 6)) then
										v73 = v73 + (1738 - (1505 + 232));
										v81 = v69[v73];
										v2155 = v81[2];
										v79[v2155] = v79[v2155](v13(v79, v2155 + (1319 - (415 + 903)), v81[8 - 5]));
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v79[v81[719 - (155 + 562)]][v81[2 + 1]] = v79[v81[4]];
										v2154 = 120 - (71 + 46);
									end
								end
							end
						elseif ((v82 == (164 - 58)) or (4979 < 61)) then
							local v2156 = 685 - (436 + 249);
							local v2157;
							while true do
								if ((v2156 == (1623 - (56 + 1565))) or (2771 < 1733)) then
									v81 = v69[v73];
									v79[v81[1 + 1]] = v79[v81[3]][v81[988 - (80 + 904)]];
									v73 = v73 + 1;
									v2156 = 3;
								end
								if ((1 + 0) == v2156) then
									v81 = v69[v73];
									v79[v81[802 - (595 + 205)]] = v63[v81[6 - 3]];
									v73 = v73 + (2 - 1);
									v2156 = 2 + 0;
								end
								if ((4392 > 2206) and (v2156 == 0)) then
									v2157 = nil;
									v79[v81[1 + 1]] = v79[v81[9 - 6]][v81[2 + 2]];
									v73 = v73 + 1;
									v2156 = 666 - (400 + 265);
								end
								if (v2156 == (7 - 3)) then
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v2157 = v81[2];
									v2156 = 10 - 5;
								end
								if ((2896 <= 3813) and (v2156 == (2 + 1))) then
									v81 = v69[v73];
									v2157 = v81[2];
									do
										return v79[v2157](v13(v79, v2157 + (1672 - (962 + 709)), v81[3]));
									end
									v2156 = 4 + 0;
								end
								if (v2156 == (4 + 1)) then
									do
										return v13(v79, v2157, v74);
									end
									break;
								end
							end
						else
							local v2158 = 0;
							local v2159;
							while true do
								if ((2455 > 838) and (v2158 == (8 + 3))) then
									v81 = v69[v73];
									v79[v81[7 - 5]] = v79[v81[3]][v81[10 - 6]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]] = v81[784 - (636 + 145)];
									v73 = v73 + (296 - (282 + 13));
									v81 = v69[v73];
									v79[v81[1150 - (366 + 782)]] = v81[92 - (10 + 79)];
									v73 = v73 + (1708 - (1297 + 410));
									v81 = v69[v73];
									v2158 = 41 - 29;
								end
								if ((v2158 == 4) or (2530 == 4933)) then
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[280 - (262 + 16)]] = v79[v81[6 - 3]][v81[3 + 1]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1 + 1]] = v63[v81[1853 - (1056 + 794)]];
									v73 = v73 + (1349 - (741 + 607));
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[1759 - (730 + 1026)]][v81[1797 - (248 + 1545)]];
									v73 = v73 + 1;
									v2158 = 997 - (191 + 801);
								end
								if (v2158 == 3) then
									v79[v2159] = v79[v2159](v13(v79, v2159 + 1, v81[14 - 11]));
									v73 = v73 + (561 - (478 + 82));
									v81 = v69[v73];
									v79[v81[2]][v81[3]] = v79[v81[1711 - (434 + 1273)]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2 + 0]][v81[12 - 9]] = v79[v81[577 - (349 + 224)]];
									v73 = v73 + (865 - (275 + 589));
									v81 = v69[v73];
									v79[v81[3 - 1]] = v64[v81[4 - 1]];
									v2158 = 4;
								end
								if ((1541 - (1064 + 468)) == v2158) then
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[12 - 9];
									v73 = v73 + (704 - (676 + 27));
									v81 = v69[v73];
									v79[v81[2]] = v81[3];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[1429 - (48 + 1379)]] = v81[3 + 0];
									v73 = v73 + 1;
									v2158 = 5 + 5;
								end
								if (v2158 == (8 - 3)) then
									v81 = v69[v73];
									v2159 = v81[2 + 0];
									v79[v2159] = v79[v2159](v79[v2159 + 1]);
									v73 = v73 + (116 - (79 + 36));
									v81 = v69[v73];
									v79[v81[6 - 4]] = v79[v81[3]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2 + 0]] = v64[v81[1 + 2]];
									v73 = v73 + 1;
									v2158 = 5 + 1;
								end
								if (v2158 == (0 - 0)) then
									v2159 = nil;
									v79[v81[2]] = v79[v81[2 + 1]][v81[2 + 2]];
									v73 = v73 + (1015 - (631 + 383));
									v81 = v69[v73];
									v79[v81[1637 - (445 + 1190)]] = v63[v81[1428 - (810 + 615)]];
									v73 = v73 + (1295 - (819 + 475));
									v81 = v69[v73];
									v79[v81[1337 - (243 + 1092)]] = v79[v81[8 - 5]][v81[3 + 1]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v2158 = 1 + 0;
								end
								if ((257 <= 2359) and (v2158 == (7 + 0))) then
									v79[v81[2 - 0]] = v81[8 - 5];
									v73 = v73 + (525 - (119 + 405));
									v81 = v69[v73];
									v79[v81[2]] = v81[6 - 3];
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v2159 = v81[611 - (352 + 257)];
									v79[v2159] = v79[v2159](v13(v79, v2159 + 1 + 0, v81[3]));
									v73 = v73 + (1164 - (88 + 1075));
									v81 = v69[v73];
									v2158 = 1079 - (477 + 594);
								end
								if ((v2158 == 1) or (1828 == 1842)) then
									v2159 = v81[725 - (328 + 395)];
									v79[v2159] = v79[v2159](v79[v2159 + 1]);
									v73 = v73 + (505 - (164 + 340));
									v81 = v69[v73];
									v79[v81[2 - 0]] = v79[v81[7 - 4]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]] = v64[v81[1232 - (1008 + 221)]];
									v73 = v73 + (1512 - (1025 + 486));
									v81 = v69[v73];
									v2158 = 4 - 2;
								end
								if (v2158 == (16 - 10)) then
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[3]][v81[223 - (108 + 111)]];
									v73 = v73 + (99 - (82 + 16));
									v81 = v69[v73];
									v79[v81[1731 - (533 + 1196)]] = v81[3];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[214 - (161 + 51)]] = v81[437 - (294 + 140)];
									v73 = v73 + (4 - 3);
									v81 = v69[v73];
									v2158 = 845 - (717 + 121);
								end
								if (v2158 == (12 - 4)) then
									v79[v81[2 + 0]][v81[1 + 2]] = v79[v81[1714 - (1001 + 709)]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2 + 0]] = v64[v81[3]];
									v73 = v73 + (1121 - (242 + 878));
									v81 = v69[v73];
									v79[v81[1785 - (1395 + 388)]] = v79[v81[2 + 1]][v81[3 + 1]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1 + 1]] = v81[1950 - (1289 + 658)];
									v2158 = 5 + 4;
								end
								if ((2251 == 2251) and (v2158 == 12)) then
									v79[v81[3 - 1]] = v81[3 + 0];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v81[5 - 2];
									v73 = v73 + (1977 - (337 + 1639));
									v81 = v69[v73];
									v2159 = v81[2 + 0];
									v79[v2159] = v79[v2159](v13(v79, v2159 + (1 - 0), v81[7 - 4]));
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v2158 = 1750 - (630 + 1107);
								end
								if (v2158 == (2 + 0)) then
									v79[v81[1 + 1]] = v79[v81[3 - 0]][v81[2 + 2]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[63 - (13 + 48)]] = v81[702 - (658 + 41)];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[2]] = v81[1910 - (1591 + 316)];
									v73 = v73 + 1;
									v81 = v69[v73];
									v2159 = v81[3 - 1];
									v2158 = 3;
								end
								if (v2158 == (4 + 10)) then
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[6 - 4]] = v81[3];
									break;
								end
								if (v2158 == (1289 - (1241 + 35))) then
									v79[v81[2]][v81[43 - (18 + 22)]] = v79[v81[4]];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[1 + 1]][v81[1305 - (697 + 605)]] = v81[4];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1 + 1]][v81[3]] = v81[4];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[331 - (188 + 141)]][v81[12 - 9]] = v79[v81[9 - 5]];
									v2158 = 964 - (34 + 916);
								end
								if (10 == v2158) then
									v81 = v69[v73];
									v2159 = v81[1739 - (357 + 1380)];
									v79[v2159] = v79[v2159](v13(v79, v2159 + 1 + 0, v81[3]));
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1 + 1]][v81[1 + 2]] = v79[v81[4]];
									v73 = v73 + (1928 - (178 + 1749));
									v81 = v69[v73];
									v79[v81[5 - 3]] = v64[v81[1418 - (142 + 1273)]];
									v73 = v73 + 1;
									v2158 = 604 - (284 + 309);
								end
							end
						end
					elseif (v82 <= 161) then
						if ((v82 <= (110 + 24)) or (1176 > 4895)) then
							if ((v82 <= (810 - (622 + 68))) or (1470 == 433)) then
								if ((v82 <= (58 + 55)) or (2274 < 1666)) then
									if ((v82 <= (249 - 139)) or (1863 > 2135)) then
										if (v82 <= (84 + 24)) then
											local v318;
											local v319;
											local v320;
											v320 = v81[2 + 0];
											v319 = v79[v81[3]];
											v79[v320 + (1899 - (855 + 1043))] = v319;
											v79[v320] = v319[v81[8 - 4]];
											v73 = v73 + (3 - 2);
											v81 = v69[v73];
											v79[v81[2]] = v81[9 - 6];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[781 - (576 + 203)]] = v81[7 - 4];
											v73 = v73 + 1;
											v81 = v69[v73];
											v320 = v81[2 - 0];
											v79[v320] = v79[v320](v13(v79, v320 + 1, v81[1987 - (709 + 1275)]));
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v320 = v81[6 - 4];
											v319 = v79[v81[11 - 8]];
											v79[v320 + 1] = v319;
											v79[v320] = v319[v81[4]];
											v73 = v73 + (119 - (31 + 87));
											v81 = v69[v73];
											v320 = v81[133 - (44 + 87)];
											v79[v320] = v79[v320](v79[v320 + 1]);
											v73 = v73 + (3 - 2);
											v81 = v69[v73];
											v320 = v81[2];
											v319 = v79[v81[3 + 0]];
											v79[v320 + 1] = v319;
											v79[v320] = v319[v81[4]];
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v79[v81[5 - 3]] = v81[789 - (284 + 502)];
											v73 = v73 + 1;
											v81 = v69[v73];
											v320 = v81[2];
											v79[v320] = v79[v320](v13(v79, v320 + 1, v81[2 + 1]));
											v73 = v73 + (1187 - (124 + 1062));
											v81 = v69[v73];
											v319 = v81[3];
											v318 = v79[v319];
											for v939 = v319 + (1028 - (847 + 180)), v81[4 + 0] do
												v318 = v318 .. v79[v939];
											end
											v79[v81[8 - 6]] = v318;
											v73 = v73 + (1364 - (369 + 994));
											v81 = v69[v73];
											v320 = v81[965 - (583 + 380)];
											v79[v320] = v79[v320](v13(v79, v320 + 1 + 0, v81[3 + 0]));
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											if ((2401 > 2033) and v79[v81[1975 - (1085 + 888)]]) then
												v73 = v73 + 1;
											else
												v73 = v81[7 - 4];
											end
										elseif ((v82 == (417 - 308)) or (286 > 307)) then
											local v2161;
											v2161 = v81[9 - 7];
											v79[v2161] = v79[v2161](v13(v79, v2161 + (1 - 0), v81[1 + 2]));
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[2]][v79[v81[2 + 1]]] = v79[v81[2 + 2]];
											v73 = v73 + (1 - 0);
											v81 = v69[v73];
											v79[v81[2 - 0]] = v81[3 + 0];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[2 + 0]] = v79[v81[217 - (153 + 61)]];
											v73 = v73 + (944 - (704 + 239));
											v81 = v69[v73];
											v79[v81[1 + 1]] = v81[1389 - (740 + 646)];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[2]] = v81[1925 - (1547 + 375)];
											v73 = v73 + 1;
											v81 = v69[v73];
											v2161 = v81[2 + 0];
											v79[v2161] = v79[v2161](v13(v79, v2161 + (404 - (211 + 192)), v81[3]));
											v73 = v73 + (4 - 3);
											v81 = v69[v73];
											v79[v81[2]][v79[v81[4 - 1]]] = v79[v81[785 - (425 + 356)]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[4 - 2]] = v81[1569 - (83 + 1483)];
											v73 = v73 + (1273 - (123 + 1149));
											v81 = v69[v73];
											v79[v81[2 + 0]] = v79[v81[3]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[1582 - (908 + 672)]] = v81[516 - (206 + 307)];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[64 - (18 + 44)]] = v81[3];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v2161 = v81[3 - 1];
											v79[v2161] = v79[v2161](v13(v79, v2161 + (2 - 1), v81[3]));
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[937 - (226 + 709)]][v79[v81[729 - (235 + 491)]]] = v79[v81[6 - 2]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[1301 - (463 + 836)]] = v81[407 - (166 + 238)];
											v73 = v73 + (1 - 0);
											v81 = v69[v73];
											v79[v81[2 + 0]] = v79[v81[3]];
											v73 = v73 + (1442 - (1080 + 361));
											v81 = v69[v73];
											v79[v81[2 - 0]] = v81[2 + 1];
											v73 = v73 + (1 - 0);
											v81 = v69[v73];
											v79[v81[2]] = v81[3];
											v73 = v73 + (301 - (254 + 46));
											v81 = v69[v73];
											v2161 = v81[1 + 1];
											v79[v2161] = v79[v2161](v13(v79, v2161 + 1 + 0, v81[259 - (37 + 219)]));
											v73 = v73 + (1900 - (1330 + 569));
											v81 = v69[v73];
											v79[v81[2]][v79[v81[3 - 0]]] = v79[v81[5 - 1]];
											v73 = v73 + (3 - 2);
											v81 = v69[v73];
											v79[v81[2 - 0]] = v81[673 - (128 + 542)];
											v73 = v73 + (1 - 0);
											v81 = v69[v73];
											v79[v81[6 - 4]] = v79[v81[10 - 7]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[2]] = v81[10 - 7];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[2 + 0]] = v81[2 + 1];
											v73 = v73 + (1 - 0);
											v81 = v69[v73];
											v2161 = v81[2 + 0];
											v79[v2161] = v79[v2161](v13(v79, v2161 + 1, v81[815 - (96 + 716)]));
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[1609 - (85 + 1522)]][v79[v81[856 - (724 + 129)]]] = v79[v81[12 - 8]];
											v73 = v73 + (374 - (83 + 290));
											v81 = v69[v73];
											v79[v81[2 - 0]] = v81[5 - 2];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[2]] = v79[v81[3 + 0]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[2 - 0]] = v81[2 + 1];
											v73 = v73 + (1 - 0);
											v81 = v69[v73];
											v79[v81[3 - 1]] = v81[3];
											v73 = v73 + (448 - (190 + 257));
											v81 = v69[v73];
											v2161 = v81[593 - (402 + 189)];
											v79[v2161] = v79[v2161](v13(v79, v2161 + 1 + 0, v81[569 - (90 + 476)]));
											v73 = v73 + (815 - (688 + 126));
											v81 = v69[v73];
											v79[v81[1 + 1]][v79[v81[1 + 2]]] = v79[v81[4]];
											v73 = v73 + (500 - (34 + 465));
											v81 = v69[v73];
											v79[v81[8 - 6]] = v81[6 - 3];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[2 + 0]] = v79[v81[7 - 4]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[3 - 1]] = v81[1810 - (587 + 1220)];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[1894 - (1211 + 681)]] = v81[80 - (64 + 13)];
											v73 = v73 + (656 - (121 + 534));
											v81 = v69[v73];
											v2161 = v81[805 - (622 + 181)];
											v79[v2161] = v79[v2161](v13(v79, v2161 + 1 + 0, v81[1672 - (296 + 1373)]));
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[1 + 1]][v79[v81[3]]] = v79[v81[1 + 3]];
											v73 = v73 + (1615 - (143 + 1471));
											v81 = v69[v73];
											v79[v81[6 - 4]] = v81[2 + 1];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[4 - 2]] = v79[v81[183 - (103 + 77)]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[1159 - (895 + 262)]] = v81[6 - 3];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[2 + 0]] = v81[1629 - (581 + 1045)];
											v73 = v73 + 1;
											v81 = v69[v73];
											v2161 = v81[1277 - (582 + 693)];
											v79[v2161] = v79[v2161](v13(v79, v2161 + (1187 - (454 + 732)), v81[5 - 2]));
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[2 - 0]][v79[v81[3 - 0]]] = v79[v81[4]];
											v73 = v73 + (651 - (367 + 283));
											v81 = v69[v73];
											v79[v81[2]] = v81[71 - (7 + 61)];
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v79[v81[3 - 1]] = v79[v81[1 + 2]];
											v73 = v73 + (679 - (332 + 346));
											v81 = v69[v73];
											v79[v81[3 - 1]] = v81[4 - 1];
											v73 = v73 + (3 - 2);
											v81 = v69[v73];
											v79[v81[2 + 0]] = v81[3];
											v73 = v73 + (1 - 0);
											v81 = v69[v73];
											v2161 = v81[2 + 0];
											v79[v2161] = v79[v2161](v13(v79, v2161 + 1 + 0, v81[4 - 1]));
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v79[v81[2]][v79[v81[1857 - (815 + 1039)]]] = v79[v81[780 - (336 + 440)]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[2]] = v81[3];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[4 - 2]] = v79[v81[433 - (222 + 208)]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[832 - (652 + 178)]] = v81[3];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[2]] = v81[3];
											v73 = v73 + 1;
											v81 = v69[v73];
											v2161 = v81[2];
											v79[v2161] = v79[v2161](v13(v79, v2161 + (1 - 0), v81[8 - 5]));
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[4 - 2]][v79[v81[397 - (259 + 135)]]] = v79[v81[1464 - (1393 + 67)]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[1450 - (1129 + 319)]] = v81[2 + 1];
											v73 = v73 + (1 - 0);
											v81 = v69[v73];
											v79[v81[2]] = v79[v81[415 - (137 + 275)]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[441 - (140 + 299)]] = v81[1104 - (421 + 680)];
											v73 = v73 + (4 - 3);
											v81 = v69[v73];
											v79[v81[5 - 3]] = v81[7 - 4];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v2161 = v81[2];
											v79[v2161] = v79[v2161](v13(v79, v2161 + 1, v81[543 - (58 + 482)]));
											v73 = v73 + (680 - (310 + 369));
											v81 = v69[v73];
											v79[v81[2 + 0]][v79[v81[289 - (274 + 12)]]] = v79[v81[4 + 0]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[2 + 0]] = v81[3];
											v73 = v73 + (1763 - (681 + 1081));
											v81 = v69[v73];
											v79[v81[6 - 4]] = v79[v81[5 - 2]];
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v79[v81[879 - (842 + 35)]] = v81[4 - 1];
											v73 = v73 + (1868 - (180 + 1687));
											v81 = v69[v73];
											v79[v81[4 - 2]] = v81[974 - (269 + 702)];
											v73 = v73 + (815 - (776 + 38));
											v81 = v69[v73];
											v2161 = v81[2];
											v79[v2161] = v79[v2161](v13(v79, v2161 + 1 + 0, v81[5 - 2]));
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[1 + 1]][v79[v81[1 + 2]]] = v79[v81[1 + 3]];
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v79[v81[2 + 0]] = v81[3];
											v73 = v73 + (3 - 2);
											v81 = v69[v73];
											v79[v81[2 + 0]] = v79[v81[958 - (135 + 820)]];
											v73 = v73 + (137 - (118 + 18));
											v81 = v69[v73];
											v79[v81[1 + 1]] = v81[14 - 11];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[2 + 0]] = v81[3];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v2161 = v81[2 + 0];
											v79[v2161] = v79[v2161](v13(v79, v2161 + (1294 - (741 + 552)), v81[1 + 2]));
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[2]][v79[v81[3]]] = v79[v81[4 - 0]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[886 - (779 + 105)]] = v81[1784 - (1451 + 330)];
											v73 = v73 + (1870 - (1259 + 610));
											v81 = v69[v73];
											v79[v81[852 - (4 + 846)]] = v79[v81[1860 - (1108 + 749)]];
											v73 = v73 + (1742 - (1301 + 440));
											v81 = v69[v73];
											v79[v81[2]] = v81[3];
											v73 = v73 + (1 - 0);
											v81 = v69[v73];
											v79[v81[2 + 0]] = v81[1 + 2];
											v73 = v73 + 1;
											v81 = v69[v73];
											v2161 = v81[2 + 0];
											v79[v2161] = v79[v2161](v13(v79, v2161 + 1, v81[479 - (168 + 308)]));
											v73 = v73 + (1 - 0);
											v81 = v69[v73];
											v79[v81[2 + 0]][v79[v81[1350 - (469 + 878)]]] = v79[v81[4 + 0]];
										else
											v79[v81[7 - 5]] = v79[v81[2 + 1]] ^ v81[1 + 3];
										end
									elseif (v82 <= 111) then
										v79[v81[4 - 2]] = not v79[v81[3 + 0]];
									elseif ((v82 == (444 - 332)) or (41 >= 2609)) then
										local v2252 = 1840 - (1332 + 508);
										local v2253;
										local v2254;
										while true do
											if ((v2252 == 2) or (3885 >= 4873)) then
												v79[v2254](v13(v79, v2254 + 1 + 0, v81[3]));
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v79[v81[2 + 0]] = v81[1145 - (650 + 492)];
												v73 = v73 + (807 - (689 + 117));
												v81 = v69[v73];
												v2252 = 3 + 0;
											end
											if ((v2252 == (7 - 4)) or (646 > 2061)) then
												v79[v81[1925 - (794 + 1129)]] = v79[v81[3 + 0]][v79[v81[1 + 3]]];
												v73 = v73 + (862 - (553 + 308));
												v81 = v69[v73];
												v79[v81[2]] = v81[5 - 2];
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v2252 = 2 + 2;
											end
											if ((2430 == 2430) and (v2252 == 5)) then
												v79[v81[1770 - (1764 + 4)]] = {};
												v73 = v73 + (518 - (121 + 396));
												v81 = v69[v73];
												v79[v81[556 - (498 + 56)]] = v81[3 + 0];
												break;
											end
											if ((0 - 0) == v2252) then
												v2253 = nil;
												v2254 = nil;
												v79[v81[2 + 0]][v79[v81[3]]] = v79[v81[11 - 7]];
												v73 = v73 + (1 - 0);
												v81 = v69[v73];
												v79[v81[1 + 1]] = v81[6 - 3];
												v2252 = 1617 - (316 + 1300);
											end
											if (v2252 == (173 - (78 + 94))) then
												v73 = v73 + (1417 - (261 + 1155));
												v81 = v69[v73];
												v79[v81[1458 - (1040 + 416)]] = v79[v81[46 - (29 + 14)]][v79[v81[7 - 3]]];
												v73 = v73 + (963 - (928 + 34));
												v81 = v69[v73];
												v2254 = v81[1 + 1];
												v2252 = 1 + 1;
											end
											if ((v2252 == (4 + 0)) or (4317 == 249)) then
												v2254 = v81[2];
												v2253 = v79[v81[3]];
												v79[v2254 + (3 - 2)] = v2253;
												v79[v2254] = v2253[v79[v81[11 - 7]]];
												v73 = v73 + 1;
												v81 = v69[v73];
												v2252 = 7 - 2;
											end
										end
									else
										local v2255;
										v79[v81[512 - (69 + 441)]] = v79[v81[7 - 4]][v81[4]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2 + 0]] = v79[v81[6 - 3]];
										v73 = v73 + (1881 - (517 + 1363));
										v81 = v69[v73];
										v79[v81[930 - (802 + 126)]] = v79[v81[3]];
										v73 = v73 + (1669 - (1660 + 8));
										v81 = v69[v73];
										v79[v81[7 - 5]] = v79[v81[184 - (38 + 143)]];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[119 - (29 + 88)]] = v79[v81[3]];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v79[v81[491 - (308 + 181)]] = v63[v81[1400 - (537 + 860)]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[1097 - (691 + 404)]] = v63[v81[1957 - (870 + 1084)]];
										v73 = v73 + (130 - (47 + 82));
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[1 + 2]][v81[4 + 0]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[6 - 4]] = v81[120 - (84 + 33)] ~= (0 + 0);
										v73 = v73 + (3 - 2);
										v81 = v69[v73];
										v2255 = v81[1 + 1];
										v79[v2255](v13(v79, v2255 + 1, v81[7 - 4]));
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2]] = v81[8 - 5];
									end
								elseif (v82 <= 116) then
									if (v82 <= 114) then
										v79[v81[2]][v81[14 - 11]] = v79[v81[5 - 1]];
									elseif (v82 > 115) then
										v79[v81[2]] = v79[v81[3]] - v81[1224 - (87 + 1133)];
									else
										local v2276 = 0 - 0;
										local v2277;
										while true do
											if (v2276 == (12 + 12)) then
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v79[v81[669 - (205 + 462)]] = v81[1 + 2];
												v73 = v73 + (1 - 0);
												v81 = v69[v73];
												v79[v81[1383 - (1035 + 346)]] = v81[2 + 1];
												v73 = v73 + 1;
												v81 = v69[v73];
												v2277 = v81[1782 - (970 + 810)];
												v79[v2277] = v79[v2277](v13(v79, v2277 + 1 + 0, v81[8 - 5]));
												v2276 = 18 + 7;
											end
											if ((2398 == 2398) and (v2276 == 6)) then
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v79[v81[5 - 3]][v79[v81[3]]] = v79[v81[15 - 11]];
												v73 = v73 + (1389 - (601 + 787));
												v81 = v69[v73];
												v79[v81[612 - (256 + 354)]] = v81[3];
												v73 = v73 + 1;
												v81 = v69[v73];
												v79[v81[2]] = v79[v81[5 - 2]];
												v73 = v73 + (3 - 2);
												v2276 = 7;
											end
											if ((1772 < 3931) and (v2276 == (33 - 20))) then
												v81 = v69[v73];
												v79[v81[3 - 1]] = v81[4 - 1];
												v73 = v73 + (2 - 1);
												v81 = v69[v73];
												v2277 = v81[5 - 3];
												v79[v2277] = v79[v2277](v13(v79, v2277 + (1 - 0), v81[6 - 3]));
												v73 = v73 + 1;
												v81 = v69[v73];
												v79[v81[574 - (259 + 313)]][v79[v81[4 - 1]]] = v79[v81[1 + 3]];
												v73 = v73 + 1;
												v2276 = 5 + 9;
											end
											if ((4546 >= 4243) and (v2276 == 21)) then
												v2277 = v81[2 + 0];
												v79[v2277] = v79[v2277](v13(v79, v2277 + (2 - 1), v81[1341 - (413 + 925)]));
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v79[v81[2]][v79[v81[2 + 1]]] = v79[v81[2 + 2]];
												v73 = v73 + (3 - 2);
												v81 = v69[v73];
												v79[v81[2]] = v81[3];
												v73 = v73 + (1 - 0);
												v81 = v69[v73];
												v2276 = 14 + 8;
											end
											if ((4070 >= 625) and (v2276 == (5 - 3))) then
												v2277 = v81[1946 - (1164 + 780)];
												v79[v2277] = v79[v2277](v13(v79, v2277 + (1361 - (596 + 764)), v81[285 - (52 + 230)]));
												v73 = v73 + (3 - 2);
												v81 = v69[v73];
												v79[v81[2]][v79[v81[3]]] = v79[v81[1570 - (806 + 760)]];
												v73 = v73 + (2 - 1);
												v81 = v69[v73];
												v79[v81[2 - 0]] = v81[4 - 1];
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v2276 = 1 + 2;
											end
											if (v2276 == 15) then
												v79[v81[7 - 5]] = v81[5 - 2];
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v2277 = v81[2 + 0];
												v79[v2277] = v79[v2277](v13(v79, v2277 + (1966 - (1000 + 965)), v81[2 + 1]));
												v73 = v73 + (4 - 3);
												v81 = v69[v73];
												v79[v81[5 - 3]][v79[v81[2 + 1]]] = v79[v81[1130 - (261 + 865)]];
												v73 = v73 + (2 - 1);
												v81 = v69[v73];
												v2276 = 16;
											end
											if (9 == v2276) then
												v79[v81[2]] = v81[4 - 1];
												v73 = v73 + 1;
												v81 = v69[v73];
												v79[v81[2]] = v81[2 + 1];
												v73 = v73 + (546 - (33 + 512));
												v81 = v69[v73];
												v2277 = v81[1838 - (1555 + 281)];
												v79[v2277] = v79[v2277](v13(v79, v2277 + 1, v81[6 - 3]));
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v2276 = 16 - 6;
											end
											if ((19 + 6) == v2276) then
												v73 = v73 + (2 - 1);
												v81 = v69[v73];
												v79[v81[2 + 0]][v79[v81[3]]] = v79[v81[43 - (34 + 5)]];
												break;
											end
											if (v2276 == (11 + 1)) then
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v79[v81[2 + 0]] = v81[2 + 1];
												v73 = v73 + 1;
												v81 = v69[v73];
												v79[v81[1 + 1]] = v79[v81[3]];
												v73 = v73 + (3 - 2);
												v81 = v69[v73];
												v79[v81[4 - 2]] = v81[1224 - (999 + 222)];
												v73 = v73 + 1 + 0;
												v2276 = 4 + 9;
											end
											if ((v2276 == (367 - (166 + 178))) or (4058 <= 969)) then
												v79[v2277] = v79[v2277](v13(v79, v2277 + 1, v81[1 + 2]));
												v73 = v73 + (2 - 1);
												v81 = v69[v73];
												v79[v81[1302 - (587 + 713)]][v79[v81[3 + 0]]] = v79[v81[1126 - (11 + 1111)]];
												v73 = v73 + 1;
												v81 = v69[v73];
												v79[v81[2 + 0]] = v81[2 + 1];
												v73 = v73 + (2 - 1);
												v81 = v69[v73];
												v79[v81[1102 - (882 + 218)]] = v79[v81[3 + 0]];
												v2276 = 986 - (115 + 847);
											end
											if (v2276 == (22 - 14)) then
												v81 = v69[v73];
												v79[v81[1617 - (1231 + 384)]][v79[v81[3]]] = v79[v81[8 - 4]];
												v73 = v73 + (1697 - (1202 + 494));
												v81 = v69[v73];
												v79[v81[180 - (12 + 166)]] = v81[7 - 4];
												v73 = v73 + 1;
												v81 = v69[v73];
												v79[v81[2 + 0]] = v79[v81[607 - (202 + 402)]];
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v2276 = 1007 - (936 + 62);
											end
											if ((3031 >= 596) and ((353 - (119 + 229)) == v2276)) then
												v73 = v73 + (2 - 1);
												v81 = v69[v73];
												v79[v81[7 - 5]] = v81[1 + 2];
												v73 = v73 + (2 - 1);
												v81 = v69[v73];
												v79[v81[1438 - (513 + 923)]] = v81[1780 - (507 + 1270)];
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v2277 = v81[7 - 5];
												v79[v2277] = v79[v2277](v13(v79, v2277 + 1 + 0, v81[3]));
												v2276 = 22 - 16;
											end
											if (v2276 == (3 - 0)) then
												v79[v81[771 - (644 + 125)]] = v79[v81[2 + 1]];
												v73 = v73 + (1848 - (718 + 1129));
												v81 = v69[v73];
												v79[v81[2 + 0]] = v81[8 - 5];
												v73 = v73 + (1410 - (564 + 845));
												v81 = v69[v73];
												v79[v81[5 - 3]] = v81[165 - (46 + 116)];
												v73 = v73 + (651 - (575 + 75));
												v81 = v69[v73];
												v2277 = v81[4 - 2];
												v2276 = 12 - 8;
											end
											if (v2276 == 0) then
												v2277 = nil;
												v2277 = v81[6 - 4];
												v79[v2277] = v79[v2277](v13(v79, v2277 + 1 + 0, v81[2 + 1]));
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v79[v81[2 + 0]][v79[v81[673 - (224 + 446)]]] = v79[v81[4]];
												v73 = v73 + 1;
												v81 = v69[v73];
												v79[v81[1 + 1]] = v81[1 + 2];
												v73 = v73 + (3 - 2);
												v2276 = 319 - (56 + 262);
											end
											if (v2276 == 14) then
												v81 = v69[v73];
												v79[v81[7 - 5]] = v81[704 - (666 + 35)];
												v73 = v73 + (2 - 1);
												v81 = v69[v73];
												v79[v81[2]] = v79[v81[1183 - (553 + 627)]];
												v73 = v73 + (1474 - (936 + 537));
												v81 = v69[v73];
												v79[v81[1 + 1]] = v81[1203 - (737 + 463)];
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v2276 = 15;
											end
											if ((v2276 == (687 - (424 + 243))) or (4474 <= 486)) then
												v81 = v69[v73];
												v79[v81[1 + 1]] = v79[v81[10 - 7]];
												v73 = v73 + 1;
												v81 = v69[v73];
												v79[v81[1348 - (1213 + 133)]] = v81[5 - 2];
												v73 = v73 + 1;
												v81 = v69[v73];
												v79[v81[2 + 0]] = v81[63 - (37 + 23)];
												v73 = v73 + (3 - 2);
												v81 = v69[v73];
												v2276 = 1364 - (122 + 1221);
											end
											if (11 == v2276) then
												v73 = v73 + (243 - (139 + 103));
												v81 = v69[v73];
												v79[v81[2]] = v81[1 + 2];
												v73 = v73 + 1;
												v81 = v69[v73];
												v2277 = v81[2];
												v79[v2277] = v79[v2277](v13(v79, v2277 + 1 + 0, v81[3 - 0]));
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v79[v81[2]][v79[v81[3]]] = v79[v81[3 + 1]];
												v2276 = 3 + 9;
											end
											if ((v2276 == (122 - (9 + 97))) or (1317 >= 2001)) then
												v79[v81[3 - 1]] = v81[3];
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v79[v81[2]] = v79[v81[2 + 1]];
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v79[v81[6 - 4]] = v81[1078 - (657 + 418)];
												v73 = v73 + 1;
												v81 = v69[v73];
												v79[v81[2]] = v81[1983 - (448 + 1532)];
												v2276 = 17;
											end
											if (v2276 == (263 - (110 + 143))) then
												v79[v81[5 - 3]][v79[v81[946 - (549 + 394)]]] = v79[v81[3 + 1]];
												v73 = v73 + (1235 - (500 + 734));
												v81 = v69[v73];
												v79[v81[2 + 0]] = v81[1 + 2];
												v73 = v73 + 1;
												v81 = v69[v73];
												v79[v81[1 + 1]] = v79[v81[3]];
												v73 = v73 + 1;
												v81 = v69[v73];
												v79[v81[667 - (343 + 322)]] = v81[2 + 1];
												v2276 = 3 + 8;
											end
											if (v2276 == (2 + 15)) then
												v73 = v73 + (3 - 2);
												v81 = v69[v73];
												v2277 = v81[1133 - (297 + 834)];
												v79[v2277] = v79[v2277](v13(v79, v2277 + (4 - 3), v81[1 + 2]));
												v73 = v73 + (2 - 1);
												v81 = v69[v73];
												v79[v81[2]][v79[v81[2 + 1]]] = v79[v81[4]];
												v73 = v73 + 1;
												v81 = v69[v73];
												v79[v81[2 + 0]] = v81[789 - (494 + 292)];
												v2276 = 2 + 16;
											end
											if ((v2276 == (93 - 74)) or (8 == 75)) then
												v81 = v69[v73];
												v2277 = v81[1634 - (888 + 744)];
												v79[v2277] = v79[v2277](v13(v79, v2277 + 1 + 0, v81[688 - (206 + 479)]));
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v79[v81[1175 - (861 + 312)]][v79[v81[3]]] = v79[v81[4]];
												v73 = v73 + (737 - (135 + 601));
												v81 = v69[v73];
												v79[v81[1144 - (1085 + 57)]] = v81[1928 - (224 + 1701)];
												v73 = v73 + 1;
												v2276 = 1 + 19;
											end
											if (v2276 == (2 - 1)) then
												v81 = v69[v73];
												v79[v81[2]] = v79[v81[3 + 0]];
												v73 = v73 + (3 - 2);
												v81 = v69[v73];
												v79[v81[2 + 0]] = v81[749 - (730 + 16)];
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v79[v81[2]] = v81[3];
												v73 = v73 + (1583 - (790 + 792));
												v81 = v69[v73];
												v2276 = 1083 - (474 + 607);
											end
											if (v2276 == (548 - (129 + 401))) then
												v73 = v73 + (1 - 0);
												v81 = v69[v73];
												v79[v81[120 - (51 + 67)]] = v79[v81[1 + 2]];
												v73 = v73 + (114 - (93 + 20));
												v81 = v69[v73];
												v79[v81[7 - 5]] = v81[23 - (12 + 8)];
												v73 = v73 + (199 - (161 + 37));
												v81 = v69[v73];
												v79[v81[1 + 1]] = v81[3];
												v73 = v73 + (1558 - (507 + 1050));
												v2276 = 35 - 16;
											end
											if (v2276 == (13 - 6)) then
												v81 = v69[v73];
												v79[v81[2 + 0]] = v81[1 + 2];
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v79[v81[1 + 1]] = v81[5 - 2];
												v73 = v73 + (865 - (184 + 680));
												v81 = v69[v73];
												v2277 = v81[2 + 0];
												v79[v2277] = v79[v2277](v13(v79, v2277 + (2 - 1), v81[3]));
												v73 = v73 + 1;
												v2276 = 5 + 3;
											end
											if (v2276 == (48 - 26)) then
												v79[v81[3 - 1]] = v79[v81[3]];
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v79[v81[1052 - (629 + 421)]] = v81[3 + 0];
												v73 = v73 + (1 - 0);
												v81 = v69[v73];
												v79[v81[3 - 1]] = v81[3];
												v73 = v73 + (941 - (544 + 396));
												v81 = v69[v73];
												v2277 = v81[2];
												v2276 = 42 - 19;
											end
											if ((v2276 == (995 - (904 + 87))) or (118 >= 4788)) then
												v79[v2277] = v79[v2277](v13(v79, v2277 + (3 - 2), v81[1477 - (1443 + 31)]));
												v73 = v73 + 1;
												v81 = v69[v73];
												v79[v81[2]][v79[v81[6 - 3]]] = v79[v81[4]];
												v73 = v73 + (1814 - (1110 + 703));
												v81 = v69[v73];
												v79[v81[4 - 2]] = v81[2 + 1];
												v73 = v73 + (2 - 1);
												v81 = v69[v73];
												v79[v81[5 - 3]] = v79[v81[206 - (78 + 125)]];
												v2276 = 5;
											end
										end
									end
								elseif ((4969 > 2337) and (v82 <= 118)) then
									if (v82 == (356 - 239)) then
										local v2278 = v81[3 - 1];
										v79[v2278] = v79[v2278](v79[v2278 + (1 - 0)]);
									else
										local v2280;
										v2280 = v81[1826 - (1392 + 432)];
										v79[v2280] = v79[v2280](v13(v79, v2280 + 1 + 0, v81[7 - 4]));
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2]][v79[v81[1405 - (963 + 439)]]] = v79[v81[8 - 4]];
										v73 = v73 + (1326 - (76 + 1249));
										v81 = v69[v73];
										v79[v81[1753 - (1165 + 586)]] = v81[1931 - (1916 + 12)];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[1259 - (604 + 652)]];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v79[v81[1 + 1]] = v81[3 - 0];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[4 - 2]] = v81[3 - 0];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v2280 = v81[2];
										v79[v2280] = v79[v2280](v13(v79, v2280 + (1 - 0), v81[16 - (11 + 2)]));
										v73 = v73 + (1443 - (64 + 1378));
										v81 = v69[v73];
										v79[v81[4 - 2]][v79[v81[3]]] = v79[v81[1757 - (256 + 1497)]];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v79[v81[2]] = v81[3];
										v73 = v73 + (878 - (562 + 315));
										v81 = v69[v73];
										v79[v81[7 - 5]] = v79[v81[3]];
										v73 = v73 + (1189 - (577 + 611));
										v81 = v69[v73];
										v79[v81[2 + 0]] = v81[3];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[3 - 1]] = v81[3];
										v73 = v73 + 1;
										v81 = v69[v73];
										v2280 = v81[73 - (58 + 13)];
										v79[v2280] = v79[v2280](v13(v79, v2280 + 1, v81[3 + 0]));
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2 + 0]][v79[v81[457 - (404 + 50)]]] = v79[v81[4]];
										v73 = v73 + (37 - (6 + 30));
										v81 = v69[v73];
										v79[v81[1335 - (770 + 563)]] = v81[3 + 0];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[172 - (25 + 145)]] = v79[v81[3 + 0]];
										v73 = v73 + (700 - (153 + 546));
										v81 = v69[v73];
										v79[v81[2 + 0]] = v81[930 - (60 + 867)];
										v73 = v73 + (3 - 2);
										v81 = v69[v73];
										v79[v81[1285 - (309 + 974)]] = v81[2 + 1];
										v73 = v73 + 1;
										v81 = v69[v73];
										v2280 = v81[5 - 3];
										v79[v2280] = v79[v2280](v13(v79, v2280 + (1142 - (677 + 464)), v81[825 - (567 + 255)]));
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v79[v81[2 - 0]][v79[v81[531 - (384 + 144)]]] = v79[v81[1225 - (1030 + 191)]];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v79[v81[3 - 1]] = v81[2 + 1];
										v73 = v73 + (858 - (326 + 531));
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[7 - 4]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[1 + 1]] = v81[1 + 2];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[1 + 1]] = v81[3 + 0];
										v73 = v73 + (1622 - (1367 + 254));
										v81 = v69[v73];
										v2280 = v81[2];
										v79[v2280] = v79[v2280](v13(v79, v2280 + 1, v81[681 - (305 + 373)]));
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v79[v81[321 - (129 + 190)]][v79[v81[8 - 5]]] = v79[v81[6 - 2]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2]] = v81[3 + 0];
										v73 = v73 + (290 - (210 + 79));
										v81 = v69[v73];
										v79[v81[3 - 1]] = v79[v81[7 - 4]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[674 - (32 + 640)]] = v81[3 + 0];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2]] = v81[2 + 1];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v2280 = v81[2];
										v79[v2280] = v79[v2280](v13(v79, v2280 + 1, v81[1764 - (847 + 914)]));
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[2]][v79[v81[6 - 3]]] = v79[v81[528 - (163 + 361)]];
										v73 = v73 + (886 - (162 + 723));
										v81 = v69[v73];
										v79[v81[1 + 1]] = v81[404 - (258 + 143)];
										v73 = v73 + (4 - 3);
										v81 = v69[v73];
										v79[v81[3 - 1]] = v79[v81[11 - 8]];
										v73 = v73 + (1692 - (486 + 1205));
										v81 = v69[v73];
										v79[v81[167 - (92 + 73)]] = v81[2 + 1];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2 - 0]] = v81[275 - (68 + 204)];
										v73 = v73 + 1;
										v81 = v69[v73];
										v2280 = v81[3 - 1];
										v79[v2280] = v79[v2280](v13(v79, v2280 + 1, v81[3]));
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[1 + 1]][v79[v81[14 - 11]]] = v79[v81[2 + 2]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2 + 0]] = v81[3];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[318 - (20 + 296)]] = v79[v81[3 + 0]];
										v73 = v73 + (4 - 3);
										v81 = v69[v73];
										v79[v81[2]] = v81[10 - 7];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v79[v81[2 + 0]] = v81[1 + 2];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v2280 = v81[1 + 1];
										v79[v2280] = v79[v2280](v13(v79, v2280 + 1 + 0, v81[2 + 1]));
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[3 - 1]][v79[v81[2 + 1]]] = v79[v81[253 - (155 + 94)]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2]] = v81[3];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v79[v81[909 - (515 + 392)]] = v79[v81[329 - (7 + 319)]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2]] = v81[1 + 2];
										v73 = v73 + (1498 - (292 + 1205));
										v81 = v69[v73];
										v79[v81[2]] = v81[55 - (13 + 39)];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v2280 = v81[6 - 4];
										v79[v2280] = v79[v2280](v13(v79, v2280 + 1, v81[11 - 8]));
										v73 = v73 + (1039 - (850 + 188));
										v81 = v69[v73];
										v79[v81[1038 - (822 + 214)]][v79[v81[1164 - (317 + 844)]]] = v79[v81[4 + 0]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[1192 - (508 + 682)]] = v81[2 + 1];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[1 + 1]] = v79[v81[548 - (127 + 418)]];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[2]] = v81[6 - 3];
										v73 = v73 + (4 - 3);
										v81 = v69[v73];
										v79[v81[2 - 0]] = v81[1123 - (690 + 430)];
										v73 = v73 + (3 - 2);
										v81 = v69[v73];
										v2280 = v81[1 + 1];
										v79[v2280] = v79[v2280](v13(v79, v2280 + (1 - 0), v81[955 - (637 + 315)]));
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[5 - 3]][v79[v81[9 - 6]]] = v79[v81[4]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[4 - 2]] = v81[3];
										v73 = v73 + (21 - (13 + 7));
										v81 = v69[v73];
										v79[v81[1 + 1]] = v79[v81[3]];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v79[v81[2]] = v81[3];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[2 - 0]] = v81[2 + 1];
										v73 = v73 + 1;
										v81 = v69[v73];
										v2280 = v81[2];
										v79[v2280] = v79[v2280](v13(v79, v2280 + 1 + 0, v81[354 - (44 + 307)]));
										v73 = v73 + (798 - (127 + 670));
										v81 = v69[v73];
										v79[v81[2]][v79[v81[3 + 0]]] = v79[v81[588 - (375 + 209)]];
										v73 = v73 + (1817 - (1673 + 143));
										v81 = v69[v73];
										v79[v81[2 + 0]] = v81[2 + 1];
										v73 = v73 + (1450 - (836 + 613));
										v81 = v69[v73];
										v79[v81[3 - 1]] = v79[v81[3 + 0]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2]] = v81[1533 - (295 + 1235)];
										v73 = v73 + (541 - (328 + 212));
										v81 = v69[v73];
										v79[v81[4 - 2]] = v81[922 - (517 + 402)];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v2280 = v81[2];
										v79[v2280] = v79[v2280](v13(v79, v2280 + 1, v81[8 - 5]));
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[1084 - (700 + 382)]][v79[v81[882 - (677 + 202)]]] = v79[v81[6 - 2]];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[2 + 0]] = v81[756 - (360 + 393)];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[6 - 4]] = v79[v81[1960 - (1231 + 726)]];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v79[v81[2]] = v81[1913 - (173 + 1737)];
										v73 = v73 + (1948 - (441 + 1506));
										v81 = v69[v73];
										v79[v81[1 + 1]] = v81[9 - 6];
										v73 = v73 + 1;
										v81 = v69[v73];
										v2280 = v81[696 - (136 + 558)];
										v79[v2280] = v79[v2280](v13(v79, v2280 + 1 + 0, v81[1225 - (988 + 234)]));
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[4 - 2]][v79[v81[654 - (125 + 526)]]] = v79[v81[13 - 9]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2 + 0]] = v81[8 - 5];
										v73 = v73 + (1127 - (290 + 836));
										v81 = v69[v73];
										v79[v81[1 + 1]] = v79[v81[4 - 1]];
										v73 = v73 + (681 - (8 + 672));
										v81 = v69[v73];
										v79[v81[1 + 1]] = v81[1439 - (740 + 696)];
										v73 = v73 + (1047 - (353 + 693));
										v81 = v69[v73];
										v79[v81[2 + 0]] = v81[1496 - (35 + 1458)];
										v73 = v73 + (1871 - (1821 + 49));
										v81 = v69[v73];
										v2280 = v81[5 - 3];
										v79[v2280] = v79[v2280](v13(v79, v2280 + 1, v81[3]));
										v73 = v73 + (1735 - (727 + 1007));
										v81 = v69[v73];
										v79[v81[169 - (165 + 2)]][v79[v81[1662 - (1028 + 631)]]] = v79[v81[4]];
									end
								elseif (v82 > (1734 - (311 + 1304))) then
									v79[v81[2]][v79[v81[3]]] = v79[v81[4]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[4 - 2]] = v81[1 + 2];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[581 - (512 + 67)]] = v79[v81[7 - 4]][v79[v81[1 + 3]]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1 + 1]] = v81[3 - 0];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[1 + 1]][v79[v81[8 - 5]]] = v79[v81[4]];
									v73 = v73 + (1790 - (395 + 1394));
									v81 = v69[v73];
									v79[v81[7 - 5]] = v81[3];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2 + 0]] = v79[v81[8 - 5]][v79[v81[11 - 7]]];
									v73 = v73 + (468 - (143 + 324));
									v81 = v69[v73];
									v79[v81[5 - 3]] = v81[3];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1 + 1]][v79[v81[8 - 5]]] = v79[v81[2 + 2]];
									v73 = v73 + (1104 - (342 + 761));
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[8 - 5];
								else
									v79[v81[2]] = v79[v81[2 + 1]][v81[5 - 1]];
								end
							elseif ((3400 <= 4596) and (v82 <= (218 - 91))) then
								if (v82 <= (64 + 59)) then
									if (v82 <= (1278 - (889 + 268))) then
										local v348;
										local v349;
										v79[v81[2 + 0]] = v63[v81[3]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[1 + 1]] = v79[v81[7 - 4]] + v79[v81[301 - (196 + 101)]];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v63[v81[8 - 5]] = v79[v81[1 + 1]];
										v73 = v73 + (3 - 2);
										v81 = v69[v73];
										v79[v81[4 - 2]] = v63[v81[8 - 5]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2]] = v63[v81[3 + 0]];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v79[v81[1585 - (431 + 1152)]] = v79[v81[3]] + v79[v81[4]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v63[v81[347 - (107 + 237)]] = v79[v81[1802 - (690 + 1110)]];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v79[v81[1499 - (1374 + 123)]] = v64[v81[6 - 3]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2 + 0]] = v63[v81[1 + 2]];
										v73 = v73 + (1604 - (454 + 1149));
										v81 = v69[v73];
										v79[v81[3 - 1]] = v79[v81[3]][v81[8 - 4]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[3 + 0]][v79[v81[4]]];
										v73 = v73 + (638 - (21 + 616));
										v81 = v69[v73];
										v349 = v81[3 - 1];
										v348 = v79[v81[1 + 2]];
										v79[v349 + 1] = v348;
										v79[v349] = v348[v81[4]];
										v73 = v73 + (438 - (125 + 312));
										v81 = v69[v73];
										v79[v81[2]] = v63[v81[3 + 0]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2 + 0]] = v63[v81[1111 - (266 + 842)]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2]] = v63[v81[641 - (395 + 243)]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[1037 - (383 + 652)]] = v79[v81[8 - 5]] * v79[v81[3 + 1]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2]] = v63[v81[646 - (114 + 529)]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v349 = v81[2 + 0];
										v79[v349] = v79[v349](v13(v79, v349 + 1 + 0, v81[3]));
										v73 = v73 + (1190 - (352 + 837));
										v81 = v69[v73];
										for v940 = v81[8 - 6], v81[3] do
											v79[v940] = nil;
										end
										v73 = v73 + 1;
										v81 = v69[v73];
										if v79[v81[552 - (465 + 85)]] then
											v73 = v73 + 1;
										else
											v73 = v81[534 - (366 + 165)];
										end
									elseif (v82 > (39 + 83)) then
										local v2383 = 0 - 0;
										while true do
											if (v2383 == (3 - 2)) then
												v79[v81[1 + 1]] = v79[v81[3]][v81[4]];
												v73 = v73 + (1666 - (521 + 1144));
												v81 = v69[v73];
												v2383 = 2;
											end
											if (v2383 == 3) then
												v79[v81[2]][v79[v81[5 - 2]]] = v79[v81[4]];
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v2383 = 94 - (5 + 85);
											end
											if (v2383 == (1699 - (1547 + 146))) then
												v79[v81[2]][v79[v81[3]]] = v81[13 - 9];
												v73 = v73 + 1;
												v81 = v69[v73];
												v2383 = 324 - (272 + 45);
											end
											if (v2383 == (9 - 5)) then
												v79[v81[1 + 1]] = v63[v81[4 - 1]];
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v2383 = 2 + 3;
											end
											if ((6 + 1) == v2383) then
												v79[v81[2]] = v63[v81[2 + 1]];
												v73 = v73 + (1297 - (997 + 299));
												v81 = v69[v73];
												v2383 = 1295 - (903 + 384);
											end
											if (v2383 == (0 + 0)) then
												v79[v81[2]] = v63[v81[3]];
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v2383 = 1 + 0;
											end
											if ((1399 == 1399) and ((17 - 8) == v2383)) then
												v79[v81[6 - 4]][v79[v81[1 + 2]]] = v81[5 - 1];
												break;
											end
											if (v2383 == (4 + 1)) then
												v79[v81[591 - (313 + 276)]] = v79[v81[1 + 2]][v81[332 - (168 + 160)]];
												v73 = v73 + (1457 - (1452 + 4));
												v81 = v69[v73];
												v2383 = 27 - 21;
											end
											if ((4725 >= 4288) and (v2383 == (422 - (338 + 82)))) then
												v79[v81[2]] = {};
												v73 = v73 + (574 - (133 + 440));
												v81 = v69[v73];
												v2383 = 1 + 2;
											end
											if (v2383 == 8) then
												v79[v81[2]] = v79[v81[4 - 1]][v81[1 + 3]];
												v73 = v73 + 1;
												v81 = v69[v73];
												v2383 = 2 + 7;
											end
										end
									else
										local v2384;
										v79[v81[2 + 0]] = v79[v81[1305 - (422 + 880)]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[1982 - (365 + 1615)]] = v81[3 - 0];
										v73 = v73 + (1353 - (479 + 873));
										v81 = v69[v73];
										v79[v81[1 + 1]] = v81[8 - 5];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v2384 = v81[1 + 1];
										v79[v2384] = v79[v2384](v13(v79, v2384 + 1 + 0, v81[1505 - (832 + 670)]));
										v73 = v73 + (3 - 2);
										v81 = v69[v73];
										v79[v81[2]][v79[v81[3]]] = v79[v81[4]];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[1249 - (707 + 540)]] = v81[62 - (18 + 41)];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[3]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[1222 - (554 + 666)]] = v81[3];
										v73 = v73 + (501 - (438 + 62));
										v81 = v69[v73];
										v79[v81[1907 - (1497 + 408)]] = v81[3 - 0];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v2384 = v81[2 + 0];
										v79[v2384] = v79[v2384](v13(v79, v2384 + (641 - (508 + 132)), v81[9 - 6]));
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v79[v81[2]][v79[v81[1210 - (49 + 1158)]]] = v79[v81[1 + 3]];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v79[v81[2]] = v81[2 + 1];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[4 - 2]] = v79[v81[2 + 1]];
										v73 = v73 + (1222 - (460 + 761));
										v81 = v69[v73];
										v79[v81[5 - 3]] = v81[3 + 0];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[1 + 1]] = v81[599 - (405 + 191)];
										v73 = v73 + (1671 - (311 + 1359));
										v81 = v69[v73];
										v2384 = v81[4 - 2];
										v79[v2384] = v79[v2384](v13(v79, v2384 + 1 + 0, v81[1 + 2]));
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[1 + 1]][v79[v81[2 + 1]]] = v79[v81[6 - 2]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2 - 0]] = v81[3];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[3 - 1]] = v79[v81[3 - 0]];
										v73 = v73 + (1521 - (1408 + 112));
										v81 = v69[v73];
										v79[v81[2]] = v81[985 - (285 + 697)];
										v73 = v73 + (4 - 3);
										v81 = v69[v73];
										v79[v81[1262 - (737 + 523)]] = v81[13 - 10];
										v73 = v73 + 1;
										v81 = v69[v73];
										v2384 = v81[1 + 1];
										v79[v2384] = v79[v2384](v13(v79, v2384 + (845 - (789 + 55)), v81[9 - 6]));
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[3 - 1]][v79[v81[4 - 1]]] = v79[v81[4 + 0]];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[1884 - (1492 + 390)]] = v81[5 - 2];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[996 - (312 + 681)]];
										v73 = v73 + (1912 - (1255 + 656));
										v81 = v69[v73];
										v79[v81[2]] = v81[1730 - (485 + 1242)];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[1 + 1]] = v81[6 - 3];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v2384 = v81[7 - 5];
										v79[v2384] = v79[v2384](v13(v79, v2384 + (3 - 2), v81[3]));
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[3 - 1]][v79[v81[1 + 2]]] = v79[v81[4]];
										v73 = v73 + (960 - (722 + 237));
										v81 = v69[v73];
										v79[v81[5 - 3]] = v81[719 - (77 + 639)];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[14 - 11]];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v79[v81[5 - 3]] = v81[3];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[2 + 0]] = v81[1 + 2];
										v73 = v73 + (1360 - (888 + 471));
										v81 = v69[v73];
										v2384 = v81[1111 - (1034 + 75)];
										v79[v2384] = v79[v2384](v13(v79, v2384 + 1, v81[1160 - (448 + 709)]));
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[6 - 4]][v79[v81[1858 - (1643 + 212)]]] = v79[v81[484 - (320 + 160)]];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v79[v81[4 - 2]] = v81[1 + 2];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v79[v81[138 - (114 + 22)]] = v79[v81[1 + 2]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[1061 - (89 + 970)]] = v81[3];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2]] = v81[3];
										v73 = v73 + (1729 - (1083 + 645));
										v81 = v69[v73];
										v2384 = v81[168 - (50 + 116)];
										v79[v2384] = v79[v2384](v13(v79, v2384 + (1963 - (1058 + 904)), v81[6 - 3]));
										v73 = v73 + (3 - 2);
										v81 = v69[v73];
										v79[v81[7 - 5]][v79[v81[3]]] = v79[v81[11 - 7]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[1 + 1]] = v81[199 - (94 + 102)];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[1266 - (735 + 529)]] = v79[v81[3]];
										v73 = v73 + (1152 - (875 + 276));
										v81 = v69[v73];
										v79[v81[981 - (461 + 518)]] = v81[3 + 0];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[2]] = v81[3];
										v73 = v73 + (782 - (656 + 125));
										v81 = v69[v73];
										v2384 = v81[4 - 2];
										v79[v2384] = v79[v2384](v13(v79, v2384 + (849 - (532 + 316)), v81[257 - (150 + 104)]));
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[5 - 3]][v79[v81[3]]] = v79[v81[1851 - (564 + 1283)]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[4 - 2]] = v81[2 + 1];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[7 - 5]] = v79[v81[3]];
										v73 = v73 + (1549 - (330 + 1218));
										v81 = v69[v73];
										v79[v81[2 + 0]] = v81[3 + 0];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2 + 0]] = v81[3];
										v73 = v73 + 1;
										v81 = v69[v73];
										v2384 = v81[2 + 0];
										v79[v2384] = v79[v2384](v13(v79, v2384 + (1 - 0), v81[2 + 1]));
										v73 = v73 + (4 - 3);
										v81 = v69[v73];
										v79[v81[1 + 1]][v79[v81[3]]] = v79[v81[1573 - (511 + 1058)]];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[1500 - (1315 + 183)]] = v81[3];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[544 - (233 + 309)]] = v79[v81[3 - 0]];
										v73 = v73 + (654 - (267 + 386));
										v81 = v69[v73];
										v79[v81[2]] = v81[6 - 3];
										v73 = v73 + (854 - (744 + 109));
										v81 = v69[v73];
										v79[v81[2]] = v81[1553 - (1271 + 279)];
										v73 = v73 + 1;
										v81 = v69[v73];
										v2384 = v81[4 - 2];
										v79[v2384] = v79[v2384](v13(v79, v2384 + (1645 - (642 + 1002)), v81[1866 - (643 + 1220)]));
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[5 - 3]][v79[v81[3]]] = v79[v81[4]];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v79[v81[1419 - (1063 + 354)]] = v81[833 - (739 + 91)];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[3]];
										v73 = v73 + (1878 - (790 + 1087));
										v81 = v69[v73];
										v79[v81[2 + 0]] = v81[3];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[6 - 4]] = v81[7 - 4];
										v73 = v73 + 1;
										v81 = v69[v73];
										v2384 = v81[2];
										v79[v2384] = v79[v2384](v13(v79, v2384 + (3 - 2), v81[10 - 7]));
										v73 = v73 + (150 - (82 + 67));
										v81 = v69[v73];
										v79[v81[2 + 0]][v79[v81[5 - 2]]] = v79[v81[1989 - (1835 + 150)]];
										v73 = v73 + (15 - (12 + 2));
										v81 = v69[v73];
										v79[v81[1038 - (784 + 252)]] = v81[3];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2 - 0]] = v79[v81[3]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[1386 - (1134 + 250)]] = v81[2 + 1];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[1 + 1]] = v81[5 - 2];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v2384 = v81[5 - 3];
										v79[v2384] = v79[v2384](v13(v79, v2384 + (2 - 1), v81[6 - 3]));
										v73 = v73 + (1982 - (1940 + 41));
										v81 = v69[v73];
										v79[v81[2]][v79[v81[241 - (39 + 199)]]] = v79[v81[4]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2 + 0]] = v81[3];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[3 - 1]] = v79[v81[4 - 1]];
										v73 = v73 + (1930 - (313 + 1616));
										v81 = v69[v73];
										v79[v81[2]] = v81[9 - 6];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v79[v81[2]] = v81[3];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v2384 = v81[39 - (7 + 30)];
										v79[v2384] = v79[v2384](v13(v79, v2384 + 1, v81[1189 - (961 + 225)]));
										v73 = v73 + (4 - 3);
										v81 = v69[v73];
										v79[v81[2 + 0]][v79[v81[843 - (281 + 559)]]] = v79[v81[11 - 7]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[1 + 1]] = v81[1 + 2];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[1443 - (102 + 1338)]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[1 + 1]] = v81[444 - (319 + 122)];
									end
								elseif (v82 <= (23 + 102)) then
									if ((2856 < 3331) and (v82 > (1120 - (45 + 951)))) then
										local v2470 = 0 + 0;
										local v2471;
										while true do
											if (v2470 == 4) then
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v79[v81[1 + 1]][v79[v81[4 - 1]]] = v79[v81[1 + 3]];
												v2470 = 5;
											end
											if (v2470 == (4 + 5)) then
												v73 = v73 + (1376 - (684 + 691));
												v81 = v69[v73];
												v79[v81[1646 - (1161 + 483)]] = v79[v81[3]][v79[v81[970 - (245 + 721)]]];
												break;
											end
											if ((v2470 == (0 + 0)) or (2161 <= 1347)) then
												v2471 = nil;
												v79[v81[2]] = v81[3];
												v73 = v73 + 1;
												v2470 = 1 + 0;
											end
											if ((43 - (31 + 11)) == v2470) then
												v81 = v69[v73];
												v79[v81[2]] = v81[3];
												v73 = v73 + (3 - 2);
												v2470 = 2;
											end
											if ((28 - 21) == v2470) then
												v73 = v73 + 1;
												v81 = v69[v73];
												v79[v81[838 - (179 + 657)]] = {};
												v2470 = 335 - (150 + 177);
											end
											if (v2470 == 8) then
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v79[v81[2]] = v81[1208 - (142 + 1063)];
												v2470 = 1914 - (1346 + 559);
											end
											if ((v2470 == (1 + 1)) or (4817 <= 3620)) then
												v81 = v69[v73];
												v2471 = v81[2];
												v79[v2471] = v79[v2471](v13(v79, v2471 + 1, v81[8 - 5]));
												v2470 = 11 - 8;
											end
											if (3 == v2470) then
												v73 = v73 + 1;
												v81 = v69[v73];
												v79[v81[2 + 0]][v79[v81[1729 - (1695 + 31)]]] = v79[v81[2 + 2]];
												v2470 = 1441 - (1073 + 364);
											end
											if (v2470 == (823 - (405 + 412))) then
												v73 = v73 + (650 - (518 + 131));
												v81 = v69[v73];
												v79[v81[1304 - (667 + 635)]] = v79[v81[1 + 2]][v79[v81[4]]];
												v2470 = 10 - 3;
											end
											if ((1915 - (1397 + 513)) == v2470) then
												v73 = v73 + (1 - 0);
												v81 = v69[v73];
												v79[v81[1077 - (454 + 621)]] = v81[5 - 2];
												v2470 = 1 + 5;
											end
										end
									elseif (v81[4 - 2] == v79[v81[602 - (417 + 181)]]) then
										v73 = v73 + (1 - 0);
									else
										v73 = v81[1 + 2];
									end
								elseif (v82 > (456 - 330)) then
									v79[v81[9 - 7]] = v79[v81[3]] + v81[4];
									v73 = v73 + (1121 - (995 + 125));
									v81 = v69[v73];
									v63[v81[3]] = v79[v81[4 - 2]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[5 - 3]] = v63[v81[3]];
									v73 = v73 + (1326 - (754 + 571));
									v81 = v69[v73];
									v79[v81[1 + 1]] = v79[v81[8 - 5]] + v81[2 + 2];
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v63[v81[2 + 1]] = v79[v81[7 - 5]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v73 = v81[3];
								else
									local v2481 = 1491 - (1141 + 350);
									local v2482;
									while true do
										if (v2481 == (1 + 2)) then
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[1 + 1]] = v64[v81[8 - 5]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[5 - 3]] = v79[v81[3 + 0]][v81[1873 - (513 + 1356)]];
											v2481 = 1940 - (196 + 1740);
										end
										if ((770 < 2457) and (v2481 == (0 - 0))) then
											v2482 = nil;
											v79[v81[2 + 0]] = v79[v81[6 - 3]][v81[6 - 2]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[2 + 0]] = v81[6 - 3];
											v73 = v73 + 1;
											v2481 = 1 + 0;
										end
										if (v2481 == (10 - 6)) then
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[1633 - (362 + 1269)]] = v63[v81[7 - 4]];
											v73 = v73 + (38 - (26 + 11));
											v81 = v69[v73];
											v79[v81[1 + 1]] = v79[v81[3]][v81[4]];
											v2481 = 1 + 4;
										end
										if (((1824 - (183 + 1636)) == v2481) or (2138 < 70)) then
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v2482 = v81[2];
											v79[v2482] = v79[v2482](v79[v2482 + 1]);
											v73 = v73 + 1;
											v81 = v69[v73];
											v2481 = 5 + 1;
										end
										if (v2481 == 2) then
											v73 = v73 + (1231 - (1161 + 69));
											v81 = v69[v73];
											v79[v81[2]][v81[3]] = v79[v81[4]];
											v73 = v73 + (1379 - (672 + 706));
											v81 = v69[v73];
											v79[v81[2]][v81[1 + 2]] = v79[v81[109 - (82 + 23)]];
											v2481 = 1524 - (100 + 1421);
										end
										if (1 == v2481) then
											v81 = v69[v73];
											v79[v81[2]] = v81[783 - (61 + 719)];
											v73 = v73 + (413 - (180 + 232));
											v81 = v69[v73];
											v2482 = v81[2 + 0];
											v79[v2482] = v79[v2482](v13(v79, v2482 + (1 - 0), v81[6 - 3]));
											v2481 = 2;
										end
										if (v2481 == (1793 - (728 + 1053))) then
											v81 = v69[v73];
											v79[v81[2 + 0]] = v79[v81[562 - (427 + 132)]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[967 - (786 + 179)]] = v81[3];
											break;
										end
										if ((1740 < 2333) and ((2 + 6) == v2481)) then
											v79[v81[2]][v81[1 + 2]] = v79[v81[5 - 1]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[1926 - (1685 + 239)]][v81[6 - 3]] = v81[8 - 4];
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v2481 = 20 - 11;
										end
										if (v2481 == (24 - 15)) then
											v79[v81[2]][v81[3]] = v79[v81[4 + 0]];
											v73 = v73 + (1178 - (457 + 720));
											v81 = v69[v73];
											v79[v81[4 - 2]] = v64[v81[9 - 6]];
											v73 = v73 + (722 - (124 + 597));
											v81 = v69[v73];
											v2481 = 49 - 39;
										end
										if (v2481 == (571 - (414 + 150))) then
											v79[v81[9 - 7]] = v79[v81[832 - (592 + 237)]][v81[4]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[2]] = v79[v81[7 - 4]][v81[617 - (122 + 491)]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v2481 = 8;
										end
										if (v2481 == (46 - 36)) then
											v79[v81[2]] = v79[v81[3]][v81[289 - (116 + 169)]];
											v73 = v73 + (3 - 2);
											v81 = v69[v73];
											v79[v81[2 + 0]] = v63[v81[3 + 0]];
											v73 = v73 + (1 - 0);
											v81 = v69[v73];
											v2481 = 19 - 8;
										end
										if (v2481 == (1 + 10)) then
											v79[v81[1232 - (477 + 753)]] = v79[v81[3]][v81[1 + 3]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v2482 = v81[1 + 1];
											v79[v2482] = v79[v2482](v79[v2482 + 1 + 0]);
											v73 = v73 + 1;
											v2481 = 39 - 27;
										end
										if ((4518 >= 2878) and (v2481 == 6)) then
											v79[v81[1 + 1]] = v79[v81[1380 - (649 + 728)]];
											v73 = v73 + (913 - (478 + 434));
											v81 = v69[v73];
											v79[v81[3 - 1]] = v63[v81[3 - 0]];
											v73 = v73 + (4 - 3);
											v81 = v69[v73];
											v2481 = 7;
										end
									end
								end
							elseif ((v82 <= 130) or (3667 >= 4454)) then
								if (v82 <= 128) then
									local v377;
									local v378;
									v79[v81[2 + 0]] = v79[v81[1563 - (1329 + 231)]][v81[7 - 3]];
									v73 = v73 + (1911 - (1523 + 387));
									v81 = v69[v73];
									v378 = v81[2];
									v377 = v79[v81[4 - 1]];
									v79[v378 + 1 + 0] = v377;
									v79[v378] = v377[v81[1311 - (1013 + 294)]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1350 - (25 + 1323)]] = v63[v81[3 + 0]];
									v73 = v73 + (1931 - (611 + 1319));
									v81 = v69[v73];
									v79[v81[2 + 0]] = v79[v81[3]][v81[7 - 3]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v378 = v81[1 + 1];
									v79[v378] = v79[v378](v13(v79, v378 + 1 + 0, v81[5 - 2]));
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v378 = v81[2 + 0];
									v377 = v79[v81[819 - (353 + 463)]];
									v79[v378 + (1 - 0)] = v377;
									v79[v378] = v377[v81[3 + 1]];
									v73 = v73 + (1062 - (605 + 456));
									v81 = v69[v73];
									v79[v81[2]] = v63[v81[3]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[5 - 3]] = v79[v81[787 - (122 + 662)]][v81[1496 - (1184 + 308)]];
									v73 = v73 + (1169 - (445 + 723));
									v81 = v69[v73];
									v79[v81[1642 - (1245 + 395)]] = v79[v81[1130 - (191 + 936)]][v81[8 - 4]];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[1 + 1]] = v79[v81[3]][v81[4]];
								elseif ((3924 >= 3055) and (v82 == 129)) then
									local v2483 = v81[260 - (90 + 168)];
									local v2484 = {v79[v2483](v13(v79, v2483 + (1 - 0), v74))};
									local v2485 = 0;
									for v7515 = v2483, v81[716 - (176 + 536)] do
										v2485 = v2485 + 1 + 0;
										v79[v7515] = v2484[v2485];
									end
								else
									local v2486 = 1698 - (858 + 840);
									local v2487;
									local v2488;
									while true do
										if ((v2486 == 13) or (2122 == 940)) then
											v81 = v69[v73];
											v79[v81[662 - (447 + 213)]] = v79[v81[3]][v81[1464 - (1458 + 2)]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[9 - 7]][v79[v81[4 - 1]]] = v81[3 + 1];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v2488 = v81[2];
											v79[v2488] = v79[v2488](v13(v79, v2488 + (2 - 1), v81[483 - (248 + 232)]));
											v2486 = 244 - (109 + 121);
										end
										if (v2486 == (1 + 10)) then
											v79[v81[1406 - (1288 + 116)]] = v64[v81[3 + 0]];
											v73 = v73 + (237 - (212 + 24));
											v81 = v69[v73];
											v79[v81[2 + 0]] = v79[v81[3 + 0]][v81[1711 - (1175 + 532)]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[2 - 0]] = v81[2 + 1];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v2486 = 12;
										end
										if (v2486 == 7) then
											v73 = v73 + (570 - (252 + 317));
											v81 = v69[v73];
											v79[v81[2]] = v79[v81[5 - 2]][v81[807 - (738 + 65)]];
											v73 = v73 + (558 - (410 + 147));
											v81 = v69[v73];
											v79[v81[2]]();
											v73 = v73 + (901 - (272 + 628));
											v81 = v69[v73];
											v79[v81[4 - 2]] = v64[v81[7 - 4]];
											v2486 = 8;
										end
										if (v2486 == 12) then
											v2488 = v81[170 - (62 + 106)];
											v79[v2488] = v79[v2488](v79[v2488 + 1]);
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v79[v81[696 - (167 + 527)]] = {};
											v73 = v73 + (1 - 0);
											v81 = v69[v73];
											v79[v81[2 - 0]] = v63[v81[4 - 1]];
											v73 = v73 + 1 + 0;
											v2486 = 1079 - (326 + 740);
										end
										if ((2092 <= 2281) and (v2486 == 6)) then
											v81 = v69[v73];
											v79[v81[78 - (68 + 8)]] = v79[v81[1474 - (133 + 1338)]][v81[10 - 6]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[2]][v79[v81[2 + 1]]] = v79[v81[13 - 9]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v2488 = v81[2 + 0];
											v79[v2488] = v79[v2488](v13(v79, v2488 + (2 - 1), v81[1990 - (1930 + 57)]));
											v2486 = 1 + 6;
										end
										if (v2486 == 14) then
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[2]] = v79[v81[3 + 0]][v81[908 - (14 + 890)]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[6 - 4]]();
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[4 - 2]] = v81[3 + 0];
											break;
										end
										if (v2486 == (18 - 14)) then
											v2488 = v81[2];
											v79[v2488] = v79[v2488](v79[v2488 + 1]);
											v73 = v73 + (3 - 2);
											v81 = v69[v73];
											v79[v81[1 + 1]] = {};
											v73 = v73 + (4 - 3);
											v81 = v69[v73];
											v79[v81[2]] = v63[v81[3]];
											v73 = v73 + 1 + 0;
											v2486 = 1786 - (755 + 1026);
										end
										if (v2486 == (26 - 17)) then
											v73 = v73 + (4 - 3);
											v81 = v69[v73];
											v79[v81[948 - (217 + 729)]] = v79[v81[3]][v81[1 + 3]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v2488 = v81[1 + 1];
											v79[v2488] = v79[v2488](v13(v79, v2488 + (1 - 0), v81[8 - 5]));
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v2486 = 40 - 30;
										end
										if (v2486 == (1685 - (619 + 1061))) then
											v81 = v69[v73];
											v79[v81[1 + 1]] = v79[v81[5 - 2]][v81[140 - (108 + 28)]];
											v73 = v73 + (1928 - (191 + 1736));
											v81 = v69[v73];
											v79[v81[765 - (757 + 6)]] = v63[v81[1 + 2]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[1257 - (337 + 918)]] = v79[v81[6 - 3]][v81[1 + 3]];
											v73 = v73 + 1 + 0;
											v2486 = 15 - 9;
										end
										if ((3629 > 1694) and (v2486 == (1 + 1))) then
											v2488 = v81[1678 - (754 + 922)];
											v2487 = v79[v81[637 - (487 + 147)]];
											v79[v2488 + 1] = v2487;
											v79[v2488] = v2487[v81[4 - 0]];
											v73 = v73 + (1570 - (825 + 744));
											v81 = v69[v73];
											v79[v81[2]] = v63[v81[1 + 2]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v2486 = 3 + 0;
										end
										if ((837 > 489) and (1 == v2486)) then
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v79[v81[1 + 1]] = v79[v81[252 - (150 + 99)]][v81[3 + 1]];
											v73 = v73 + (1504 - (1335 + 168));
											v81 = v69[v73];
											v2488 = v81[941 - (256 + 683)];
											v79[v2488] = v79[v2488](v13(v79, v2488 + (319 - (33 + 285)), v81[9 - 6]));
											v73 = v73 + (1 - 0);
											v81 = v69[v73];
											v2486 = 4 - 2;
										end
										if ((v2486 == (1 + 2)) or (1495 <= 1333)) then
											v79[v81[2 + 0]] = v64[v81[950 - (776 + 171)]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[265 - (244 + 19)]] = v79[v81[3 - 0]][v81[410 - (8 + 398)]];
											v73 = v73 + (517 - (228 + 288));
											v81 = v69[v73];
											v79[v81[2 - 0]] = v81[5 - 2];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v2486 = 4;
										end
										if ((3213 <= 3652) and (v2486 == (596 - (434 + 154)))) then
											v73 = v73 + 1;
											v81 = v69[v73];
											v2488 = v81[2];
											v2487 = v79[v81[2 + 1]];
											v79[v2488 + (2 - 1)] = v2487;
											v79[v2488] = v2487[v81[15 - 11]];
											v73 = v73 + (1 - 0);
											v81 = v69[v73];
											v79[v81[1 + 1]] = v63[v81[3 - 0]];
											v2486 = 9;
										end
										if (v2486 == (0 + 0)) then
											v2487 = nil;
											v2488 = nil;
											v2488 = v81[1 + 1];
											v2487 = v79[v81[2 + 1]];
											v79[v2488 + 1] = v2487;
											v79[v2488] = v2487[v81[4]];
											v73 = v73 + (1666 - (810 + 855));
											v81 = v69[v73];
											v79[v81[2 + 0]] = v63[v81[2 + 1]];
											v2486 = 1 + 0;
										end
										if (v2486 == (5 + 5)) then
											v2488 = v81[5 - 3];
											v2487 = v79[v81[3]];
											v79[v2488 + (1615 - (463 + 1151))] = v2487;
											v79[v2488] = v2487[v81[4 + 0]];
											v73 = v73 + (1976 - (29 + 1946));
											v81 = v69[v73];
											v79[v81[2]] = v63[v81[2 + 1]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v2486 = 526 - (337 + 178);
										end
									end
								end
							elseif ((3463 > 2578) and (v82 <= (196 - (4 + 60)))) then
								if ((950 == 950) and (v82 == (496 - 365))) then
									local v2489;
									local v2490;
									local v2489, v2491;
									local v2492;
									local v2493;
									v79[v81[2]] = v64[v81[3]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v2493 = v81[1 + 1];
									v2492 = v79[v81[1119 - (425 + 691)]];
									v79[v2493 + (1999 - (354 + 1644))] = v2492;
									v79[v2493] = v2492[v81[845 - (499 + 342)]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v2493 = v81[162 - (65 + 95)];
									v2489, v2491 = v72(v79[v2493](v79[v2493 + 1 + 0]));
									v74 = (v2491 + v2493) - 1;
									v2490 = 0;
									for v7518 = v2493, v74 do
										v2490 = v2490 + 1;
										v79[v7518] = v2489[v2490];
									end
									v73 = v73 + (1640 - (1403 + 236));
									v81 = v69[v73];
									v2493 = v81[1362 - (1117 + 243)];
									v2489 = {v79[v2493](v13(v79, v2493 + 1 + 0, v74))};
									v2490 = 0 - 0;
									for v7521 = v2493, v81[735 - (387 + 344)] do
										local v7522 = 974 - (654 + 320);
										while true do
											if ((0 - 0) == v7522) then
												v2490 = v2490 + (432 - (276 + 155));
												v79[v7521] = v2489[v2490];
												break;
											end
										end
									end
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v73 = v81[2 + 1];
								else
									local v2505;
									local v2506, v2507;
									local v2508;
									local v2509;
									v79[v81[2 + 0]] = v64[v81[777 - (65 + 709)]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1746 - (884 + 860)]] = v79[v81[3 - 0]][v81[684 - (492 + 188)]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[6 - 4]] = v79[v81[1 + 2]][v81[2 + 2]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2 - 0]] = v79[v81[3 - 0]][v81[6 - 2]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1 + 1]] = v81[3];
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v79[v81[1 + 1]] = v81[3 + 0];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2]] = v64[v81[2 + 1]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2 - 0]] = v79[v81[11 - 8]][v81[4]];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[3 - 1]] = v79[v81[1254 - (1190 + 61)]][v81[3 + 1]];
									v73 = v73 + (1694 - (1448 + 245));
									v81 = v69[v73];
									v79[v81[2 - 0]] = v79[v81[3]][v81[10 - 6]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[4 - 2]] = v63[v81[4 - 1]];
									v73 = v73 + (824 - (528 + 295));
									v81 = v69[v73];
									for v7523 = v81[2 - 0], v81[1350 - (1224 + 123)] do
										v79[v7523] = nil;
									end
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v64[v81[3]];
									v73 = v73 + (638 - (97 + 540));
									v81 = v69[v73];
									v79[v81[1970 - (484 + 1484)]] = v63[v81[3]];
									v73 = v73 + (1553 - (1398 + 154));
									v81 = v69[v73];
									v79[v81[2 + 0]] = v79[v81[7 - 4]][v81[15 - 11]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[533 - (354 + 176)]][v79[v81[9 - 5]]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2 - 0]] = v64[v81[2 + 1]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1432 - (649 + 781)]] = v79[v81[3]][v81[4 + 0]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2 - 0]] = v79[v81[8 - 5]][v81[781 - (126 + 651)]];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v2509 = v81[1 + 1];
									v2508 = v79[v81[2 + 1]];
									v79[v2509 + (2 - 1)] = v2508;
									v79[v2509] = v2508[v81[4]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2]] = v63[v81[3]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1 + 1]] = v79[v81[1032 - (179 + 850)]][v81[788 - (34 + 750)]];
									v73 = v73 + (306 - (302 + 3));
									v81 = v69[v73];
									v2509 = v81[2 + 0];
									v2506, v2507 = v72(v79[v2509](v13(v79, v2509 + 1, v81[3])));
									v74 = (v2507 + v2509) - (1 - 0);
									v2505 = 0 + 0;
									for v7525 = v2509, v74 do
										v2505 = v2505 + (2 - 1);
										v79[v7525] = v2506[v2505];
									end
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v2509 = v81[2];
									v79[v2509] = v79[v2509](v13(v79, v2509 + (1 - 0), v74));
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v63[v81[3 - 0]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v2509 = v81[106 - (56 + 48)];
									v2508 = v79[v81[3 + 0]];
									v79[v2509 + 1 + 0] = v2508;
									v79[v2509] = v2508[v81[6 - 2]];
									v73 = v73 + (83 - (7 + 75));
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[1 + 2]];
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v2509 = v81[257 - (170 + 85)];
									v79[v2509] = v79[v2509](v13(v79, v2509 + 1, v81[3]));
									v73 = v73 + (350 - (288 + 61));
									v81 = v69[v73];
									for v7528 = v81[2 + 0], v81[3] do
										v79[v7528] = nil;
									end
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2 + 0]] = v64[v81[2 + 1]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[739 - (330 + 407)]] = v79[v81[191 - (29 + 159)]][v81[7 - 3]];
									v73 = v73 + (4 - 3);
									v81 = v69[v73];
									v79[v81[2 - 0]] = v79[v81[3]][v81[3 + 1]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v2509 = v81[759 - (15 + 742)];
									v2508 = v79[v81[453 - (414 + 36)]];
									v79[v2509 + 1] = v2508;
									v79[v2509] = v2508[v81[1510 - (745 + 761)]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2 + 0]] = v79[v81[2 + 1]][v81[3 + 1]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v2509 = v81[2 - 0];
									v79[v2509] = v79[v2509](v13(v79, v2509 + 1 + 0, v81[1082 - (126 + 953)]));
									v73 = v73 + (1701 - (759 + 941));
									v81 = v69[v73];
									v79[v81[2 + 0]] = v79[v81[1607 - (896 + 708)]][v81[4]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[1580 - (555 + 1022)]][v81[4]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v2509 = v81[1 + 1];
									v2508 = v79[v81[144 - (14 + 127)]];
									v79[v2509 + 1] = v2508;
									v79[v2509] = v2508[v81[1 + 3]];
									v73 = v73 + (796 - (141 + 654));
									v81 = v69[v73];
									v79[v81[933 - (156 + 775)]] = v63[v81[3]];
									v73 = v73 + (1591 - (167 + 1423));
									v81 = v69[v73];
									v79[v81[5 - 3]] = v79[v81[8 - 5]][v81[4]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v2509 = v81[2 + 0];
									v79[v2509] = v79[v2509](v13(v79, v2509 + 1, v81[1 + 2]));
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2]] = v64[v81[2 + 1]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1882 - (1625 + 255)]] = v79[v81[3 + 0]][v81[1 + 3]];
									v73 = v73 + (1517 - (1026 + 490));
									v81 = v69[v73];
									v2509 = v81[2 + 0];
									v2508 = v79[v81[1737 - (16 + 1718)]];
									v79[v2509 + 1 + 0] = v2508;
									v79[v2509] = v2508[v81[4 + 0]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2 - 0]] = v63[v81[581 - (168 + 410)]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[8 - 6]] = v79[v81[810 - (134 + 673)]][v81[4]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v2509 = v81[2 - 0];
									v79[v2509] = v79[v2509](v13(v79, v2509 + (1909 - (1174 + 734)), v81[3 - 0]));
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[3 - 1]] = v64[v81[7 - 4]];
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v79[v81[1 + 1]] = v63[v81[3]];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[1 + 1]] = v79[v81[11 - 8]][v81[3 + 1]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[7 - 5]] = v79[v81[4 - 1]][v79[v81[5 - 1]]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v64[v81[3]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2 + 0]] = v79[v81[8 - 5]][v81[516 - (289 + 223)]];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[1 + 1]] = v79[v81[3]][v81[4]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v2509 = v81[642 - (514 + 126)];
									v2508 = v79[v81[2 + 1]];
									v79[v2509 + 1 + 0] = v2508;
									v79[v2509] = v2508[v81[6 - 2]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[6 - 4]] = v63[v81[3 + 0]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2 + 0]] = v79[v81[1 + 2]][v81[9 - 5]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v2509 = v81[2];
									v2506, v2507 = v72(v79[v2509](v13(v79, v2509 + 1 + 0, v81[3 + 0])));
									v74 = (v2507 + v2509) - (1 + 0);
									v2505 = 0;
									for v7530 = v2509, v74 do
										local v7531 = 0;
										while true do
											if (v7531 == 0) then
												v2505 = v2505 + 1 + 0;
												v79[v7530] = v2506[v2505];
												break;
											end
										end
									end
									v73 = v73 + 1;
									v81 = v69[v73];
									v2509 = v81[610 - (4 + 604)];
									v79[v2509] = v79[v2509](v13(v79, v2509 + (3 - 2), v74));
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v79[v81[9 - 7]] = v64[v81[3]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1 + 1]] = v63[v81[11 - 8]];
									v73 = v73 + (1446 - (344 + 1101));
									v81 = v69[v73];
									v79[v81[4 - 2]] = v79[v81[5 - 2]][v81[4 + 0]];
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v79[v81[8 - 6]] = v79[v81[3]][v79[v81[5 - 1]]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]] = v64[v81[3 + 0]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[303 - (57 + 244)]] = v79[v81[3]][v81[4 + 0]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[5 - 3]] = v79[v81[1966 - (883 + 1080)]][v81[4]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v2509 = v81[202 - (138 + 62)];
									v2508 = v79[v81[1 + 2]];
									v79[v2509 + 1] = v2508;
									v79[v2509] = v2508[v81[4]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[8 - 6]] = v63[v81[86 - (62 + 21)]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[3 + 0]][v81[1453 - (1036 + 413)]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v2509 = v81[3 - 1];
									v2506, v2507 = v72(v79[v2509](v13(v79, v2509 + 1 + 0, v81[3])));
									v74 = (v2507 + v2509) - (2 - 1);
									v2505 = 0 - 0;
									for v7532 = v2509, v74 do
										local v7533 = 0 - 0;
										while true do
											if ((v7533 == (0 - 0)) or (2237 >= 2669)) then
												v2505 = v2505 + (1 - 0);
												v79[v7532] = v2506[v2505];
												break;
											end
										end
									end
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v2509 = v81[2];
									v79[v2509] = v79[v2509](v13(v79, v2509 + (1473 - (649 + 823)), v74));
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[3 - 1]] = v64[v81[3]];
									v73 = v73 + (1564 - (1202 + 361));
									v81 = v69[v73];
									v79[v81[7 - 5]] = v79[v81[3]][v81[4]];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[1711 - (263 + 1446)]] = v79[v81[3 + 0]][v81[1 + 3]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2 + 0]] = v79[v81[1 + 2]][v81[747 - (387 + 356)]];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[2]] = v64[v81[10 - 7]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v2509 = v81[2 + 0];
									v2508 = v79[v81[3]];
									v79[v2509 + (1 - 0)] = v2508;
									v79[v2509] = v2508[v81[4]];
									v73 = v73 + (1717 - (646 + 1070));
									v81 = v69[v73];
									v79[v81[1 + 1]] = v63[v81[3 + 0]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1 + 1]] = v79[v81[11 - 8]][v81[2 + 2]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v2509 = v81[2];
									v79[v2509] = v79[v2509](v13(v79, v2509 + (1098 - (288 + 809)), v81[1656 - (471 + 1182)]));
								end
							elseif ((3054 > 1242) and (v82 > (1628 - (385 + 1110)))) then
								v73 = v81[3];
							else
								v79[v81[1611 - (1201 + 408)]] = v63[v81[1850 - (747 + 1100)]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[613 - (269 + 342)]][v81[3]] = v79[v81[5 - 1]];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[2]] = v63[v81[3]];
								v73 = v73 + (347 - (263 + 83));
								v81 = v69[v73];
								v79[v81[2]][v81[3]] = v79[v81[4]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[6 - 4]] = v63[v81[824 - (659 + 162)]];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[218 - (109 + 106)]][v81[5 - 1]];
								v73 = v73 + (1166 - (1157 + 8));
								v81 = v69[v73];
								if v79[v81[2]] then
									v73 = v73 + (512 - (179 + 332));
								else
									v73 = v81[3];
								end
							end
						elseif (v82 <= 147) then
							if (v82 <= 140) then
								if ((4606 >= 4502) and (v82 <= 137)) then
									if (v82 <= (972 - (705 + 132))) then
										local v403 = v81[2 + 0];
										local v404 = {v79[v403](v13(v79, v403 + 1, v81[1 + 2]))};
										local v405 = 0 + 0;
										for v942 = v403, v81[14 - 10] do
											local v943 = 0 + 0;
											while true do
												if (v943 == (43 - (17 + 26))) then
													v405 = v405 + (1963 - (1866 + 96));
													v79[v942] = v404[v405];
													break;
												end
											end
										end
									elseif (v82 == (33 + 103)) then
										v79[v81[5 - 3]] = v81[5 - 2];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[2]] = v81[10 - 7];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[1 + 1]][v79[v81[11 - 8]]] = v79[v81[1135 - (725 + 406)]];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[1 + 1]] = v81[3];
										v73 = v73 + (376 - (198 + 177));
										v81 = v69[v73];
										v79[v81[5 - 3]] = v64[v81[4 - 1]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[6 - 4]] = v81[3];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[1 + 2]][v79[v81[3 + 1]]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2]] = v81[3];
										v73 = v73 + (3 - 2);
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[1723 - (1082 + 638)]][v79[v81[4]]];
										v73 = v73 + (1363 - (1322 + 40));
										v81 = v69[v73];
										v79[v81[4 - 2]] = v81[3];
									else
										local v2630 = 0;
										local v2631;
										local v2632;
										while true do
											if (v2630 == 4) then
												v73 = v73 + (1649 - (435 + 1213));
												v81 = v69[v73];
												v79[v81[2]] = v79[v81[3]][v81[1 + 3]];
												v73 = v73 + (989 - (696 + 292));
												v2630 = 5;
											end
											if (v2630 == (6 - 3)) then
												v79[v2632](v13(v79, v2632 + (4 - 3), v81[13 - 10]));
												v73 = v73 + (4 - 3);
												v81 = v69[v73];
												v79[v81[1467 - (731 + 734)]] = v63[v81[1574 - (1286 + 285)]];
												v2630 = 14 - 10;
											end
											if (v2630 == (1 + 1)) then
												v79[v81[5 - 3]][v79[v81[3 + 0]]] = v79[v81[13 - 9]];
												v73 = v73 + 1;
												v81 = v69[v73];
												v2632 = v81[1263 - (1048 + 213)];
												v2630 = 3;
											end
											if ((v2630 == (1 - 0)) or (3627 < 2589)) then
												v81 = v69[v73];
												v79[v81[1 + 1]] = v79[v81[3]][v81[4]];
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v2630 = 2 + 0;
											end
											if (v2630 == (1357 - (223 + 1134))) then
												v2631 = nil;
												v2632 = nil;
												v79[v81[9 - 7]] = v63[v81[3]];
												v73 = v73 + (1882 - (982 + 899));
												v2630 = 1 - 0;
											end
											if ((198 < 4237) and (v2630 == (4 + 1))) then
												v81 = v69[v73];
												v2632 = v81[2];
												v2631 = v79[v81[3]];
												v79[v2632 + (1 - 0)] = v2631;
												v2630 = 2 + 4;
											end
											if (v2630 == (19 - 13)) then
												v79[v2632] = v2631[v81[5 - 1]];
												break;
											end
										end
									end
								elseif (v82 <= (1621 - (310 + 1173))) then
									local v406 = 0 + 0;
									local v407;
									local v408;
									while true do
										if (v406 == (17 - 12)) then
											v81 = v69[v73];
											v79[v81[1453 - (968 + 483)]] = {};
											v73 = v73 + (225 - (37 + 187));
											v81 = v69[v73];
											v406 = 1 + 5;
										end
										if (v406 == 0) then
											v407 = nil;
											v408 = nil;
											v408 = v81[2];
											v79[v408](v13(v79, v408 + 1, v81[3]));
											v406 = 1 - 0;
										end
										if (v406 == (496 - (204 + 290))) then
											v81 = v69[v73];
											v79[v81[843 - (680 + 161)]] = v79[v81[1 + 2]][v79[v81[1072 - (979 + 89)]]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v406 = 1877 - (802 + 1072);
										end
										if ((v406 == 8) or (2386 > 4659)) then
											v81 = v69[v73];
											v79[v81[2]] = v79[v81[9 - 6]][v79[v81[1 + 3]]];
											break;
										end
										if ((999 == 999) and (v406 == (5 + 2))) then
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[2]] = v81[2 + 1];
											v73 = v73 + (2 - 1);
											v406 = 2 + 6;
										end
										if ((v406 == (17 - 11)) or (4775 == 537)) then
											v79[v81[3 - 1]] = v81[1997 - (1413 + 581)];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[1216 - (630 + 584)]] = v79[v81[9 - 6]][v79[v81[1132 - (184 + 944)]]];
											v406 = 5 + 2;
										end
										if ((v406 == (957 - (927 + 26))) or (1145 > 4990)) then
											v407 = v79[v81[8 - 5]];
											v79[v408 + 1] = v407;
											v79[v408] = v407[v79[v81[644 - (284 + 356)]]];
											v73 = v73 + 1 + 0;
											v406 = 11 - 6;
										end
										if (v406 == 3) then
											v79[v81[2 + 0]] = v81[3];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v408 = v81[2 + 0];
											v406 = 4;
										end
										if (v406 == (1 + 0)) then
											v73 = v73 + (1129 - (211 + 917));
											v81 = v69[v73];
											v79[v81[2 + 0]] = v81[1798 - (1151 + 644)];
											v73 = v73 + 1 + 0;
											v406 = 2 + 0;
										end
									end
								elseif (v82 == (225 - 86)) then
									local v2633;
									local v2634;
									v79[v81[2]][v79[v81[1903 - (745 + 1155)]]] = v79[v81[11 - 7]];
									v73 = v73 + (315 - (27 + 287));
									v81 = v69[v73];
									v79[v81[2 - 0]] = v81[6 - 3];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[5 - 3]] = v79[v81[219 - (148 + 68)]][v79[v81[4]]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v2634 = v81[2];
									v79[v2634](v13(v79, v2634 + 1, v81[2 + 1]));
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1 + 1]] = v81[2 + 1];
									v73 = v73 + (1175 - (1064 + 110));
									v81 = v69[v73];
									v2634 = v81[21 - (9 + 10)];
									v2633 = v79[v81[3]];
									v79[v2634 + 1] = v2633;
									v79[v2634] = v2633[v79[v81[4]]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = {};
									v73 = v73 + (1896 - (1219 + 676));
									v81 = v69[v73];
									v79[v81[2]] = v81[1144 - (130 + 1011)];
									v73 = v73 + (1972 - (1639 + 332));
									v81 = v69[v73];
									v79[v81[3 - 1]] = v79[v81[1 + 2]][v79[v81[2 + 2]]];
									v73 = v73 + (249 - (229 + 19));
									v81 = v69[v73];
									v79[v81[125 - (21 + 102)]] = v81[1188 - (931 + 254)];
								else
									local v2656 = 0 + 0;
									local v2657;
									local v2658;
									while true do
										if ((2972 >= 2532) and (v2656 == (445 - (428 + 17)))) then
											v2657 = v81[2];
											v2658 = v79[v2657];
											v2656 = 2 - 1;
										end
										if ((v2656 == (89 - (26 + 62))) or (3360 == 802)) then
											for v12377 = v2657 + (1081 - (173 + 907)), v74 do
												v7(v2658, v79[v12377]);
											end
											break;
										end
									end
								end
							elseif ((3170 <= 4212) and (v82 <= (112 + 31))) then
								if (v82 <= (51 + 90)) then
									local v409 = 131 - (71 + 60);
									local v410;
									local v411;
									local v412;
									local v413;
									local v414;
									while true do
										if ((4983 >= 2330) and (v409 == (17 - 10))) then
											v79[v414 + (1229 - (774 + 454))] = v413;
											v79[v414] = v413[v81[1606 - (849 + 753)]];
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v409 = 8;
										end
										if ((511 == 511) and (v409 == (20 - 11))) then
											for v8286 = v414, v74 do
												v410 = v410 + 1;
												v79[v8286] = v411[v410];
											end
											v73 = v73 + (1217 - (861 + 355));
											v81 = v69[v73];
											v414 = v81[2];
											v409 = 15 - 5;
										end
										if (((1 + 1) == v409) or (1608 == 828)) then
											v413 = v79[v81[8 - 5]];
											v79[v414 + 1 + 0] = v413;
											v79[v414] = v413[v81[8 - 4]];
											v73 = v73 + (1144 - (455 + 688));
											v409 = 1347 - (481 + 863);
										end
										if ((v409 == (2 + 2)) or (2922 < 567)) then
											v81 = v69[v73];
											v414 = v81[1 + 1];
											v413 = v79[v81[8 - 5]];
											v79[v414 + 1] = v413;
											v409 = 1973 - (896 + 1072);
										end
										if (v409 == 1) then
											v79[v81[4 - 2]] = v79[v81[2 + 1]][v81[4]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v414 = v81[4 - 2];
											v409 = 2;
										end
										if (v409 == (793 - (50 + 738))) then
											v79[v414] = v413[v81[4 + 0]];
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v79[v81[4 - 2]] = v63[v81[1556 - (1128 + 425)]];
											v409 = 1 + 5;
										end
										if (v409 == (464 - (398 + 58))) then
											v414 = v81[2];
											v411, v412 = v72(v79[v414](v79[v414 + 1]));
											v74 = (v412 + v414) - (713 - (194 + 518));
											v410 = 375 - (42 + 333);
											v409 = 9;
										end
										if ((2906 > 1002) and (v409 == (1444 - (1308 + 136)))) then
											v410 = nil;
											v411, v412 = nil;
											v413 = nil;
											v414 = nil;
											v409 = 1 + 0;
										end
										if (v409 == (126 - (56 + 64))) then
											v73 = v73 + (697 - (251 + 445));
											v81 = v69[v73];
											v414 = v81[1 + 1];
											v413 = v79[v81[1 + 2]];
											v409 = 7;
										end
										if ((v409 == (3 + 0)) or (2872 <= 2745)) then
											v81 = v69[v73];
											v414 = v81[1571 - (999 + 570)];
											v79[v414] = v79[v414](v79[v414 + (1 - 0)]);
											v73 = v73 + 1;
											v409 = 9 - 5;
										end
										if (v409 == (20 - 10)) then
											v79[v414] = v79[v414](v13(v79, v414 + (1700 - (1476 + 223)), v74));
											v73 = v73 + (1837 - (597 + 1239));
											v81 = v69[v73];
											if v79[v81[2]] then
												v73 = v73 + 1;
											else
												v73 = v81[10 - 7];
											end
											break;
										end
									end
								elseif (v82 > 142) then
									local v2659;
									v2659 = v81[2 + 0];
									v79[v2659] = v79[v2659](v13(v79, v2659 + 1, v81[3]));
									v73 = v73 + (885 - (590 + 294));
									v81 = v69[v73];
									v79[v81[3 - 1]][v79[v81[792 - (433 + 356)]]] = v79[v81[2 + 2]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2 - 0]] = v81[1259 - (791 + 465)];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1116 - (1048 + 66)]] = v79[v81[3]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[8 - 6]] = v81[2000 - (666 + 1331)];
									v73 = v73 + (1901 - (854 + 1046));
									v81 = v69[v73];
									v79[v81[5 - 3]] = v81[3];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v2659 = v81[4 - 2];
									v79[v2659] = v79[v2659](v13(v79, v2659 + 1 + 0, v81[99 - (61 + 35)]));
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]][v79[v81[3]]] = v79[v81[19 - 15]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v81[1821 - (1591 + 227)];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[793 - (173 + 618)]] = v79[v81[1326 - (588 + 735)]];
									v73 = v73 + (581 - (170 + 410));
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[3 + 0];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[4 - 2]] = v81[1 + 2];
									v73 = v73 + 1;
									v81 = v69[v73];
									v2659 = v81[2 + 0];
									v79[v2659] = v79[v2659](v13(v79, v2659 + (553 - (362 + 190)), v81[851 - (529 + 319)]));
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[6 - 4]][v79[v81[3]]] = v79[v81[3 + 1]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v81[1203 - (829 + 371)];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[4 - 1]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1678 - (700 + 976)]] = v81[6 - 3];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[3];
									v73 = v73 + 1;
									v81 = v69[v73];
									v2659 = v81[1643 - (1137 + 504)];
									v79[v2659] = v79[v2659](v13(v79, v2659 + (3 - 2), v81[6 - 3]));
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]][v79[v81[4 - 1]]] = v79[v81[4]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1 + 1]] = v81[3 + 0];
									v73 = v73 + (1615 - (327 + 1287));
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[3]];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[2 - 0]] = v81[2 + 1];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2]] = v81[1116 - (224 + 889)];
									v73 = v73 + (1221 - (574 + 646));
									v81 = v69[v73];
									v2659 = v81[609 - (83 + 524)];
									v79[v2659] = v79[v2659](v13(v79, v2659 + (769 - (577 + 191)), v81[3 + 0]));
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[801 - (248 + 551)]][v79[v81[80 - (53 + 24)]]] = v79[v81[137 - (12 + 121)]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[3 - 1]] = v81[609 - (164 + 442)];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2 + 0]] = v79[v81[8 - 5]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[3];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[3];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v2659 = v81[2];
									v79[v2659] = v79[v2659](v13(v79, v2659 + 1 + 0, v81[1250 - (585 + 662)]));
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]][v79[v81[1 + 2]]] = v79[v81[4]];
									v73 = v73 + (581 - (126 + 454));
									v81 = v69[v73];
									v79[v81[416 - (366 + 48)]] = v81[1686 - (1633 + 50)];
									v73 = v73 + (1102 - (892 + 209));
									v81 = v69[v73];
									v79[v81[2 + 0]] = v79[v81[3]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[3 - 1]] = v81[3];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]] = v81[663 - (495 + 165)];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v2659 = v81[2];
									v79[v2659] = v79[v2659](v13(v79, v2659 + 1, v81[7 - 4]));
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[3 - 1]][v79[v81[3]]] = v79[v81[3 + 1]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[584 - (431 + 151)]] = v81[3 - 0];
									v73 = v73 + (16 - (10 + 5));
									v81 = v69[v73];
									v79[v81[424 - (403 + 19)]] = v79[v81[3]];
									v73 = v73 + (1772 - (454 + 1317));
									v81 = v69[v73];
									v79[v81[2]] = v81[2 + 1];
									v73 = v73 + (1815 - (187 + 1627));
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[1955 - (832 + 1120)];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v2659 = v81[1 + 1];
									v79[v2659] = v79[v2659](v13(v79, v2659 + (1097 - (1001 + 95)), v81[32 - (4 + 25)]));
									v73 = v73 + (1162 - (904 + 257));
									v81 = v69[v73];
									v79[v81[4 - 2]][v79[v81[3]]] = v79[v81[4]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2 - 0]] = v81[7 - 4];
									v73 = v73 + (4 - 3);
									v81 = v69[v73];
									v79[v81[2 + 0]] = v79[v81[3]];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[1791 - (735 + 1054)]] = v81[1696 - (418 + 1275)];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[3];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v2659 = v81[7 - 5];
									v79[v2659] = v79[v2659](v13(v79, v2659 + (1473 - (784 + 688)), v81[10 - 7]));
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[4 - 2]][v79[v81[1252 - (374 + 875)]]] = v79[v81[9 - 5]];
									v73 = v73 + (981 - (304 + 676));
									v81 = v69[v73];
									v79[v81[2]] = v81[2 + 1];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[1361 - (517 + 841)]];
									v73 = v73 + (867 - (356 + 510));
									v81 = v69[v73];
									v79[v81[3 - 1]] = v81[6 - 3];
									v73 = v73 + (1210 - (306 + 903));
									v81 = v69[v73];
									v79[v81[1105 - (70 + 1033)]] = v81[12 - 9];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v2659 = v81[2 + 0];
									v79[v2659] = v79[v2659](v13(v79, v2659 + 1 + 0, v81[807 - (523 + 281)]));
									v73 = v73 + (923 - (241 + 681));
									v81 = v69[v73];
									v79[v81[1100 - (358 + 740)]][v79[v81[3]]] = v79[v81[3 + 1]];
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v79[v81[1043 - (1005 + 36)]] = v81[1 + 2];
									v73 = v73 + (703 - (533 + 169));
									v81 = v69[v73];
									v79[v81[1 + 1]] = v79[v81[2 + 1]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v81[1528 - (817 + 708)];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[1701 - (636 + 1062)];
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v2659 = v81[2];
									v79[v2659] = v79[v2659](v13(v79, v2659 + (1 - 0), v81[1661 - (1130 + 528)]));
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[6 - 4]][v79[v81[3 + 0]]] = v79[v81[147 - (115 + 28)]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1383 - (1076 + 305)]] = v81[1772 - (1198 + 571)];
									v73 = v73 + (1518 - (629 + 888));
									v81 = v69[v73];
									v79[v81[4 - 2]] = v79[v81[2 + 1]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2 - 0]] = v81[3];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v81[172 - (113 + 56)];
									v73 = v73 + (1254 - (521 + 732));
									v81 = v69[v73];
									v2659 = v81[2 - 0];
									v79[v2659] = v79[v2659](v13(v79, v2659 + (1539 - (99 + 1439)), v81[2 + 1]));
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v79[v81[7 - 5]][v79[v81[411 - (39 + 369)]]] = v79[v81[4]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]] = v81[1962 - (870 + 1089)];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[798 - (564 + 231)]];
									v73 = v73 + (1922 - (1893 + 28));
									v81 = v69[v73];
									v79[v81[2]] = v81[3 + 0];
									v73 = v73 + (527 - (140 + 386));
									v81 = v69[v73];
									v79[v81[2]] = v81[2 + 1];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v2659 = v81[2];
									v79[v2659] = v79[v2659](v13(v79, v2659 + 1 + 0, v81[3]));
									v73 = v73 + (1917 - (485 + 1431));
									v81 = v69[v73];
									v79[v81[4 - 2]][v79[v81[4 - 1]]] = v79[v81[4]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[11 - 8];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1183 - (945 + 236)]] = v79[v81[6 - 3]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1 + 1]] = v81[6 - 3];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]] = v81[7 - 4];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v2659 = v81[515 - (383 + 130)];
									v79[v2659] = v79[v2659](v13(v79, v2659 + 1, v81[3]));
									v73 = v73 + (904 - (643 + 260));
									v81 = v69[v73];
									v79[v81[1449 - (109 + 1338)]][v79[v81[2 + 1]]] = v79[v81[18 - 14]];
								else
									local v2744;
									local v2745;
									v79[v81[746 - (338 + 406)]][v79[v81[3]]] = v79[v81[4]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[5 - 3]] = v81[3];
									v73 = v73 + (476 - (20 + 455));
									v81 = v69[v73];
									v79[v81[8 - 6]] = v79[v81[3 - 0]][v79[v81[79 - (39 + 36)]]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v2745 = v81[2 + 0];
									v79[v2745](v13(v79, v2745 + (1707 - (609 + 1097)), v81[661 - (543 + 115)]));
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v81[6 - 3];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[5 - 3]] = v79[v81[3]][v79[v81[1612 - (1559 + 49)]]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[624 - (317 + 305)]] = v81[3];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v2745 = v81[8 - 6];
									v2744 = v79[v81[830 - (509 + 318)]];
									v79[v2745 + (1818 - (384 + 1433))] = v2744;
									v79[v2745] = v2744[v79[v81[4 + 0]]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[1 + 1]] = {};
									v73 = v73 + (4 - 3);
									v81 = v69[v73];
									v79[v81[2]] = v81[1537 - (198 + 1336)];
								end
							elseif (v82 <= 145) then
								if (v82 == (17 + 127)) then
									v79[v81[2]] = v79[v81[1408 - (1149 + 256)]][v81[4]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2 - 0]] = v79[v81[3]][v81[1770 - (1280 + 486)]];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[2 - 0]][v81[3 + 0]] = v79[v81[1612 - (786 + 822)]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[1 + 1]] = v63[v81[2 + 1]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1462 - (1303 + 157)]] = v79[v81[2 + 1]][v81[1419 - (505 + 910)]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[871 - (548 + 320)]][v81[4]];
									v73 = v73 + (592 - (52 + 539));
									v81 = v69[v73];
									v79[v81[557 - (378 + 177)]][v81[8 - 5]] = v79[v81[9 - 5]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[209 - (108 + 99)]] = v81[2 + 1];
								else
									local v2781 = 0 - 0;
									local v2782;
									while true do
										if (v2781 == 4) then
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[8 - 6]] = v63[v81[3 + 0]];
											v73 = v73 + (1 - 0);
											v81 = v69[v73];
											v2782 = v81[2 + 0];
											v2781 = 4 + 1;
										end
										if ((271 < 1051) and (v2781 == (2 + 0))) then
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v63[v81[6 - 3]] = v79[v81[1 + 1]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[3 - 1]] = v64[v81[2 + 1]];
											v2781 = 13 - 10;
										end
										if ((v2781 == (1 + 0)) or (4103 < 1162)) then
											v81 = v69[v73];
											v79[v81[841 - (823 + 16)]] = v79[v81[281 - (19 + 259)]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v2782 = v81[2];
											v79[v2782] = v79[v2782](v13(v79, v2782 + (1821 - (1780 + 40)), v81[6 - 3]));
											v2781 = 4 - 2;
										end
										if ((2212 <= 2343) and (v2781 == (8 - 3))) then
											v79[v2782] = v79[v2782](v13(v79, v2782 + (1 - 0), v81[3]));
											break;
										end
										if (v2781 == (0 + 0)) then
											v2782 = nil;
											v79[v81[8 - 6]] = v63[v81[3]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[1 + 1]] = v79[v81[11 - 8]];
											v73 = v73 + 1 + 0;
											v2781 = 2 - 1;
										end
										if (v2781 == (8 - 5)) then
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[1 + 1]] = v79[v81[3]][v81[1184 - (825 + 355)]];
											v73 = v73 + (861 - (846 + 14));
											v81 = v69[v73];
											v79[v81[2 + 0]] = v63[v81[4 - 1]];
											v2781 = 374 - (237 + 133);
										end
									end
								end
							elseif (v82 > 146) then
								local v2783;
								local v2784, v2785;
								local v2786;
								v79[v81[1188 - (624 + 562)]] = v79[v81[8 - 5]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[2 + 0]] = v63[v81[805 - (700 + 102)]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[6 - 4]] = v63[v81[5 - 2]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[5 - 3]] = v63[v81[3 + 0]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[4 - 2]] = v63[v81[1 + 2]];
								v73 = v73 + (1277 - (735 + 541));
								v81 = v69[v73];
								v79[v81[842 - (497 + 343)]] = v79[v81[3]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1785 - (995 + 788)]] = v79[v81[9 - 6]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 - 0]] = v79[v81[3]] + v81[8 - 4];
								v73 = v73 + (199 - (37 + 161));
								v81 = v69[v73];
								v2786 = v81[3 - 1];
								v2784, v2785 = v72(v79[v2786](v13(v79, v2786 + (2 - 1), v81[3 + 0])));
								v74 = (v2785 + v2786) - (1 + 0);
								v2783 = 0 - 0;
								for v7594 = v2786, v74 do
									v2783 = v2783 + (1273 - (357 + 915));
									v79[v7594] = v2784[v2783];
								end
								v73 = v73 + (676 - (50 + 625));
								v81 = v69[v73];
								v2786 = v81[1882 - (1624 + 256)];
								v79[v2786] = v79[v2786](v13(v79, v2786 + (1 - 0), v74));
							else
								v79[v81[2 - 0]] = v64[v81[1526 - (180 + 1343)]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1344 - (1057 + 285)]] = v79[v81[1 + 2]][v81[7 - 3]];
								v73 = v73 + (1404 - (135 + 1268));
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[3]][v81[1425 - (1088 + 333)]];
								v73 = v73 + (1683 - (1280 + 402));
								v81 = v69[v73];
								v79[v81[2 - 0]][v81[3 + 0]] = v79[v81[2 + 2]];
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v79[v81[1 + 1]] = v63[v81[20 - (11 + 6)]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[3 - 1]] = v64[v81[3]];
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v79[v81[1738 - (1015 + 721)]] = v79[v81[3]][v81[11 - 7]];
								v73 = v73 + (243 - (169 + 73));
								v81 = v69[v73];
								v79[v81[2 - 0]] = v79[v81[1899 - (1052 + 844)]][v81[13 - 9]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[18 - (5 + 11)]][v81[1518 - (210 + 1305)]] = v79[v81[2 + 2]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[749 - (646 + 101)]] = v81[379 - (12 + 364)];
							end
						elseif (v82 <= 154) then
							if (v82 <= (865 - (587 + 128))) then
								if (v82 <= (329 - 181)) then
									local v415 = 0 - 0;
									local v416;
									while true do
										if ((3139 < 4757) and (v415 == (12 - 7))) then
											v79[v81[229 - (196 + 31)]] = v64[v81[3]];
											break;
										end
										if ((1 + 0) == v415) then
											v79[v81[2]] = v81[540 - (227 + 310)];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[2]] = v81[3];
											v415 = 775 - (689 + 84);
										end
										if ((909 < 1703) and (v415 == (1375 - (404 + 971)))) then
											v416 = nil;
											v79[v81[3 - 1]] = v79[v81[3]][v81[1 + 3]];
											v73 = v73 + (1398 - (764 + 633));
											v81 = v69[v73];
											v415 = 1;
										end
										if ((803 <= 1886) and (v415 == 3)) then
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[1 + 1]][v81[209 - (114 + 92)]] = v79[v81[3 + 1]];
											v73 = v73 + (530 - (4 + 525));
											v415 = 5 - 1;
										end
										if (v415 == (6 - 2)) then
											v81 = v69[v73];
											v79[v81[1315 - (636 + 677)]][v81[9 - 6]] = v79[v81[4]];
											v73 = v73 + (1355 - (447 + 907));
											v81 = v69[v73];
											v415 = 5;
										end
										if ((1800 - (303 + 1495)) == v415) then
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v416 = v81[5 - 3];
											v79[v416] = v79[v416](v13(v79, v416 + 1, v81[6 - 3]));
											v415 = 1819 - (1446 + 370);
										end
									end
								elseif (v82 > (700 - (245 + 306))) then
									local v2825;
									v79[v81[2 + 0]] = v63[v81[3]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v2825 = v81[6 - 4];
									v79[v2825] = v79[v2825](v79[v2825 + 1 + 0]);
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]] = v63[v81[1 + 2]];
									v73 = v73 + (1474 - (536 + 937));
									v81 = v69[v73];
									v79[v81[5 - 3]] = v79[v81[3]][v81[156 - (143 + 9)]];
									v73 = v73 + 1;
									v81 = v69[v73];
									if (v79[v81[3 - 1]] ~= v79[v81[1078 - (474 + 600)]]) then
										v73 = v73 + (2 - 1);
									else
										v73 = v81[9 - 6];
									end
								else
									local v2835;
									local v2836;
									v79[v81[2 + 0]] = v79[v81[8 - 5]][v81[4]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v2836 = v81[2 - 0];
									v2835 = v79[v81[1 + 2]];
									v79[v2836 + (1489 - (49 + 1439))] = v2835;
									v79[v2836] = v2835[v81[2 + 2]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v2836 = v81[7 - 5];
									v79[v2836](v79[v2836 + (1991 - (769 + 1221))]);
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1074 - (270 + 802)]] = v64[v81[1859 - (301 + 1555)]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]][v81[1 + 2]] = v81[79 - (22 + 53)];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v73 = v81[14 - 11];
								end
							elseif (v82 <= 152) then
								if (v82 > (348 - 197)) then
									local v2851 = 0 + 0;
									while true do
										if ((0 - 0) == v2851) then
											v79[v81[2]] = v79[v81[3 + 0]][v81[3 + 1]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[94 - (41 + 51)]] = v64[v81[606 - (391 + 212)]];
											v2851 = 1 - 0;
										end
										if ((4 + 2) == v2851) then
											v79[v81[2]] = v63[v81[3]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[4 - 2]] = v79[v81[5 - 2]][v81[6 - 2]];
											break;
										end
										if ((2 - 1) == v2851) then
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[2]] = v79[v81[11 - 8]][v81[3 + 1]];
											v73 = v73 + (1 - 0);
											v2851 = 2 + 0;
										end
										if ((381 - (155 + 221)) == v2851) then
											v81 = v69[v73];
											v79[v81[1 + 1]] = v79[v81[3]] / v81[1461 - (366 + 1091)];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v2851 = 292 - (90 + 196);
										end
										if (v2851 == (1776 - (1710 + 64))) then
											v81 = v69[v73];
											v79[v81[3 - 1]] = v63[v81[14 - 11]];
											v73 = v73 + (1 - 0);
											v81 = v69[v73];
											v2851 = 9 - 6;
										end
										if ((326 <= 1474) and ((4 - 1) == v2851)) then
											v79[v81[2 - 0]] = v79[v81[270 - (72 + 195)]][v81[3 + 1]];
											v73 = v73 + (1179 - (28 + 1150));
											v81 = v69[v73];
											v79[v81[1 + 1]] = v79[v81[601 - (102 + 496)]][v81[448 - (181 + 263)]];
											v2851 = 4;
										end
										if (v2851 == 4) then
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[2 + 0]] = v79[v81[2 + 1]][v81[4]];
											v73 = v73 + (3 - 2);
											v2851 = 4 + 1;
										end
									end
								else
									local v2852;
									v79[v81[1510 - (822 + 686)]] = v79[v81[3]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[4 - 2]] = v81[2 + 1];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[863 - (252 + 609)]] = v81[1 + 2];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v2852 = v81[2];
									v79[v2852] = v79[v2852](v13(v79, v2852 + (1 - 0), v81[961 - (578 + 380)]));
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1718 - (1431 + 285)]][v79[v81[2 + 1]]] = v79[v81[7 - 3]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2 - 0]] = v81[11 - 8];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[3 - 1]] = v79[v81[1115 - (1013 + 99)]];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[959 - (449 + 508)]] = v81[3 - 0];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1894 - (1562 + 330)]] = v81[3];
									v73 = v73 + (1973 - (1870 + 102));
									v81 = v69[v73];
									v2852 = v81[2];
									v79[v2852] = v79[v2852](v13(v79, v2852 + 1, v81[1 + 2]));
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2 + 0]][v79[v81[3]]] = v79[v81[5 - 1]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[3 - 1]] = v81[3 + 0];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1 + 1]] = v79[v81[1 + 2]];
									v73 = v73 + (995 - (550 + 444));
									v81 = v69[v73];
									v79[v81[1 + 1]] = v81[5 - 2];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1 + 1]] = v81[3];
									v73 = v73 + 1;
									v81 = v69[v73];
									v2852 = v81[1 + 1];
									v79[v2852] = v79[v2852](v13(v79, v2852 + 1 + 0, v81[3 - 0]));
									v73 = v73 + (581 - (544 + 36));
									v81 = v69[v73];
									v79[v81[1233 - (70 + 1161)]][v79[v81[2 + 1]]] = v79[v81[761 - (130 + 627)]];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[313 - (121 + 190)]] = v81[11 - 8];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[8 - 6]] = v79[v81[325 - (255 + 67)]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v81[6 - 3];
									v73 = v73 + (279 - (225 + 53));
									v81 = v69[v73];
									v79[v81[2 - 0]] = v81[1302 - (738 + 561)];
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v2852 = v81[2 + 0];
									v79[v2852] = v79[v2852](v13(v79, v2852 + 1, v81[3 + 0]));
									v73 = v73 + (1612 - (1450 + 161));
									v81 = v69[v73];
									v79[v81[1730 - (183 + 1545)]][v79[v81[2 + 1]]] = v79[v81[4]];
									v73 = v73 + (1171 - (736 + 434));
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[13 - 10];
									v73 = v73 + (40 - (32 + 7));
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[11 - 8]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[375 - (103 + 270)]] = v81[1 + 2];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v81[1456 - (1021 + 432)];
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v2852 = v81[2];
									v79[v2852] = v79[v2852](v13(v79, v2852 + (1415 - (153 + 1261)), v81[1 + 2]));
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[890 - (800 + 88)]][v79[v81[1 + 2]]] = v79[v81[10 - 6]];
									v73 = v73 + (822 - (358 + 463));
									v81 = v69[v73];
									v79[v81[260 - (176 + 82)]] = v81[3];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[772 - (543 + 227)]] = v79[v81[3 + 0]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[7 - 5]] = v81[1789 - (1509 + 277)];
									v73 = v73 + (1961 - (1453 + 507));
									v81 = v69[v73];
									v79[v81[1 + 1]] = v81[11 - 8];
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v2852 = v81[1 + 1];
									v79[v2852] = v79[v2852](v13(v79, v2852 + 1, v81[3]));
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]][v79[v81[3]]] = v79[v81[9 - 5]];
									v73 = v73 + (1032 - (22 + 1009));
									v81 = v69[v73];
									v79[v81[2]] = v81[14 - 11];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1942 - (245 + 1695)]] = v79[v81[1038 - (611 + 424)]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[300 - (280 + 18)]] = v81[3];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[3 - 1]] = v81[6 - 3];
									v73 = v73 + (279 - (109 + 169));
									v81 = v69[v73];
									v2852 = v81[2];
									v79[v2852] = v79[v2852](v13(v79, v2852 + 1 + 0, v81[2 + 1]));
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1 + 1]][v79[v81[1 + 2]]] = v79[v81[4]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[7 - 5]] = v81[7 - 4];
									v73 = v73 + (1343 - (875 + 467));
									v81 = v69[v73];
									v79[v81[1 + 1]] = v79[v81[13 - 10]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[6 - 4]] = v81[3];
									v73 = v73 + (800 - (717 + 82));
									v81 = v69[v73];
									v79[v81[1022 - (693 + 327)]] = v81[1914 - (746 + 1165)];
									v73 = v73 + (1736 - (1473 + 262));
									v81 = v69[v73];
									v2852 = v81[2 + 0];
									v79[v2852] = v79[v2852](v13(v79, v2852 + 1, v81[1 + 2]));
									v73 = v73 + (1874 - (874 + 999));
									v81 = v69[v73];
									v79[v81[5 - 3]][v79[v81[3 + 0]]] = v79[v81[10 - 6]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[2 + 1];
									v73 = v73 + (4 - 3);
									v81 = v69[v73];
									v79[v81[3 - 1]] = v79[v81[3 + 0]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[461 - (388 + 70)];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[3];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v2852 = v81[5 - 3];
									v79[v2852] = v79[v2852](v13(v79, v2852 + 1, v81[3]));
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1 + 1]][v79[v81[585 - (319 + 263)]]] = v79[v81[15 - 11]];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[2 + 1];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[816 - (94 + 720)]] = v79[v81[381 - (78 + 300)]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1919 - (774 + 1143)]] = v81[3];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[193 - (18 + 173)]] = v81[7 - 4];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v2852 = v81[4 - 2];
									v79[v2852] = v79[v2852](v13(v79, v2852 + (4 - 3), v81[3]));
									v73 = v73 + (1486 - (677 + 808));
									v81 = v69[v73];
									v79[v81[1 + 1]][v79[v81[973 - (528 + 442)]]] = v79[v81[11 - 7]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]] = v81[350 - (116 + 231)];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2 + 0]] = v79[v81[3]];
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v79[v81[2]] = v81[1 + 2];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1472 - (1242 + 228)]] = v81[3];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v2852 = v81[846 - (320 + 524)];
									v79[v2852] = v79[v2852](v13(v79, v2852 + (2 - 1), v81[7 - 4]));
									v73 = v73 + (4 - 3);
									v81 = v69[v73];
									v79[v81[1 + 1]][v79[v81[7 - 4]]] = v79[v81[479 - (63 + 412)]];
									v73 = v73 + (1865 - (1299 + 565));
									v81 = v69[v73];
									v79[v81[5 - 3]] = v81[1 + 2];
									v73 = v73 + (4 - 3);
									v81 = v69[v73];
									v79[v81[1 + 1]] = v79[v81[3 + 0]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[6 - 4]] = v81[331 - (79 + 249)];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2]] = v81[1633 - (305 + 1325)];
									v73 = v73 + (1729 - (1585 + 143));
									v81 = v69[v73];
									v2852 = v81[6 - 4];
									v79[v2852] = v79[v2852](v13(v79, v2852 + (1831 - (1727 + 103)), v81[9 - 6]));
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2 + 0]][v79[v81[2 + 1]]] = v79[v81[4]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[6 - 4]] = v81[277 - (135 + 139)];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2 - 0]] = v79[v81[3]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v81[2 + 1];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1 + 1]] = v81[2 + 1];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v2852 = v81[1706 - (1084 + 620)];
									v79[v2852] = v79[v2852](v13(v79, v2852 + 1, v81[3]));
									v73 = v73 + (1054 - (404 + 649));
									v81 = v69[v73];
									v79[v81[2]][v79[v81[3]]] = v79[v81[818 - (318 + 496)]];
									v73 = v73 + (1883 - (1730 + 152));
									v81 = v69[v73];
									v79[v81[2]] = v81[9 - 6];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[6 - 4]] = v79[v81[1864 - (527 + 1334)]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v81[1949 - (464 + 1482)];
								end
							elseif (v82 > (340 - 187)) then
								v79[v81[1 + 1]] = {};
							else
								local v2943;
								local v2944;
								v2944 = v81[2];
								v2943 = v79[v81[3]];
								v79[v2944 + 1] = v2943;
								v79[v2944] = v2943[v79[v81[4]]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]] = v81[3];
								v73 = v73 + (570 - (485 + 84));
								v81 = v69[v73];
								v79[v81[1 + 1]] = v79[v81[3]][v79[v81[4 + 0]]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v2944 = v81[2 + 0];
								v79[v2944] = v79[v2944](v13(v79, v2944 + 1 + 0, v81[3]));
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								if v79[v81[1 + 1]] then
									v73 = v73 + 1;
								else
									v73 = v81[8 - 5];
								end
							end
						elseif (v82 <= (1158 - (359 + 642))) then
							if (v82 <= (14 + 141)) then
								local v417 = 0 + 0;
								local v418;
								while true do
									if ((2459 <= 4733) and (v417 == (1360 - (564 + 780)))) then
										v79[v81[2]] = v79[v81[3]];
										v73 = v73 + (3 - 2);
										v81 = v69[v73];
										v79[v81[2]] = v81[1 + 2];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2 - 0]] = v81[4 - 1];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v417 = 11 + 6;
									end
									if (23 == v417) then
										v79[v81[2]] = v81[1429 - (909 + 517)];
										v73 = v73 + (460 - (432 + 27));
										v81 = v69[v73];
										v418 = v81[1738 - (69 + 1667)];
										v79[v418] = v79[v418](v13(v79, v418 + 1 + 0, v81[125 - (16 + 106)]));
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2 + 0]][v79[v81[1255 - (1178 + 74)]]] = v79[v81[2 + 2]];
										v73 = v73 + (3 - 2);
										v417 = 471 - (312 + 135);
									end
									if ((2229 > 617) and (v417 == (12 + 8))) then
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[6 - 4]] = v79[v81[7 - 4]];
										v73 = v73 + (1830 - (492 + 1337));
										v81 = v69[v73];
										v79[v81[2]] = v81[1 + 2];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2 + 0]] = v81[1393 - (814 + 576)];
										v417 = 43 - 22;
									end
									if ((v417 == (60 - 35)) or (3995 <= 266)) then
										v81 = v69[v73];
										v79[v81[2 + 0]] = v81[8 - 5];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v418 = v81[1 + 1];
										v79[v418] = v79[v418](v13(v79, v418 + 1 + 0, v81[3]));
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[5 - 3]][v79[v81[2 + 1]]] = v79[v81[1 + 3]];
										v417 = 76 - 50;
									end
									if (v417 == (2 + 4)) then
										v81 = v69[v73];
										v79[v81[1361 - (978 + 381)]] = v81[1 + 2];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v418 = v81[1 + 1];
										v79[v418] = v79[v418](v13(v79, v418 + 1 + 0, v81[6 - 3]));
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2]][v79[v81[8 - 5]]] = v79[v81[4 + 0]];
										v417 = 16 - 9;
									end
									if (v417 == (10 + 7)) then
										v418 = v81[1 + 1];
										v79[v418] = v79[v418](v13(v79, v418 + 1 + 0, v81[3]));
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[571 - (397 + 172)]][v79[v81[4 - 1]]] = v79[v81[4]];
										v73 = v73 + (1118 - (267 + 850));
										v81 = v69[v73];
										v79[v81[2 + 0]] = v81[9 - 6];
										v73 = v73 + (995 - (41 + 953));
										v417 = 74 - 56;
									end
									if (v417 == (3 + 12)) then
										v79[v418] = v79[v418](v13(v79, v418 + 1, v81[5 - 2]));
										v73 = v73 + (821 - (817 + 3));
										v81 = v69[v73];
										v79[v81[1387 - (867 + 518)]][v79[v81[8 - 5]]] = v79[v81[334 - (256 + 74)]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2]] = v81[2 + 1];
										v73 = v73 + (4 - 3);
										v81 = v69[v73];
										v417 = 203 - (111 + 76);
									end
									if ((v417 == (4 + 1)) or (679 > 1084)) then
										v81 = v69[v73];
										v79[v81[1053 - (100 + 951)]] = v81[628 - (369 + 256)];
										v73 = v73 + (4 - 3);
										v81 = v69[v73];
										v79[v81[1 + 1]] = v79[v81[66 - (25 + 38)]];
										v73 = v73 + (1037 - (890 + 146));
										v81 = v69[v73];
										v79[v81[2]] = v81[7 - 4];
										v73 = v73 + 1 + 0;
										v417 = 1590 - (549 + 1035);
									end
									if (v417 == (1 - 0)) then
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[1 + 1]] = v79[v81[3 + 0]];
										v73 = v73 + (962 - (546 + 415));
										v81 = v69[v73];
										v79[v81[1026 - (175 + 849)]] = v81[1667 - (734 + 930)];
										v73 = v73 + (1416 - (1093 + 322));
										v81 = v69[v73];
										v79[v81[7 - 5]] = v81[1304 - (1256 + 45)];
										v417 = 1847 - (66 + 1779);
									end
									if ((1782 - (920 + 853)) == v417) then
										v79[v81[2]][v79[v81[61 - (6 + 52)]]] = v79[v81[7 - 3]];
										v73 = v73 + (3 - 2);
										v81 = v69[v73];
										v79[v81[4 - 2]] = v81[3];
										v73 = v73 + (3 - 2);
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[3]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v417 = 8 + 2;
									end
									if ((4780 == 4780) and (v417 == (105 - (11 + 76)))) then
										v81 = v69[v73];
										v79[v81[5 - 3]] = v79[v81[3]];
										v73 = v73 + (823 - (560 + 262));
										v81 = v69[v73];
										v79[v81[2 - 0]] = v81[1860 - (12 + 1845)];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[1319 - (1278 + 39)]] = v81[9 - 6];
										v73 = v73 + 1;
										v417 = 13 + 6;
									end
									if (v417 == (44 - 23)) then
										v73 = v73 + (3 - 2);
										v81 = v69[v73];
										v418 = v81[2 + 0];
										v79[v418] = v79[v418](v13(v79, v418 + 1, v81[3]));
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[1538 - (385 + 1151)]][v79[v81[1453 - (240 + 1210)]]] = v79[v81[1669 - (816 + 849)]];
										v73 = v73 + (1855 - (99 + 1755));
										v81 = v69[v73];
										v417 = 29 - 7;
									end
									if (v417 == (810 - (424 + 360))) then
										v73 = v73 + (1375 - (41 + 1333));
										v81 = v69[v73];
										v79[v81[547 - (161 + 384)]] = v81[934 - (355 + 576)];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[690 - (348 + 339)]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[9 - 7]] = v81[14 - 11];
										v417 = 495 - (285 + 183);
									end
									if ((54 - 32) == v417) then
										v79[v81[1 + 1]] = v81[1973 - (928 + 1042)];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[1579 - (545 + 1031)]];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[7 - 5]] = v81[3];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v417 = 948 - (345 + 580);
									end
									if (v417 == 19) then
										v81 = v69[v73];
										v418 = v81[3 - 1];
										v79[v418] = v79[v418](v13(v79, v418 + 1 + 0, v81[312 - (136 + 173)]));
										v73 = v73 + (1904 - (1448 + 455));
										v81 = v69[v73];
										v79[v81[5 - 3]][v79[v81[1 + 2]]] = v79[v81[4]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2]] = v81[2 + 1];
										v417 = 12 + 8;
									end
									if (v417 == (28 - 15)) then
										v73 = v73 + (1562 - (1137 + 424));
										v81 = v69[v73];
										v79[v81[1929 - (372 + 1555)]][v79[v81[384 - (174 + 207)]]] = v79[v81[2 + 2]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[1 + 1]] = v81[74 - (65 + 6)];
										v73 = v73 + (1312 - (1041 + 270));
										v81 = v69[v73];
										v79[v81[3 - 1]] = v79[v81[3]];
										v417 = 6 + 8;
									end
									if (v417 == (92 - 65)) then
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[1712 - (222 + 1488)]] = v81[3];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v418 = v81[2 + 0];
										v79[v418] = v79[v418](v13(v79, v418 + (1523 - (1023 + 499)), v81[3]));
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v417 = 28;
									end
									if ((94 - 66) == v417) then
										v79[v81[2 + 0]][v79[v81[8 - 5]]] = v79[v81[1 + 3]];
										break;
									end
									if (v417 == (10 + 1)) then
										v81 = v69[v73];
										v79[v81[2]][v79[v81[2 + 1]]] = v79[v81[811 - (134 + 673)]];
										v73 = v73 + (1058 - (810 + 247));
										v81 = v69[v73];
										v79[v81[2]] = v81[1463 - (753 + 707)];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[4 - 2]] = v79[v81[6 - 3]];
										v73 = v73 + (601 - (462 + 138));
										v417 = 12;
									end
									if (v417 == (12 + 0)) then
										v81 = v69[v73];
										v79[v81[1 + 1]] = v81[10 - 7];
										v73 = v73 + (661 - (642 + 18));
										v81 = v69[v73];
										v79[v81[980 - (155 + 823)]] = v81[3 + 0];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v418 = v81[2 + 0];
										v79[v418] = v79[v418](v13(v79, v418 + 1 + 0, v81[1456 - (799 + 654)]));
										v417 = 28 - 15;
									end
									if (v417 == 10) then
										v79[v81[6 - 4]] = v81[3];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v79[v81[635 - (527 + 106)]] = v81[5 - 2];
										v73 = v73 + 1;
										v81 = v69[v73];
										v418 = v81[2 - 0];
										v79[v418] = v79[v418](v13(v79, v418 + 1, v81[1 + 2]));
										v73 = v73 + 1 + 0;
										v417 = 9 + 2;
									end
									if (v417 == (1 + 1)) then
										v73 = v73 + 1;
										v81 = v69[v73];
										v418 = v81[2];
										v79[v418] = v79[v418](v13(v79, v418 + (3 - 2), v81[3 + 0]));
										v73 = v73 + (734 - (589 + 144));
										v81 = v69[v73];
										v79[v81[2 + 0]][v79[v81[1 + 2]]] = v79[v81[532 - (179 + 349)]];
										v73 = v73 + (4 - 3);
										v81 = v69[v73];
										v417 = 3;
									end
									if (v417 == (37 - 23)) then
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2]] = v81[1 + 2];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[3 - 1]] = v81[3];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v418 = v81[6 - 4];
										v417 = 11 + 4;
									end
									if (v417 == (0 + 0)) then
										v418 = nil;
										v418 = v81[1 + 1];
										v79[v418] = v79[v418](v13(v79, v418 + (487 - (242 + 244)), v81[410 - (303 + 104)]));
										v73 = v73 + (3 - 2);
										v81 = v69[v73];
										v79[v81[1 + 1]][v79[v81[3]]] = v79[v81[647 - (411 + 232)]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2]] = v81[3 + 0];
										v417 = 1 + 0;
									end
									if (v417 == 8) then
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[2]] = v81[6 - 3];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v418 = v81[1 + 1];
										v79[v418] = v79[v418](v13(v79, v418 + (2 - 1), v81[3]));
										v73 = v73 + (482 - (164 + 317));
										v81 = v69[v73];
										v417 = 108 - (65 + 34);
									end
									if (v417 == (7 - 4)) then
										v79[v81[2]] = v81[2 + 1];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[320 - (61 + 257)]] = v79[v81[1882 - (398 + 1481)]];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v79[v81[4 - 2]] = v81[3 + 0];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v417 = 690 - (338 + 348);
									end
									if ((3301 < 4488) and ((1382 - (401 + 977)) == v417)) then
										v79[v81[4 - 2]] = v81[3 + 0];
										v73 = v73 + (46 - (17 + 28));
										v81 = v69[v73];
										v418 = v81[187 - (27 + 158)];
										v79[v418] = v79[v418](v13(v79, v418 + (2 - 1), v81[1 + 2]));
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2]][v79[v81[3]]] = v79[v81[2 + 2]];
										v73 = v73 + (1294 - (372 + 921));
										v417 = 5 + 0;
									end
									if (v417 == 7) then
										v73 = v73 + (484 - (350 + 133));
										v81 = v69[v73];
										v79[v81[2 + 0]] = v81[3];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[1 + 1]] = v79[v81[3]];
										v73 = v73 + (1539 - (1432 + 106));
										v81 = v69[v73];
										v79[v81[1 + 1]] = v81[4 - 1];
										v417 = 6 + 2;
									end
									if (v417 == (1470 - (1075 + 371))) then
										v81 = v69[v73];
										v79[v81[7 - 5]] = v81[6 - 3];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[6 - 4]] = v79[v81[3 + 0]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2]] = v81[1550 - (234 + 1313)];
										v73 = v73 + (1 - 0);
										v417 = 8 + 17;
									end
								end
							elseif ((4887 > 1132) and (v82 > 156)) then
								do
									return;
								end
							else
								local v2956 = 908 - (597 + 311);
								local v2957;
								local v2958;
								local v2959;
								while true do
									if ((1811 == 1811) and (v2956 == (32 - (13 + 14)))) then
										v2959 = v81[1 + 1];
										v79[v2959] = v79[v2959](v79[v2959 + (1054 - (713 + 340))]);
										v73 = v73 + (2 - 1);
										v2956 = 6 + 0;
									end
									if ((v2956 == 4) or (194 > 4453)) then
										v79[v81[4 - 2]] = v79[v81[3 + 0]];
										v73 = v73 + (352 - (265 + 86));
										v81 = v69[v73];
										v2956 = 5;
									end
									if ((v2956 == (18 - 12)) or (3880 < 2381)) then
										v81 = v69[v73];
										v2958 = v81[1 + 2];
										v2957 = v79[v2958];
										v2956 = 878 - (747 + 124);
									end
									if (v2956 == 7) then
										for v12378 = v2958 + (1457 - (692 + 764)), v81[12 - 8] do
											v2957 = v2957 .. v79[v12378];
										end
										v79[v81[2]] = v2957;
										v73 = v73 + 1 + 0;
										v2956 = 29 - 21;
									end
									if (v2956 == (5 + 3)) then
										v81 = v69[v73];
										v2959 = v81[4 - 2];
										v79[v2959](v79[v2959 + 1]);
										break;
									end
									if (3 == v2956) then
										v79[v81[2]] = v64[v81[1033 - (283 + 747)]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v2956 = 909 - (816 + 89);
									end
									if (v2956 == (0 - 0)) then
										v2957 = nil;
										v2958 = nil;
										v2959 = nil;
										v2956 = 1 + 0;
									end
									if (v2956 == (1080 - (709 + 369))) then
										v79[v81[2]] = v79[v81[11 - 8]][v81[9 - 5]];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v2956 = 1 + 2;
									end
									if (v2956 == (1 + 0)) then
										v79[v81[2 + 0]] = v63[v81[1 + 2]];
										v73 = v73 + (700 - (478 + 221));
										v81 = v69[v73];
										v2956 = 774 - (607 + 165);
									end
								end
							end
						elseif (v82 <= 159) then
							if (v82 == 158) then
								local v2960;
								local v2961;
								local v2962;
								local v2963;
								v79[v81[1246 - (1108 + 136)]] = v63[v81[8 - 5]];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[5 - 3]] = v79[v81[639 - (352 + 284)]][v81[1 + 3]];
								v73 = v73 + (892 - (352 + 539));
								v81 = v69[v73];
								v79[v81[7 - 5]] = v79[v81[2 + 1]][v79[v81[4 + 0]]];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[768 - (714 + 52)]] = v79[v81[3 + 0]][v81[1817 - (1482 + 331)]];
								v73 = v73 + (1202 - (766 + 435));
								v81 = v69[v73];
								v2963 = v81[2];
								v2962 = v79[v81[1 + 2]];
								v79[v2963 + (1820 - (62 + 1757))] = v2962;
								v79[v2963] = v2962[v81[1372 - (833 + 535)]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[140 - (5 + 133)]] = v79[v81[3 + 0]][v81[4]];
								v73 = v73 + (521 - (393 + 127));
								v81 = v69[v73];
								v2963 = v81[1058 - (705 + 351)];
								v2961 = {v79[v2963](v13(v79, v2963 + 1 + 0, v81[3 + 0]))};
								v2960 = 1157 - (414 + 743);
								for v7801 = v2963, v81[3 + 1] do
									local v7802 = 472 - (65 + 407);
									while true do
										if ((1740 > 982) and (v7802 == (0 - 0))) then
											v2960 = v2960 + 1;
											v79[v7801] = v2961[v2960];
											break;
										end
									end
								end
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[9 - 7]] = v79[v81[11 - 8]];
								v73 = v73 + (1545 - (116 + 1428));
								v81 = v69[v73];
								v79[v81[8 - 6]] = v79[v81[3]];
								v73 = v73 + 1;
								v81 = v69[v73];
								if not v79[v81[2]] then
									v73 = v73 + (1303 - (79 + 1223));
								else
									v73 = v81[3 + 0];
								end
							else
								v79[v81[390 - (353 + 35)]] = v81[3] + v79[v81[8 - 4]];
							end
						elseif ((312 < 2711) and (v82 > (409 - 249))) then
							v79[v81[1942 - (490 + 1450)]] = v79[v81[1349 - (778 + 568)]] * v81[4 + 0];
						else
							local v2987 = 1294 - (914 + 380);
							while true do
								if (v2987 == (1 + 0)) then
									v73 = v73 + (533 - (126 + 406));
									v81 = v69[v73];
									v79[v81[1192 - (655 + 535)]] = v81[1 + 2] ~= (0 - 0);
									v73 = v73 + 1;
									v2987 = 5 - 3;
								end
								if ((v2987 == (11 - 6)) or (4134 < 2644)) then
									v81 = v69[v73];
									v79[v81[1 + 1]][v79[v81[1301 - (711 + 587)]]] = v79[v81[887 - (168 + 715)]];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v2987 = 4 + 2;
								end
								if (v2987 == (4 - 0)) then
									v73 = v73 + (293 - (232 + 60));
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[40 - (22 + 15)];
									v73 = v73 + (2 - 1);
									v2987 = 2 + 3;
								end
								if (v2987 == 2) then
									v81 = v69[v73];
									v79[v81[2]][v79[v81[6 - 3]]] = v79[v81[4]];
									v73 = v73 + (1174 - (797 + 376));
									v81 = v69[v73];
									v2987 = 3;
								end
								if (v2987 == (6 + 0)) then
									v79[v81[2]] = v81[1 + 2];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2 + 0]] = v79[v81[12 - 9]][v79[v81[3 + 1]]];
									break;
								end
								if (v2987 == (12 - 9)) then
									v79[v81[2]] = v81[9 - 6];
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[1380 - (1071 + 306)]][v79[v81[10 - 6]]];
									v2987 = 1195 - (412 + 779);
								end
								if ((0 - 0) == v2987) then
									v79[v81[4 - 2]] = v81[615 - (427 + 185)];
									v73 = v73 + (1652 - (1444 + 207));
									v81 = v69[v73];
									v79[v81[5 - 3]] = v79[v81[3]][v79[v81[4]]];
									v2987 = 1 + 0;
								end
							end
						end
					elseif ((2192 >= 1254) and (v82 <= (444 - 256))) then
						if ((v82 <= (265 - 91)) or (1520 == 4851)) then
							if (v82 <= 167) then
								if ((v82 <= (803 - (261 + 378))) or (2475 < 651)) then
									if (v82 <= (40 + 122)) then
										local v419 = v81[1 + 1];
										local v420 = {v79[v419](v79[v419 + (1 - 0)])};
										local v421 = 348 - (22 + 326);
										for v944 = v419, v81[13 - 9] do
											local v945 = 1214 - (836 + 378);
											while true do
												if (v945 == (0 + 0)) then
													v421 = v421 + (2 - 1);
													v79[v944] = v420[v421];
													break;
												end
											end
										end
									elseif ((3880 >= 1199) and (v82 == (301 - 138))) then
										local v2988;
										local v2989;
										local v2990;
										v79[v81[6 - 4]] = v63[v81[1 + 2]];
										v73 = v73 + (1288 - (742 + 545));
										v81 = v69[v73];
										v79[v81[4 - 2]] = v63[v81[3]];
										v73 = v73 + (3 - 2);
										v81 = v69[v73];
										v79[v81[1203 - (334 + 867)]] = v79[v81[7 - 4]][v81[1408 - (317 + 1087)]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[1 + 1]] = v79[v81[4 - 1]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v2990 = v81[673 - (97 + 573)];
										v2989 = v79[v2990];
										for v7803 = v2990 + (3 - 2), v81[1 + 3] do
											v2989 = v2989 .. v79[v7803];
										end
										v79[v81[1 + 1]] = v2989;
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[2 + 0]] = v81[1338 - (1234 + 101)] ~= (0 - 0);
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2 + 0]] = v81[13 - 10] ~= (0 - 0);
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[1202 - (711 + 489)]] = v81[3] ~= 0;
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v2988 = v81[7 - 5];
										v79[v2988](v13(v79, v2988 + 1 + 0, v81[3]));
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v79[v81[2]] = v81[6 - 3];
									else
										v79[v81[644 - (483 + 159)]][v79[v81[3 + 0]]] = v79[v81[321 - (200 + 117)]];
										v73 = v73 + (48 - (5 + 42));
										v81 = v69[v73];
										v79[v81[6 - 4]] = v81[3 + 0];
										v73 = v73 + (4 - 3);
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[539 - (298 + 238)]][v79[v81[1825 - (1370 + 451)]]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2]] = v81[3];
										v73 = v73 + (1262 - (493 + 768));
										v81 = v69[v73];
										v79[v81[1179 - (622 + 555)]][v79[v81[622 - (581 + 38)]]] = v79[v81[3 + 1]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2]] = v81[3];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[8 - 6]] = v79[v81[1925 - (567 + 1355)]][v79[v81[4]]];
										v73 = v73 + (1565 - (801 + 763));
										v81 = v69[v73];
										v79[v81[1 + 1]] = v81[3];
										v73 = v73 + (405 - (251 + 153));
										v81 = v69[v73];
										v79[v81[904 - (709 + 193)]][v79[v81[1890 - (737 + 1150)]]] = v79[v81[4]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[1034 - (755 + 277)]] = v81[464 - (182 + 279)];
									end
								elseif ((1499 >= 776) and (v82 <= (525 - (323 + 37)))) then
									v79[v81[2]] = #v79[v81[5 - 2]];
								elseif (v82 == 166) then
									v79[v81[1 + 1]] = v81[1018 - (992 + 23)];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[8 - 5]][v79[v81[649 - (269 + 376)]]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[3 - 1]] = v81[474 - (169 + 302)];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[3]][v79[v81[1 + 3]]];
									v73 = v73 + (1328 - (623 + 704));
									v81 = v69[v73];
									v79[v81[2]][v79[v81[2 + 1]]] = v79[v81[821 - (420 + 397)]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v81[1 + 2];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1 + 1]] = v79[v81[8 - 5]][v79[v81[18 - 14]]];
								else
									local v3036 = 0;
									local v3037;
									local v3038;
									while true do
										if (v3036 == (0 - 0)) then
											v3037 = nil;
											v3038 = nil;
											v3038 = v81[2 + 0];
											v3037 = v79[v81[3]];
											v3036 = 1 + 0;
										end
										if ((v3036 == (2 - 1)) or (1699 >= 2552)) then
											v79[v3038 + (2 - 1)] = v3037;
											v79[v3038] = v3037[v81[11 - 7]];
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v3036 = 1060 - (440 + 618);
										end
										if (v3036 == (1040 - (593 + 442))) then
											v81 = v69[v73];
											if v79[v81[2]] then
												v73 = v73 + 1 + 0;
											else
												v73 = v81[3];
											end
											break;
										end
										if (v3036 == (2 - 0)) then
											v79[v81[2]] = v64[v81[1047 - (801 + 243)]];
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v79[v81[2 - 0]] = v79[v81[5 - 2]][v81[4]];
											v3036 = 3;
										end
										if ((1090 <= 3222) and (v3036 == 3)) then
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[124 - (41 + 81)]] = v79[v81[10 - 7]][v81[4]];
											v73 = v73 + (507 - (145 + 361));
											v3036 = 4 + 0;
										end
										if (v3036 == 4) then
											v81 = v69[v73];
											v3038 = v81[3 - 1];
											v79[v3038] = v79[v3038](v13(v79, v3038 + 1, v81[159 - (28 + 128)]));
											v73 = v73 + (1 - 0);
											v3036 = 8 - 3;
										end
									end
								end
							elseif ((v82 <= (83 + 87)) or (4770 <= 3129)) then
								if ((164 <= 1558) and (v82 <= (253 - (33 + 52)))) then
									local v423 = v81[2 - 0];
									local v424, v425 = v72(v79[v423](v13(v79, v423 + 1 + 0, v74)));
									v74 = (v425 + v423) - 1;
									local v426 = 0 - 0;
									for v946 = v423, v74 do
										local v947 = 0 - 0;
										while true do
											if ((0 + 0) == v947) then
												v426 = v426 + (1347 - (1135 + 211));
												v79[v946] = v424[v426];
												break;
											end
										end
									end
								elseif (v82 == (162 + 7)) then
									local v3039;
									local v3040;
									v79[v81[7 - 5]] = v63[v81[2 + 1]];
									v73 = v73 + (1096 - (380 + 715));
									v81 = v69[v73];
									v3040 = v81[1 + 1];
									v3039 = v79[v81[3]];
									v79[v3040 + 1] = v3039;
									v79[v3040] = v3039[v81[1972 - (462 + 1506)]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1824 - (1182 + 640)]] = v63[v81[7 - 4]];
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[2 + 1]][v81[17 - 13]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v3040 = v81[1 + 1];
									v79[v3040] = v79[v3040](v13(v79, v3040 + (344 - (323 + 20)), v81[6 - 3]));
									v73 = v73 + 1;
									v81 = v69[v73];
									if v79[v81[2]] then
										v73 = v73 + 1;
									else
										v73 = v81[3 + 0];
									end
								else
									local v3053;
									v3053 = v81[2 + 0];
									v79[v3053] = v79[v3053](v79[v3053 + (2 - 1)]);
									v73 = v73 + (1175 - (769 + 405));
									v81 = v69[v73];
									for v7804 = v81[7 - 5], v81[88 - (9 + 76)] do
										v79[v7804] = nil;
									end
									v73 = v73 + (255 - (244 + 10));
									v81 = v69[v73];
									v79[v81[2]] = {};
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									for v7806 = v81[1307 - (601 + 704)], v81[2 + 1] do
										v79[v7806] = nil;
									end
									v73 = v73 + (523 - (23 + 499));
									v81 = v69[v73];
									v79[v81[2]] = {};
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]] = v81[1 + 2];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[308 - (35 + 271)]] = v81[4 - 1] ~= (0 - 0);
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2 + 0]] = v64[v81[12 - 9]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[10 - 7];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[1 + 2]][v79[v81[4 + 0]]];
								end
							elseif (v82 <= (487 - 315)) then
								if (v82 == 171) then
									local v3064;
									local v3065;
									v79[v81[5 - 3]] = v63[v81[1878 - (1136 + 739)]];
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[3]][v81[4]];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[576 - (125 + 449)]] = v81[7 - 4];
									v73 = v73 + (880 - (96 + 783));
									v81 = v69[v73];
									v3065 = v81[2];
									v79[v3065] = v79[v3065](v13(v79, v3065 + 1, v81[1031 - (888 + 140)]));
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2 + 0]] = v79[v81[65 - (41 + 21)]];
									v73 = v73 + (588 - (570 + 17));
									v81 = v69[v73];
									v3065 = v81[1 + 1];
									v3064 = v79[v81[2 + 1]];
									v79[v3065 + 1 + 0] = v3064;
									v79[v3065] = v3064[v81[8 - 4]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]] = v63[v81[5 - 2]];
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v79[v81[5 - 3]] = v79[v81[3 + 0]][v81[2 + 2]];
									v73 = v73 + (756 - (321 + 434));
									v81 = v69[v73];
									v79[v81[5 - 3]] = v81[2 + 1];
									v73 = v73 + 1;
									v81 = v69[v73];
									v3065 = v81[1 + 1];
									v79[v3065] = v79[v3065](v13(v79, v3065 + 1, v81[1289 - (137 + 1149)]));
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[1826 - (566 + 1257)]];
									v73 = v73 + (678 - (391 + 286));
									v81 = v69[v73];
									for v7808 = v81[2], v81[1377 - (384 + 990)] do
										v79[v7808] = nil;
									end
									v73 = v73 + (614 - (505 + 108));
									v81 = v69[v73];
									v79[v81[2]] = v81[3 + 0];
									v73 = v73 + 1;
									v81 = v69[v73];
									v73 = v81[1300 - (549 + 748)];
								else
									local v3087 = 0 + 0;
									local v3088;
									local v3089;
									local v3090;
									local v3091;
									while true do
										if (v3087 == (9 + 2)) then
											v79[v3091] = v79[v3091](v13(v79, v3091 + (3 - 2), v81[1 + 2]));
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											for v12381 = v81[2], v81[8 - 5] do
												v79[v12381] = nil;
											end
											v73 = v73 + (1 - 0);
											v81 = v69[v73];
											v79[v81[4 - 2]] = v81[2 + 1];
											v73 = v73 + 1 + 0;
											v3087 = 34 - 22;
										end
										if (v3087 == (6 - 3)) then
											v81 = v69[v73];
											v79[v81[2]] = v64[v81[3]];
											v73 = v73 + (693 - (205 + 487));
											v81 = v69[v73];
											v79[v81[2]] = v63[v81[3]];
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v79[v81[1 + 1]] = v79[v81[2 + 1]][v81[13 - 9]];
											v3087 = 1430 - (309 + 1117);
										end
										if (v3087 == (5 + 2)) then
											v79[v81[3 - 1]] = v64[v81[3 + 0]];
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v79[v81[78 - (50 + 26)]] = v63[v81[2 + 1]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[2 + 0]] = v79[v81[3]][v81[4 + 0]];
											v73 = v73 + (1819 - (520 + 1298));
											v3087 = 8;
										end
										if (v3087 == 13) then
											v79[v81[1062 - (420 + 640)]] = v64[v81[5 - 2]];
											v73 = v73 + (1 - 0);
											v81 = v69[v73];
											v79[v81[1584 - (15 + 1567)]] = v79[v81[3 + 0]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v3091 = v81[1986 - (110 + 1874)];
											v3089 = {v79[v3091](v79[v3091 + (783 - (101 + 681))])};
											v3087 = 13 + 1;
										end
										if (v3087 == (20 - 12)) then
											v81 = v69[v73];
											v79[v81[545 - (120 + 423)]] = v79[v81[8 - 5]][v79[v81[3 + 1]]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[2]] = v79[v81[3 + 0]][v81[2 + 2]];
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v79[v81[2]] = v79[v81[48 - (41 + 4)]];
											v3087 = 1092 - (246 + 837);
										end
										if (v3087 == 0) then
											v3088 = nil;
											v3089 = nil;
											v3090 = nil;
											v3091 = nil;
											v79[v81[908 - (492 + 414)]] = v63[v81[3 + 0]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[4 - 2]] = v79[v81[3]][v81[1053 - (829 + 220)]];
											v3087 = 1 + 0;
										end
										if (v3087 == (1 + 0)) then
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[6 - 4]] = v79[v81[5 - 2]][v79[v81[8 - 4]]];
											v73 = v73 + (1496 - (345 + 1150));
											v81 = v69[v73];
											v3091 = v81[1359 - (1017 + 340)];
											v3090 = v79[v81[2 + 1]];
											v79[v3091 + (3 - 2)] = v3090;
											v3087 = 2;
										end
										if (v3087 == 5) then
											v79[v81[2]] = v79[v81[2 + 1]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[1841 - (1279 + 560)]] = v79[v81[5 - 2]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[2]] = v79[v81[7 - 4]];
											v73 = v73 + (1464 - (140 + 1323));
											v3087 = 1994 - (1607 + 381);
										end
										if ((3781 >= 3738) and ((9 - 3) == v3087)) then
											v81 = v69[v73];
											v3091 = v81[5 - 3];
											v79[v3091] = v79[v3091](v13(v79, v3091 + 1, v81[197 - (162 + 32)]));
											v73 = v73 + (605 - (440 + 164));
											v81 = v69[v73];
											v79[v81[3 - 1]] = v79[v81[6 - 3]] - v79[v81[7 - 3]];
											v73 = v73 + (1 - 0);
											v81 = v69[v73];
											v3087 = 963 - (553 + 403);
										end
										if (v3087 == (51 - 37)) then
											v3088 = 0 - 0;
											for v12383 = v3091, v81[345 - (111 + 230)] do
												v3088 = v3088 + (1 - 0);
												v79[v12383] = v3089[v3088];
											end
											v73 = v73 + (4 - 3);
											v81 = v69[v73];
											v73 = v81[1 + 2];
											break;
										end
										if ((2 + 0) == v3087) then
											v79[v3091] = v3090[v81[4]];
											v73 = v73 + (339 - (85 + 253));
											v81 = v69[v73];
											v79[v81[1851 - (1558 + 291)]] = v64[v81[1 + 2]];
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v79[v81[2 - 0]] = v79[v81[1085 - (985 + 97)]][v81[9 - 5]];
											v73 = v73 + (614 - (424 + 189));
											v3087 = 3 + 0;
										end
										if ((1097 < 3130) and (v3087 == (1027 - (19 + 1004)))) then
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[2 + 0]] = v79[v81[2 + 1]][v79[v81[3 + 1]]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[1347 - (231 + 1114)]] = v79[v81[3]][v81[2 + 2]];
											v73 = v73 + (1046 - (114 + 931));
											v81 = v69[v73];
											v3087 = 5 + 0;
										end
										if ((v3087 == (12 - 3)) or (1253 > 3752)) then
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[1 + 1]] = v79[v81[66 - (17 + 46)]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[1 + 1]] = v79[v81[8 - 5]];
											v73 = v73 + (1037 - (931 + 105));
											v81 = v69[v73];
											v3087 = 1138 - (718 + 410);
										end
										if (v3087 == (1215 - (361 + 844))) then
											v3091 = v81[1912 - (1760 + 150)];
											v79[v3091] = v79[v3091](v13(v79, v3091 + 1, v81[3]));
											v73 = v73 + (1568 - (917 + 650));
											v81 = v69[v73];
											v79[v81[183 - (104 + 77)]] = v79[v81[3]] + v79[v81[9 - 5]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v3091 = v81[2];
											v3087 = 15 - 4;
										end
										if ((v3087 == 12) or (2300 == 1776)) then
											v81 = v69[v73];
											v3091 = v81[3 - 1];
											v79[v3091] = v79[v3091](v13(v79, v3091 + (265 - (53 + 211)), v81[2 + 1]));
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v79[v81[2]] = v79[v81[3 + 0]];
											v73 = v73 + (3 - 2);
											v81 = v69[v73];
											v3087 = 1313 - (282 + 1018);
										end
									end
								end
							elseif (v82 == (141 + 32)) then
								local v3092;
								local v3093;
								local v3094;
								local v3095;
								v79[v81[516 - (162 + 352)]] = v63[v81[1 + 2]];
								v73 = v73 + (930 - (22 + 907));
								v81 = v69[v73];
								v79[v81[441 - (280 + 159)]] = v79[v81[1583 - (1064 + 516)]][v81[11 - 7]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[3 + 0]][v79[v81[4]]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2 + 0]] = v79[v81[1 + 2]];
								v73 = v73 + (1906 - (1293 + 612));
								v81 = v69[v73];
								v3095 = v81[2 + 0];
								v74 = (v3095 + v80) - (1 - 0);
								for v7810 = v3095, v74 do
									v3094 = v75[v7810 - v3095];
									v79[v7810] = v3094;
								end
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v3095 = v81[2 + 0];
								v3093 = {v79[v3095](v13(v79, v3095 + (2 - 1), v74))};
								v3092 = 1668 - (1085 + 583);
								for v7813 = v3095, v81[4] do
									v3092 = v3092 + 1 + 0;
									v79[v7813] = v3093[v3092];
								end
								v73 = v73 + (1461 - (229 + 1231));
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[3]];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[5 - 3]] = v79[v81[3]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[6 - 4]] = v81[1 + 2];
							else
								local v3110 = 0;
								local v3111;
								while true do
									if (v3110 == (153 - (48 + 97))) then
										v73 = v73 + (1847 - (676 + 1170));
										v81 = v69[v73];
										v79[v81[1974 - (830 + 1142)]][v81[3]] = v79[v81[99 - (41 + 54)]];
										v3110 = 36 - 27;
									end
									if ((v3110 == (1075 - (536 + 530))) or (1704 == 188)) then
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v79[v81[7 - 5]] = v81[1258 - (1129 + 126)];
										break;
									end
									if (v3110 == 1) then
										v81 = v69[v73];
										v79[v81[2]] = v63[v81[3 + 0]];
										v73 = v73 + 1;
										v3110 = 454 - (282 + 170);
									end
									if ((v3110 == (5 + 2)) or (1414 >= 2258)) then
										v81 = v69[v73];
										v3111 = v81[2 + 0];
										v79[v3111] = v79[v3111](v13(v79, v3111 + 1 + 0, v81[14 - 11]));
										v3110 = 8;
									end
									if ((v3110 == (1226 - (610 + 613))) or (4732 < 1943)) then
										v81 = v69[v73];
										v79[v81[5 - 3]] = v79[v81[1611 - (1182 + 426)]][v81[1 + 3]];
										v73 = v73 + 1;
										v3110 = 3 + 1;
									end
									if ((1239 - (1210 + 24)) == v3110) then
										v81 = v69[v73];
										v79[v81[1 + 1]] = v81[1 + 2];
										v73 = v73 + (1358 - (307 + 1050));
										v3110 = 820 - (693 + 121);
									end
									if (v3110 == 0) then
										v3111 = nil;
										v79[v81[2]][v81[287 - (267 + 17)]] = v81[4];
										v73 = v73 + 1;
										v3110 = 1;
									end
									if (v3110 == 2) then
										v81 = v69[v73];
										v79[v81[61 - (22 + 37)]] = v64[v81[5 - 2]];
										v73 = v73 + 1 + 0;
										v3110 = 1450 - (391 + 1056);
									end
									if (v3110 == (4 + 2)) then
										v81 = v69[v73];
										v79[v81[1578 - (1117 + 459)]] = v81[8 - 5];
										v73 = v73 + 1;
										v3110 = 6 + 1;
									end
									if ((465 - (65 + 396)) == v3110) then
										v81 = v69[v73];
										v79[v81[4 - 2]] = v81[10 - 7];
										v73 = v73 + 1 + 0;
										v3110 = 1 + 4;
									end
								end
							end
						elseif ((2918 > 2498) and (v82 <= (1882 - (620 + 1081)))) then
							if ((4219 >= 297) and (v82 <= (34 + 143))) then
								if (v82 <= (2055 - (845 + 1035))) then
									if ((193 == 193) and (v79[v81[3 - 1]] == v81[10 - 6])) then
										v73 = v73 + (1570 - (1348 + 221));
									else
										v73 = v81[1044 - (320 + 721)];
									end
								elseif ((3878 > 1365) and (v82 > (2133 - (1284 + 673)))) then
									local v3113;
									v79[v81[4 - 2]] = v63[v81[3 + 0]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[7 - 4]][v81[4]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1 + 1]] = v79[v81[7 - 4]][v79[v81[11 - 7]]];
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v79[v81[4 - 2]] = v64[v81[11 - 8]];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[363 - (170 + 191)]] = v79[v81[3]][v81[1746 - (209 + 1533)]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2 - 0]] = v79[v81[1419 - (1049 + 367)]][v81[8 - 4]];
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v79[v81[5 - 3]] = v79[v81[3 + 0]][v81[4]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[4 - 2]] = v79[v81[3]][v81[7 - 3]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v3113 = v81[1 + 1];
									v79[v3113] = v79[v3113](v79[v3113 + (224 - (167 + 56))]);
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[1 + 1]] = v63[v81[3]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]][v81[3]] = v79[v81[5 - 1]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v73 = v81[3];
								else
									local v3135;
									v79[v81[882 - (752 + 128)]] = v81[3 + 0];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1 + 1]] = v81[3];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[20 - (7 + 11)]] = v81[3 + 0];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[133 - (87 + 44)]] = v81[3];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v3135 = v81[6 - 4];
									v79[v3135] = v79[v3135](v13(v79, v3135 + 1, v81[10 - 7]));
									v73 = v73 + (1536 - (656 + 879));
									v81 = v69[v73];
									v79[v81[3 - 1]][v81[1 + 2]] = v79[v81[4]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2]] = v81[3];
									v73 = v73 + (4 - 3);
									v81 = v69[v73];
									v73 = v81[1085 - (529 + 553)];
								end
							elseif (v82 <= (150 + 29)) then
								if (v82 == 178) then
									local v3149 = 937 - (613 + 324);
									local v3150;
									while true do
										if ((v3149 == 10) or (1807 > 3857)) then
											v79[v81[1322 - (585 + 735)]][v79[v81[3]]] = v79[v81[4 - 0]];
											v73 = v73 + (1 - 0);
											v81 = v69[v73];
											v79[v81[1 + 1]] = v81[8 - 5];
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v79[v81[2]] = v79[v81[3]];
											v73 = v73 + (16 - (6 + 9));
											v81 = v69[v73];
											v79[v81[7 - 5]] = v81[7 - 4];
											v3149 = 30 - 19;
										end
										if (v3149 == 14) then
											v81 = v69[v73];
											v79[v81[2]] = v81[8 - 5];
											v73 = v73 + (461 - (59 + 401));
											v81 = v69[v73];
											v79[v81[791 - (743 + 46)]] = v79[v81[2 + 1]];
											v73 = v73 + (1 - 0);
											v81 = v69[v73];
											v79[v81[2 - 0]] = v81[3];
											v73 = v73 + 1;
											v81 = v69[v73];
											v3149 = 12 + 3;
										end
										if (v3149 == (548 - (285 + 252))) then
											v73 = v73 + (476 - (146 + 329));
											v81 = v69[v73];
											v79[v81[1 + 1]] = v81[3];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v3150 = v81[2];
											v79[v3150] = v79[v3150](v13(v79, v3150 + 1, v81[1473 - (417 + 1053)]));
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[1874 - (1251 + 621)]][v79[v81[2 + 1]]] = v79[v81[17 - 13]];
											v3149 = 248 - (213 + 23);
										end
										if (v3149 == (769 - (617 + 127))) then
											v73 = v73 + (693 - (181 + 511));
											v81 = v69[v73];
											v79[v81[382 - (187 + 193)]][v79[v81[3]]] = v79[v81[4]];
											break;
										end
										if ((306 <= 1750) and (v3149 == (1293 - (107 + 1182)))) then
											v79[v3150] = v79[v3150](v13(v79, v3150 + (1985 - (1623 + 361)), v81[1 + 2]));
											v73 = v73 + (1822 - (325 + 1496));
											v81 = v69[v73];
											v79[v81[358 - (235 + 121)]][v79[v81[3 + 0]]] = v79[v81[4]];
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v79[v81[2 + 0]] = v81[11 - 8];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[4 - 2]] = v79[v81[3]];
											v3149 = 5;
										end
										if (v3149 == (71 - (28 + 21))) then
											v79[v81[2]] = v79[v81[6 - 3]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[689 - (630 + 57)]] = v81[3];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[2]] = v81[11 - 8];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v3150 = v81[2 + 0];
											v3149 = 23;
										end
										if (v3149 == (912 - (21 + 867))) then
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[6 - 4]] = v81[1770 - (1555 + 212)];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[3 - 1]] = v81[3 + 0];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v3150 = v81[2 + 0];
											v79[v3150] = v79[v3150](v13(v79, v3150 + 1, v81[2 + 1]));
											v3149 = 72 - 47;
										end
										if (v3149 == (10 - 5)) then
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[2 - 0]] = v81[3];
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v79[v81[4 - 2]] = v81[2 + 1];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v3150 = v81[4 - 2];
											v79[v3150] = v79[v3150](v13(v79, v3150 + 1 + 0, v81[3 + 0]));
											v3149 = 947 - (903 + 38);
										end
										if ((v3149 == (404 - (74 + 312))) or (3498 >= 4854)) then
											v73 = v73 + (1321 - (837 + 483));
											v81 = v69[v73];
											v79[v81[2 - 0]] = v79[v81[2 + 1]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[1 + 1]] = v81[1544 - (1455 + 86)];
											v73 = v73 + (825 - (803 + 21));
											v81 = v69[v73];
											v79[v81[2 - 0]] = v81[3];
											v73 = v73 + (2 - 1);
											v3149 = 30 - 11;
										end
										if ((v3149 == (6 + 15)) or (2274 == 552)) then
											v3150 = v81[2 + 0];
											v79[v3150] = v79[v3150](v13(v79, v3150 + 1 + 0, v81[3]));
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v79[v81[2 + 0]][v79[v81[3]]] = v79[v81[4]];
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v79[v81[2 + 0]] = v81[902 - (497 + 402)];
											v73 = v73 + (989 - (578 + 410));
											v81 = v69[v73];
											v3149 = 78 - 56;
										end
										if (v3149 == (1544 - (464 + 1079))) then
											v81 = v69[v73];
											v79[v81[2 + 0]] = v79[v81[1699 - (1398 + 298)]];
											v73 = v73 + (1 - 0);
											v81 = v69[v73];
											v79[v81[2 + 0]] = v81[3 - 0];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[2]] = v81[1 + 2];
											v73 = v73 + (1291 - (561 + 729));
											v81 = v69[v73];
											v3149 = 1 + 1;
										end
										if (v3149 == (27 - 14)) then
											v81 = v69[v73];
											v79[v81[2]] = v81[1162 - (104 + 1055)];
											v73 = v73 + (1674 - (308 + 1365));
											v81 = v69[v73];
											v3150 = v81[549 - (500 + 47)];
											v79[v3150] = v79[v3150](v13(v79, v3150 + 1, v81[4 - 1]));
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[1952 - (186 + 1764)]][v79[v81[3 + 0]]] = v79[v81[3 + 1]];
											v73 = v73 + (2 - 1);
											v3149 = 10 + 4;
										end
										if (v3149 == (6 + 6)) then
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[1176 - (1133 + 41)]] = v81[6 - 3];
											v73 = v73 + (1 - 0);
											v81 = v69[v73];
											v79[v81[1895 - (1786 + 107)]] = v79[v81[6 - 3]];
											v73 = v73 + (1530 - (344 + 1185));
											v81 = v69[v73];
											v79[v81[1 + 1]] = v81[3];
											v73 = v73 + 1;
											v3149 = 3 + 10;
										end
										if (v3149 == (715 - (72 + 623))) then
											v81 = v69[v73];
											v79[v81[5 - 3]] = v79[v81[3]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[2]] = v81[10 - 7];
											v73 = v73 + (1893 - (1093 + 799));
											v81 = v69[v73];
											v79[v81[1 + 1]] = v81[3 + 0];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v3149 = 80 - 59;
										end
										if (v3149 == 3) then
											v79[v81[2]] = v79[v81[1058 - (721 + 334)]];
											v73 = v73 + (1863 - (1322 + 540));
											v81 = v69[v73];
											v79[v81[2 + 0]] = v81[1375 - (575 + 797)];
											v73 = v73 + (1130 - (274 + 855));
											v81 = v69[v73];
											v79[v81[3 - 1]] = v81[1 + 2];
											v73 = v73 + (1 - 0);
											v81 = v69[v73];
											v3150 = v81[2];
											v3149 = 2 + 2;
										end
										if (v3149 == (12 + 11)) then
											v79[v3150] = v79[v3150](v13(v79, v3150 + (1810 - (986 + 823)), v81[2 + 1]));
											v73 = v73 + (1014 - (872 + 141));
											v81 = v69[v73];
											v79[v81[1 + 1]][v79[v81[10 - 7]]] = v79[v81[6 - 2]];
											v73 = v73 + (539 - (139 + 399));
											v81 = v69[v73];
											v79[v81[2 + 0]] = v81[3 + 0];
											v73 = v73 + (1703 - (1038 + 664));
											v81 = v69[v73];
											v79[v81[2 + 0]] = v79[v81[3 + 0]];
											v3149 = 24;
										end
										if (v3149 == (1 + 5)) then
											v73 = v73 + (1 - 0);
											v81 = v69[v73];
											v79[v81[2 - 0]][v79[v81[3 + 0]]] = v79[v81[2 + 2]];
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v79[v81[576 - (388 + 186)]] = v81[489 - (421 + 65)];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[3 - 1]] = v79[v81[1 + 2]];
											v73 = v73 + 1 + 0;
											v3149 = 1270 - (604 + 659);
										end
										if ((91 <= 3002) and ((1523 - (1267 + 237)) == v3149)) then
											v81 = v69[v73];
											v3150 = v81[183 - (112 + 69)];
											v79[v3150] = v79[v3150](v13(v79, v3150 + (1 - 0), v81[3]));
											v73 = v73 + (485 - (319 + 165));
											v81 = v69[v73];
											v79[v81[2]][v79[v81[2 + 1]]] = v79[v81[1357 - (634 + 719)]];
											v73 = v73 + (1040 - (248 + 791));
											v81 = v69[v73];
											v79[v81[1 + 1]] = v81[3 + 0];
											v73 = v73 + (1086 - (888 + 197));
											v3149 = 74 - 54;
										end
										if (v3149 == (14 - 7)) then
											v81 = v69[v73];
											v79[v81[7 - 5]] = v81[9 - 6];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[1 + 1]] = v81[3];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v3150 = v81[2];
											v79[v3150] = v79[v3150](v13(v79, v3150 + (3 - 2), v81[6 - 3]));
											v73 = v73 + 1;
											v3149 = 12 - 4;
										end
										if ((4147 >= 3308) and ((1981 - (1355 + 611)) == v3149)) then
											v79[v81[1 + 1]] = v81[1004 - (497 + 504)];
											v73 = v73 + (1 - 0);
											v81 = v69[v73];
											v3150 = v81[2];
											v79[v3150] = v79[v3150](v13(v79, v3150 + 1 + 0, v81[3]));
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[2 + 0]][v79[v81[9 - 6]]] = v79[v81[8 - 4]];
											v73 = v73 + (1258 - (1159 + 98));
											v81 = v69[v73];
											v3149 = 1459 - (418 + 1025);
										end
										if (v3149 == 2) then
											v3150 = v81[9 - 7];
											v79[v3150] = v79[v3150](v13(v79, v3150 + (2 - 1), v81[1796 - (297 + 1496)]));
											v73 = v73 + (1 - 0);
											v81 = v69[v73];
											v79[v81[945 - (547 + 396)]][v79[v81[6 - 3]]] = v79[v81[3 + 1]];
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v79[v81[1745 - (999 + 744)]] = v81[2 + 1];
											v73 = v73 + (501 - (324 + 176));
											v81 = v69[v73];
											v3149 = 3;
										end
										if ((2496 <= 3658) and (v3149 == (1526 - (1171 + 339)))) then
											v79[v81[949 - (492 + 455)]] = v81[1479 - (805 + 671)];
											v73 = v73 + (1314 - (265 + 1048));
											v81 = v69[v73];
											v79[v81[2]] = v79[v81[3]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[1578 - (252 + 1324)]] = v81[3 + 0];
											v73 = v73 + (1571 - (544 + 1026));
											v81 = v69[v73];
											v79[v81[2 + 0]] = v81[5 - 2];
											v3149 = 17;
										end
										if (v3149 == (679 - (217 + 445))) then
											v73 = v73 + 1;
											v81 = v69[v73];
											v3150 = v81[2 + 0];
											v79[v3150] = v79[v3150](v13(v79, v3150 + (941 - (492 + 448)), v81[1435 - (1152 + 280)]));
											v73 = v73 + (1 - 0);
											v81 = v69[v73];
											v79[v81[9 - 7]][v79[v81[3 + 0]]] = v79[v81[4]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[847 - (175 + 670)]] = v81[1 + 2];
											v3149 = 18;
										end
										if (v3149 == (1661 - (1411 + 242))) then
											v81 = v69[v73];
											v79[v81[2 + 0]][v79[v81[3]]] = v79[v81[4]];
											v73 = v73 + (694 - (678 + 15));
											v81 = v69[v73];
											v79[v81[2]] = v81[1 + 2];
											v73 = v73 + (811 - (593 + 217));
											v81 = v69[v73];
											v79[v81[5 - 3]] = v79[v81[3 + 0]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v3149 = 9;
										end
										if (v3149 == (0 - 0)) then
											v3150 = nil;
											v3150 = v81[492 - (112 + 378)];
											v79[v3150] = v79[v3150](v13(v79, v3150 + (1548 - (952 + 595)), v81[399 - (23 + 373)]));
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[2]][v79[v81[6 - 3]]] = v79[v81[10 - 6]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[1786 - (1102 + 682)]] = v81[1 + 2];
											v73 = v73 + 1 + 0;
											v3149 = 1384 - (118 + 1265);
										end
										if ((1108 - (725 + 374)) == v3149) then
											v79[v81[2 + 0]] = v81[3];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[2]] = v81[3 + 0];
											v73 = v73 + (1999 - (1142 + 856));
											v81 = v69[v73];
											v3150 = v81[2];
											v79[v3150] = v79[v3150](v13(v79, v3150 + 1 + 0, v81[3 - 0]));
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v3149 = 8 + 2;
										end
									end
								else
									local v3151 = v79[v81[648 - (104 + 540)]];
									if v3151 then
										v73 = v73 + 1;
									else
										local v8297 = 962 - (496 + 466);
										while true do
											if ((0 + 0) == v8297) then
												v79[v81[1 + 1]] = v3151;
												v73 = v81[4 - 1];
												break;
											end
										end
									end
								end
							elseif (v82 > (904 - (657 + 67))) then
								if (v81[9 - 7] < v79[v81[1750 - (127 + 1619)]]) then
									v73 = v81[3];
								else
									v73 = v73 + (3 - 2);
								end
							else
								local v3152 = 1190 - (1069 + 121);
								local v3153;
								local v3154;
								while true do
									if ((v3152 == (0 + 0)) or (4547 <= 3532)) then
										v3153 = nil;
										v3154 = nil;
										v79[v81[2]] = v81[3 + 0];
										v73 = v73 + 1;
										v81 = v69[v73];
										v3154 = v81[7 - 5];
										v3152 = 2 - 1;
									end
									if (v3152 == (1194 - (27 + 1163))) then
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v79[v81[1161 - (371 + 788)]][v79[v81[3 + 0]]] = v79[v81[8 - 4]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2 + 0]] = v81[11 - 8];
										v3152 = 2 + 3;
									end
									if (v3152 == (5 - 3)) then
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[431 - (139 + 290)]] = v81[1338 - (639 + 696)];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[6 - 3]][v79[v81[6 - 2]]];
										v3152 = 3 + 0;
									end
									if ((505 - (156 + 348)) == v3152) then
										v3153 = v79[v81[3]];
										v79[v3154 + (891 - (488 + 402))] = v3153;
										v79[v3154] = v3153[v79[v81[4]]];
										v73 = v73 + (203 - (186 + 16));
										v81 = v69[v73];
										v79[v81[325 - (119 + 204)]] = {};
										v3152 = 3 - 1;
									end
									if (v3152 == (4 - 1)) then
										v73 = v73 + (3 - 2);
										v81 = v69[v73];
										v79[v81[2]] = v81[2 + 1];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[2 + 0]] = v79[v81[3]][v79[v81[4]]];
										v3152 = 1763 - (1709 + 50);
									end
									if (v3152 == (1334 - (249 + 1080))) then
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[453 - (155 + 296)]] = v79[v81[3 + 0]][v79[v81[4 + 0]]];
										break;
									end
								end
							end
						elseif (v82 <= (387 - 203)) then
							if (v82 <= (301 - 119)) then
								local v427;
								local v428;
								local v429;
								local v430;
								v79[v81[2 + 0]] = v63[v81[9 - 6]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v79[v81[1 + 2]][v81[8 - 4]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								for v948 = v81[5 - 3], v81[3] do
									v79[v948] = nil;
								end
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[700 - (604 + 94)]] = v63[v81[1 + 2]];
								v73 = v73 + (1804 - (500 + 1303));
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[1523 - (916 + 604)]][v81[4]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v79[v81[11 - 8]][v81[4]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[3 + 0]][v81[3 + 1]];
								v73 = v73 + (1476 - (754 + 721));
								v81 = v69[v73];
								v79[v81[508 - (181 + 325)]] = v79[v81[4 - 1]][v81[1 + 3]];
								v73 = v73 + (1411 - (413 + 997));
								v81 = v69[v73];
								v79[v81[4 - 2]] = v64[v81[3 - 0]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v63[v81[3 + 0]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v430 = v81[1 + 1];
								v429 = v79[v81[9 - 6]];
								v79[v430 + 1] = v429;
								v79[v430] = v429[v81[9 - 5]];
								v73 = v73 + (1742 - (708 + 1033));
								v81 = v69[v73];
								v430 = v81[1 + 1];
								v428 = {v79[v430](v79[v430 + (1 - 0)])};
								v427 = 0 + 0;
								for v950 = v430, v81[9 - 5] do
									local v951 = 0 + 0;
									while true do
										if (v951 == (0 + 0)) then
											v427 = v427 + (1658 - (505 + 1152));
											v79[v950] = v428[v427];
											break;
										end
									end
								end
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v73 = v81[2 + 1];
							elseif (v82 == (119 + 64)) then
								local v3155;
								local v3156;
								v79[v81[2 + 0]] = v63[v81[3 - 0]];
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v3156 = v81[2];
								v3155 = v79[v81[5 - 2]];
								v79[v3156 + (1524 - (53 + 1470))] = v3155;
								v79[v3156] = v3155[v81[4]];
								v73 = v73 + (1005 - (482 + 522));
								v81 = v69[v73];
								v79[v81[648 - (496 + 150)]] = v63[v81[3 - 0]];
								v73 = v73 + (86 - (32 + 53));
								v81 = v69[v73];
								v79[v81[1812 - (956 + 854)]] = v79[v81[3]][v81[1 + 3]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v3156 = v81[1 + 1];
								v79[v3156] = v79[v3156](v13(v79, v3156 + (2 - 1), v81[3]));
								v73 = v73 + 1;
								v81 = v69[v73];
								if v79[v81[1895 - (1192 + 701)]] then
									v73 = v73 + (1622 - (326 + 1295));
								else
									v73 = v81[1815 - (1595 + 217)];
								end
							else
								local v3169 = 216 - (93 + 123);
								local v3170;
								while true do
									if ((v3169 == (1838 - (848 + 988))) or (4179 <= 1877)) then
										v81 = v69[v73];
										v3170 = v81[2];
										v79[v3170] = v79[v3170](v79[v3170 + 1]);
										v3169 = 1563 - (546 + 1014);
									end
									if (v3169 == (6 - 3)) then
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2]] = v63[v81[77 - (53 + 21)]];
										v3169 = 295 - (167 + 124);
									end
									if ((v3169 == (184 - (4 + 176))) or (772 > 3317)) then
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[5 - 3]] = v79[v81[9 - 6]][v81[3 + 1]];
										v3169 = 2 + 3;
									end
									if (v3169 == (0 + 0)) then
										v3170 = nil;
										v79[v81[2 + 0]] = v64[v81[5 - 2]];
										v73 = v73 + (120 - (93 + 26));
										v3169 = 1 + 0;
									end
									if ((v3169 == (6 - 1)) or (2759 > 3813)) then
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										if (v79[v81[2 + 0]] ~= v79[v81[1 + 3]]) then
											v73 = v73 + (1655 - (220 + 1434));
										else
											v73 = v81[9 - 6];
										end
										break;
									end
									if (v3169 == 1) then
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[3]];
										v73 = v73 + (1 - 0);
										v3169 = 6 - 4;
									end
								end
							end
						elseif (v82 <= (1788 - (906 + 696))) then
							if (v82 == (392 - 207)) then
								local v3171;
								local v3172;
								local v3173;
								v79[v81[1 + 1]][v81[3]] = v79[v81[683 - (178 + 501)]];
								v73 = v73 + (4 - 3);
								v81 = v69[v73];
								v79[v81[1 + 1]] = v64[v81[1030 - (444 + 583)]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[2 + 0]] = v63[v81[432 - (407 + 22)]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[3 - 1]] = v79[v81[1235 - (1139 + 93)]][v81[3 + 1]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v3173 = v81[2];
								v3172 = {v79[v3173](v79[v3173 + 1])};
								v3171 = 0 + 0;
								for v7816 = v3173, v81[4] do
									v3171 = v3171 + (12 - (4 + 7));
									v79[v7816] = v3172[v3171];
								end
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v73 = v81[516 - (8 + 505)];
							else
								local v3185 = 0 + 0;
								local v3186;
								while true do
									if (v3185 == 4) then
										v81 = v69[v73];
										v3186 = v81[2];
										v79[v3186] = v79[v3186](v79[v3186 + 1]);
										v3185 = 4 + 1;
									end
									if (v3185 == 2) then
										v81 = v69[v73];
										v79[v81[2]] = v63[v81[2 + 1]];
										v73 = v73 + 1 + 0;
										v3185 = 2 + 1;
									end
									if (v3185 == (940 - (662 + 273))) then
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2 + 0]] = v79[v81[10 - 7]];
										v3185 = 250 - (127 + 117);
									end
									if (v3185 == (214 - (105 + 102))) then
										v73 = v73 + 1;
										v81 = v69[v73];
										v73 = v81[1 + 2];
										break;
									end
									if ((278 <= 2119) and (v3185 == (2 - 1))) then
										v81 = v69[v73];
										v79[v81[1 + 1]] = v79[v81[14 - 11]][v81[13 - 9]];
										v73 = v73 + 1;
										v3185 = 748 - (588 + 158);
									end
									if ((v3185 == (1083 - (126 + 954))) or (2726 < 797)) then
										v81 = v69[v73];
										v79[v81[6 - 4]] = v79[v81[346 - (52 + 291)]][v81[282 - (76 + 202)]];
										v73 = v73 + 1 + 0;
										v3185 = 850 - (504 + 342);
									end
									if (v3185 == 0) then
										v3186 = nil;
										v79[v81[2 + 0]] = v64[v81[8 - 5]];
										v73 = v73 + 1;
										v3185 = 1;
									end
									if (v3185 == (4 + 2)) then
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[2 + 0]] = v81[483 - (387 + 93)];
										v3185 = 14 - 7;
									end
								end
							end
						elseif (v82 == (362 - 175)) then
							local v3187 = 0;
							local v3188;
							local v3189;
							while true do
								if (v3187 == (1 + 0)) then
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[3];
									v73 = v73 + (940 - (36 + 903));
									v81 = v69[v73];
									v3189 = v81[2 - 0];
									v3187 = 2;
								end
								if ((v3187 == (1 + 3)) or (2962 >= 3572)) then
									v73 = v73 + (263 - (220 + 42));
									v81 = v69[v73];
									v79[v81[2]] = v81[11 - 8];
									v73 = v73 + (1506 - (300 + 1205));
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[9 - 6]][v79[v81[926 - (728 + 194)]]];
									v3187 = 662 - (445 + 212);
								end
								if ((487 <= 4191) and (v3187 == (7 - 5))) then
									v3188 = v79[v81[3]];
									v79[v3189 + 1 + 0] = v3188;
									v79[v3189] = v3188[v79[v81[4 + 0]]];
									v73 = v73 + (1358 - (167 + 1190));
									v81 = v69[v73];
									v79[v81[646 - (315 + 329)]] = {};
									v3187 = 3 + 0;
								end
								if ((2 + 1) == v3187) then
									v73 = v73 + (651 - (545 + 105));
									v81 = v69[v73];
									v79[v81[1 + 1]] = v81[1 + 2];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[4 - 2]] = v79[v81[4 - 1]][v79[v81[8 - 4]]];
									v3187 = 1193 - (1044 + 145);
								end
								if ((12 - 7) == v3187) then
									v73 = v73 + (1251 - (122 + 1128));
									v81 = v69[v73];
									v79[v81[2]][v79[v81[3]]] = v79[v81[1819 - (371 + 1444)]];
									break;
								end
								if (v3187 == (16 - (14 + 2))) then
									v3188 = nil;
									v3189 = nil;
									v79[v81[2]] = v81[1 + 2];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[5 - 2]][v79[v81[5 - 1]]];
									v3187 = 1 + 0;
								end
							end
						else
							local v3190 = 0;
							local v3191;
							local v3192;
							while true do
								if ((0 - 0) == v3190) then
									v3191 = nil;
									v3192 = nil;
									v79[v81[6 - 4]] = {};
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v3190 = 2 - 1;
								end
								if (v3190 == 6) then
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[9 - 6]][v79[v81[4]]];
									break;
								end
								if (v3190 == (9 - 7)) then
									v81 = v69[v73];
									v79[v81[1 + 1]] = v81[1 + 2];
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v3192 = v81[2 - 0];
									v3190 = 152 - (50 + 99);
								end
								if ((v3190 == (443 - (123 + 316))) or (91 == 1337)) then
									v79[v81[3 - 1]] = {};
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1584 - (1507 + 75)]] = v81[3];
									v73 = v73 + (595 - (145 + 449));
									v3190 = 1116 - (241 + 870);
								end
								if (v3190 == (1 + 0)) then
									v79[v81[5 - 3]] = v81[11 - 8];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[4 - 2]] = v79[v81[3]][v79[v81[761 - (627 + 130)]]];
									v73 = v73 + (146 - (82 + 63));
									v3190 = 2;
								end
								if ((v3190 == (5 + 0)) or (4117 <= 3315)) then
									v81 = v69[v73];
									v79[v81[1286 - (386 + 898)]] = v79[v81[1 + 2]][v79[v81[4]]];
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[3];
									v3190 = 5 + 1;
								end
								if ((v3190 == 3) or (3516 <= 2129)) then
									v3191 = v79[v81[972 - (659 + 310)]];
									v79[v3192 + 1] = v3191;
									v79[v3192] = v3191[v79[v81[3 + 1]]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v3190 = 607 - (364 + 239);
								end
							end
						end
					elseif ((1693 > 807) and (v82 <= (101 + 100))) then
						if (v82 <= 194) then
							if (v82 <= (736 - 545)) then
								if ((1634 < 3140) and (v82 <= (328 - 139))) then
									local v453;
									v79[v81[2]] = v79[v81[10 - 7]][v81[197 - (30 + 163)]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[557 - (213 + 342)]] = v63[v81[8 - 5]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1420 - (843 + 575)]] = v79[v81[705 - (347 + 355)]][v81[10 - 6]];
									v73 = v73 + (468 - (386 + 81));
									v81 = v69[v73];
									v453 = v81[3 - 1];
									v79[v453] = v79[v453](v79[v453 + 1]);
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[3]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[3 + 0];
								elseif (v82 == 190) then
									local v3193 = v81[3 - 1];
									local v3194 = v79[v81[1660 - (610 + 1047)]];
									v79[v3193 + 1 + 0] = v3194;
									v79[v3193] = v3194[v79[v81[4]]];
								else
									local v3198;
									local v3199;
									v79[v81[2]] = v63[v81[566 - (304 + 259)]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[967 - (306 + 659)]] = v79[v81[1 + 2]][v81[1 + 3]];
									v73 = v73 + (1740 - (315 + 1424));
									v81 = v69[v73];
									v79[v81[2]] = v81[591 - (27 + 561)];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v3199 = v81[1929 - (1904 + 23)];
									v79[v3199] = v79[v3199](v13(v79, v3199 + 1 + 0, v81[1 + 2]));
									v73 = v73 + (1999 - (1852 + 146));
									v81 = v69[v73];
									v79[v81[5 - 3]] = v79[v81[10 - 7]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v3199 = v81[2 + 0];
									v3198 = v79[v81[189 - (18 + 168)]];
									v79[v3199 + 1 + 0] = v3198;
									v79[v3199] = v3198[v81[5 - 1]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[3 - 1]] = v63[v81[11 - 8]];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[640 - (399 + 239)]] = v79[v81[3]][v81[14 - 10]];
									v73 = v73 + (1409 - (779 + 629));
									v81 = v69[v73];
									v79[v81[2]] = v81[1 + 2];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v3199 = v81[1771 - (855 + 914)];
									v79[v3199] = v79[v3199](v13(v79, v3199 + (23 - (15 + 7)), v81[3 + 0]));
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1704 - (646 + 1056)]] = v79[v81[1 + 2]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[3 - 1]] = v81[1869 - (1443 + 423)];
								end
							elseif (v82 <= 192) then
								v79[v81[1 + 1]]();
							elseif (v82 == (421 - 228)) then
								local v3223;
								local v3224;
								v79[v81[2 + 0]] = v79[v81[3]][v79[v81[4]]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[4 - 2]] = v81[1509 - (271 + 1235)];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[6 - 4]] = v79[v81[9 - 6]][v79[v81[12 - 8]]];
								v73 = v73 + (1045 - (463 + 581));
								v81 = v69[v73];
								v79[v81[1 + 1]][v79[v81[3]]] = v79[v81[1179 - (599 + 576)]];
								v73 = v73 + (1513 - (316 + 1196));
								v81 = v69[v73];
								v79[v81[1305 - (970 + 333)]] = v81[3];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 + 0]] = v79[v81[964 - (538 + 423)]][v79[v81[1 + 3]]];
								v73 = v73 + (4 - 3);
								v81 = v69[v73];
								v79[v81[4 - 2]] = v81[1 + 2];
								v73 = v73 + (1355 - (1061 + 293));
								v81 = v69[v73];
								v79[v81[531 - (153 + 376)]] = v79[v81[2 + 1]][v79[v81[709 - (173 + 532)]]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[5 - 3]][v79[v81[7 - 4]]] = v79[v81[4]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v3224 = v81[4 - 2];
								v79[v3224] = v79[v3224](v13(v79, v3224 + (3 - 2), v81[2 + 1]));
								v73 = v73 + (1537 - (561 + 975));
								v81 = v69[v73];
								v79[v81[2 + 0]][v79[v81[1 + 2]]] = v79[v81[4 + 0]];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[3];
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v79[v81[2 + 0]] = v79[v81[3]][v79[v81[8 - 4]]];
								v73 = v73 + (124 - (115 + 8));
								v81 = v69[v73];
								v79[v81[1558 - (1476 + 80)]] = v81[3 - 0];
								v73 = v73 + (843 - (648 + 194));
								v81 = v69[v73];
								v79[v81[257 - (111 + 144)]] = v79[v81[3]][v79[v81[3 + 1]]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[2 - 0]] = v81[3];
								v73 = v73 + 1;
								v81 = v69[v73];
								v3224 = v81[319 - (275 + 42)];
								v3223 = v79[v81[3]];
								v79[v3224 + 1] = v3223;
								v79[v3224] = v3223[v79[v81[4]]];
								v73 = v73 + (183 - (104 + 78));
								v81 = v69[v73];
								v79[v81[6 - 4]] = {};
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[2]] = v81[1939 - (813 + 1123)];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v79[v81[9 - 6]][v79[v81[3 + 1]]];
								v73 = v73 + (1794 - (144 + 1649));
								v81 = v69[v73];
								v79[v81[553 - (125 + 426)]] = v81[6 - 3];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[84 - (51 + 31)]] = v79[v81[10 - 7]][v79[v81[4 + 0]]];
								v73 = v73 + (290 - (174 + 115));
								v81 = v69[v73];
								v79[v81[1 + 1]][v79[v81[1701 - (941 + 757)]]] = v79[v81[1166 - (696 + 466)]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[3 - 1]] = v81[4 - 1];
								v73 = v73 + (1352 - (165 + 1186));
								v81 = v69[v73];
								v79[v81[2 + 0]] = v79[v81[3]][v79[v81[19 - 15]]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v81[3 + 0];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 + 0]] = v79[v81[1 + 2]][v79[v81[4 + 0]]];
								v73 = v73 + (1038 - (853 + 184));
								v81 = v69[v73];
								v79[v81[2]][v79[v81[2 + 1]]] = v79[v81[38 - (14 + 20)]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v3224 = v81[768 - (35 + 731)];
								v79[v3224] = v79[v3224](v13(v79, v3224 + 1 + 0, v81[1 + 2]));
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 + 0]][v79[v81[3]]] = v79[v81[4]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v81[3];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[3 - 1]] = v79[v81[5 - 2]][v79[v81[4 + 0]]];
								v73 = v73 + (148 - (26 + 121));
								v81 = v69[v73];
								v79[v81[113 - (95 + 16)]] = v81[3];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[6 - 4]] = v79[v81[3]][v79[v81[5 - 1]]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[553 - (423 + 128)]] = v81[3];
								v73 = v73 + 1;
								v81 = v69[v73];
								v3224 = v81[1576 - (1331 + 243)];
								v3223 = v79[v81[7 - 4]];
								v79[v3224 + 1] = v3223;
								v79[v3224] = v3223[v79[v81[9 - 5]]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1636 - (284 + 1350)]] = {};
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[31 - (10 + 18)];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[1309 - (73 + 1234)]] = v79[v81[740 - (503 + 234)]][v79[v81[1905 - (425 + 1476)]]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[3 - 1]] = v81[1059 - (856 + 200)];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v79[v81[3]][v79[v81[4]]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 + 0]][v79[v81[3 + 0]]] = v79[v81[1 + 3]];
								v73 = v73 + (1612 - (734 + 877));
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[1484 - (514 + 967)];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[650 - (325 + 322)]][v79[v81[4 - 0]]];
								v73 = v73 + (1831 - (1668 + 162));
								v81 = v69[v73];
								v79[v81[2]] = v81[8 - 5];
								v73 = v73 + (233 - (43 + 189));
								v81 = v69[v73];
								v79[v81[3 - 1]] = v79[v81[1661 - (694 + 964)]][v79[v81[4]]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[2 - 0]][v79[v81[4 - 1]]] = v79[v81[4]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v3224 = v81[339 - (57 + 280)];
								v79[v3224] = v79[v3224](v13(v79, v3224 + (1955 - (414 + 1540)), v81[903 - (561 + 339)]));
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 + 0]][v79[v81[1553 - (1342 + 208)]]] = v79[v81[6 - 2]];
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[3];
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v79[v81[1848 - (1139 + 707)]] = v79[v81[2 + 1]][v79[v81[1 + 3]]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[542 - (335 + 205)]] = v81[2 + 1];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[3 - 1]] = v79[v81[3]][v79[v81[11 - 7]]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[7 - 4];
								v73 = v73 + 1;
								v81 = v69[v73];
								v3224 = v81[1064 - (622 + 440)];
								v3223 = v79[v81[5 - 2]];
								v79[v3224 + (753 - (672 + 80))] = v3223;
								v79[v3224] = v3223[v79[v81[4]]];
								v73 = v73 + (1127 - (601 + 525));
								v81 = v69[v73];
								v79[v81[1820 - (1515 + 303)]] = {};
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[3 - 0];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[3 + 0]][v79[v81[966 - (144 + 818)]]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[29 - (5 + 22)]] = v81[864 - (446 + 415)];
								v73 = v73 + (214 - (204 + 9));
								v81 = v69[v73];
								v79[v81[1260 - (479 + 779)]] = v79[v81[6 - 3]][v79[v81[119 - (61 + 54)]]];
								v73 = v73 + (1806 - (1235 + 570));
								v81 = v69[v73];
								v79[v81[970 - (217 + 751)]][v79[v81[3 + 0]]] = v79[v81[4]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v3224 = v81[112 - (94 + 16)];
								v79[v3224] = v79[v3224](v13(v79, v3224 + 1, v81[10 - 7]));
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 + 0]][v79[v81[3]]] = v79[v81[1549 - (1188 + 357)]];
								v73 = v73 + (810 - (580 + 229));
								v81 = v69[v73];
								v79[v81[512 - (82 + 428)]] = v81[9 - 6];
								v73 = v73 + (497 - (259 + 237));
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[11 - 8]][v79[v81[4]]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1358 - (215 + 1141)]] = v81[3];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[672 - (405 + 265)]] = v79[v81[3]][v79[v81[1987 - (1136 + 847)]]];
								v73 = v73 + (1735 - (230 + 1504));
								v81 = v69[v73];
								v79[v81[6 - 4]] = v81[3];
								v73 = v73 + (1883 - (913 + 969));
								v81 = v69[v73];
								v3224 = v81[3 - 1];
								v3223 = v79[v81[2 + 1]];
								v79[v3224 + 1] = v3223;
								v79[v3224] = v3223[v79[v81[1397 - (1277 + 116)]]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1189 - (1178 + 9)]] = {};
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 - 0]] = v81[1843 - (1018 + 822)];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[2 + 0]] = v79[v81[1 + 2]][v79[v81[3 + 1]]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v81[384 - (111 + 270)];
								v73 = v73 + (1197 - (1082 + 114));
								v81 = v69[v73];
								v79[v81[2 + 0]] = v79[v81[8 - 5]][v79[v81[4]]];
								v73 = v73 + (496 - (257 + 238));
								v81 = v69[v73];
								v79[v81[1856 - (831 + 1023)]][v79[v81[124 - (6 + 115)]]] = v79[v81[6 - 2]];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v3224 = v81[7 - 5];
								v79[v3224] = v79[v3224](v13(v79, v3224 + 1 + 0, v81[2 + 1]));
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[4 - 2]][v79[v81[7 - 4]]] = v79[v81[3 + 1]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1202 - (608 + 592)]] = v81[3];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[2 + 0]] = v79[v81[1944 - (24 + 1917)]][v79[v81[9 - 5]]];
								v73 = v73 + (1526 - (521 + 1004));
								v81 = v69[v73];
								v79[v81[2 - 0]] = v81[3 + 0];
							else
								v79[v81[1 + 1]] = v79[v81[297 - (87 + 207)]][v81[1 + 3]];
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v79[v81[1597 - (625 + 970)]][v81[2 + 1]] = v81[353 - (122 + 227)];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v63[v81[1118 - (706 + 409)]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]][v81[7 - 4]] = v81[4];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[4 - 2]] = v63[v81[449 - (433 + 13)]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[983 - (824 + 157)]] = v79[v81[363 - (120 + 240)]][v81[1 + 3]];
								v73 = v73 + 1;
								v81 = v69[v73];
								if not v79[v81[2 + 0]] then
									v73 = v73 + 1;
								else
									v73 = v81[1 + 2];
								end
							end
						elseif (v82 <= (1229 - (291 + 741))) then
							if ((2273 >= 2111) and (v82 <= (63 + 132))) then
								local v466;
								local v467, v468;
								local v469;
								local v470;
								v470 = v81[2];
								v469 = v79[v81[3]];
								v79[v470 + 1 + 0] = v469;
								v79[v470] = v469[v81[1 + 3]];
								v73 = v73 + (1493 - (810 + 682));
								v81 = v69[v73];
								v79[v81[2]] = v63[v81[496 - (16 + 477)]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[1369 - (658 + 708)]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 - 0]] = v63[v81[3 + 0]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[649 - (483 + 164)]] = v64[v81[7 - 4]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v470 = v81[3 - 1];
								v467, v468 = v72(v79[v470]());
								v74 = (v468 + v470) - (549 - (151 + 397));
								v466 = 0 - 0;
								for v952 = v470, v74 do
									local v953 = 1223 - (1005 + 218);
									while true do
										if ((v953 == 0) or (3006 < 2028)) then
											v466 = v466 + (656 - (294 + 361));
											v79[v952] = v467[v466];
											break;
										end
									end
								end
								v73 = v73 + 1;
								v81 = v69[v73];
								v470 = v81[2];
								v79[v470](v13(v79, v470 + (1061 - (150 + 910)), v74));
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v73 = v81[3 + 0];
							elseif (v82 > (7 + 189)) then
								local v3348 = 0;
								local v3349;
								local v3350;
								while true do
									if ((4647 >= 2008) and (v3348 == 4)) then
										v73 = v73 + (4 - 3);
										v81 = v69[v73];
										v79[v81[2 + 0]][v81[3]] = v81[4];
										v73 = v73 + (3 - 2);
										v3348 = 1 + 4;
									end
									if ((v3348 == 1) or (1850 > 2844)) then
										v81 = v69[v73];
										v3350 = v81[2 + 0];
										v3349 = v79[v81[1803 - (756 + 1044)]];
										v79[v3350 + (831 - (738 + 92))] = v3349;
										v3348 = 5 - 3;
									end
									if (v3348 == (1417 - (569 + 843))) then
										v81 = v69[v73];
										v73 = v81[1431 - (262 + 1166)];
										break;
									end
									if ((v3348 == (653 - (410 + 241))) or (1834 > 3749)) then
										v79[v3350] = v3349[v81[1188 - (388 + 796)]];
										v73 = v73 + (1009 - (534 + 474));
										v81 = v69[v73];
										v3350 = v81[1 + 1];
										v3348 = 3;
									end
									if ((v3348 == (1099 - (642 + 457))) or (1173 < 384)) then
										v3349 = nil;
										v3350 = nil;
										v79[v81[3 - 1]] = v79[v81[1479 - (384 + 1092)]][v81[1733 - (1190 + 539)]];
										v73 = v73 + (754 - (91 + 662));
										v3348 = 1 + 0;
									end
									if ((v3348 == 3) or (767 >= 1845)) then
										v79[v3350](v79[v3350 + (3 - 2)]);
										v73 = v73 + (1048 - (116 + 931));
										v81 = v69[v73];
										v79[v81[2 + 0]] = v63[v81[1 + 2]];
										v3348 = 1 + 3;
									end
								end
							else
								local v3351;
								v79[v81[2]] = v81[11 - 8];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v3351 = v81[179 - (18 + 159)];
								v79[v3351] = v79[v3351](v13(v79, v3351 + (2 - 1), v81[3]));
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[4 - 2]][v81[3 - 0]] = v79[v81[9 - 5]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[321 - (111 + 208)]] = v79[v81[3 + 0]];
								v73 = v73 + (593 - (364 + 228));
								v81 = v69[v73];
								v79[v81[4 - 2]] = v81[3];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[3 + 0];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v3351 = v81[2 - 0];
								v79[v3351] = v79[v3351](v13(v79, v3351 + 1, v81[3 + 0]));
								v73 = v73 + (378 - (121 + 256));
								v81 = v69[v73];
								v79[v81[8 - 6]][v81[7 - 4]] = v79[v81[4]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 + 0]] = v79[v81[2 + 1]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1760 - (549 + 1209)]] = v81[3 - 0];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1383 - (643 + 738)]] = v81[3];
								v73 = v73 + 1;
								v81 = v69[v73];
								v3351 = v81[2 + 0];
								v79[v3351] = v79[v3351](v13(v79, v3351 + 1, v81[6 - 3]));
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[4 - 2]][v81[1 + 2]] = v79[v81[4]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[2 - 0]] = v79[v81[1110 - (1038 + 69)]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[338 - (157 + 179)]] = v81[3];
								v73 = v73 + (1131 - (204 + 926));
								v81 = v69[v73];
								v79[v81[1959 - (184 + 1773)]] = v81[3];
								v73 = v73 + 1;
								v81 = v69[v73];
								v3351 = v81[721 - (111 + 608)];
								v79[v3351] = v79[v3351](v13(v79, v3351 + 1 + 0, v81[3]));
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v79[v81[2 + 0]][v81[2 + 1]] = v79[v81[1 + 3]];
								v73 = v73 + (4 - 3);
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[6 - 3]];
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[1671 - (1328 + 340)];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[3];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v3351 = v81[1 + 1];
								v79[v3351] = v79[v3351](v13(v79, v3351 + (1015 - (782 + 232)), v81[3]));
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1305 - (397 + 906)]][v81[603 - (360 + 240)]] = v79[v81[4 - 0]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[3 + 0]];
								v73 = v73 + (23 - (13 + 9));
								v81 = v69[v73];
								v79[v81[2 - 0]] = v81[6 - 3];
								v73 = v73 + (1575 - (272 + 1302));
								v81 = v69[v73];
								v79[v81[8 - 6]] = v81[8 - 5];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v3351 = v81[1 + 1];
								v79[v3351] = v79[v3351](v13(v79, v3351 + 1, v81[5 - 2]));
								v73 = v73 + (22 - (8 + 13));
								v81 = v69[v73];
								v79[v81[2 + 0]][v81[9 - 6]] = v79[v81[3 + 1]];
								v73 = v73 + (89 - (28 + 60));
								v81 = v69[v73];
								v79[v81[2 + 0]] = v79[v81[1 + 2]];
								v73 = v73 + (954 - (133 + 820));
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[3];
								v73 = v73 + (98 - (9 + 88));
								v81 = v69[v73];
								v79[v81[252 - (98 + 152)]] = v81[3 + 0];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v3351 = v81[8 - 6];
								v79[v3351] = v79[v3351](v13(v79, v3351 + 1, v81[5 - 2]));
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 - 0]][v81[291 - (44 + 244)]] = v79[v81[4]];
								v73 = v73 + (1390 - (207 + 1182));
								v81 = v69[v73];
								v79[v81[2 + 0]] = v79[v81[919 - (904 + 12)]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[2]] = v81[2 + 1];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[7 - 5]] = v81[256 - (241 + 12)];
								v73 = v73 + 1;
								v81 = v69[v73];
								v3351 = v81[2 + 0];
								v79[v3351] = v79[v3351](v13(v79, v3351 + (1 - 0), v81[3]));
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1256 - (1187 + 67)]][v81[275 - (56 + 216)]] = v79[v81[6 - 2]];
								v73 = v73 + (1480 - (1194 + 285));
								v81 = v69[v73];
								v79[v81[1702 - (401 + 1299)]] = v79[v81[1558 - (1522 + 33)]];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[2 - 0]] = v81[1825 - (1108 + 714)];
								v73 = v73 + (675 - (357 + 317));
								v81 = v69[v73];
								v79[v81[2]] = v81[3 + 0];
								v73 = v73 + 1;
								v81 = v69[v73];
								v3351 = v81[1 + 1];
								v79[v3351] = v79[v3351](v13(v79, v3351 + (468 - (73 + 394)), v81[9 - 6]));
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 + 0]][v81[254 - (247 + 4)]] = v79[v81[632 - (435 + 193)]];
								v73 = v73 + (474 - (428 + 45));
								v81 = v69[v73];
								v79[v81[1222 - (158 + 1062)]] = v79[v81[1380 - (858 + 519)]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[1459 - (711 + 746)]] = v81[1 + 2];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[679 - (229 + 448)]] = v81[744 - (357 + 384)];
								v73 = v73 + 1;
								v81 = v69[v73];
								v3351 = v81[2];
								v79[v3351] = v79[v3351](v13(v79, v3351 + 1 + 0, v81[1583 - (984 + 596)]));
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[3 - 1]][v81[924 - (465 + 456)]] = v79[v81[4]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[5 - 3]] = v79[v81[2 + 1]];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[10 - 7];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[1 + 2];
								v73 = v73 + (217 - (172 + 44));
								v81 = v69[v73];
								v3351 = v81[2];
								v79[v3351] = v79[v3351](v13(v79, v3351 + 1 + 0, v81[3 + 0]));
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[381 - (170 + 209)]][v81[6 - 3]] = v79[v81[4]];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[2 + 1]];
								v73 = v73 + (957 - (244 + 712));
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[3 + 0];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[5 - 3]] = v81[3];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v3351 = v81[1 + 1];
								v79[v3351] = v79[v3351](v13(v79, v3351 + 1 + 0, v81[11 - 8]));
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]][v81[1249 - (769 + 477)]] = v79[v81[4 - 0]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2 + 0]] = v79[v81[3]];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[3 - 1]] = v81[3 + 0];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[4 - 2]] = v81[5 - 2];
								v73 = v73 + 1;
								v81 = v69[v73];
								v3351 = v81[6 - 4];
								v79[v3351] = v79[v3351](v13(v79, v3351 + 1 + 0, v81[3]));
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v79[v81[3 - 1]][v81[641 - (526 + 112)]] = v79[v81[7 - 3]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[660 - (318 + 340)]] = v79[v81[626 - (274 + 349)]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[2 - 0]] = v81[7 - 4];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 - 0]] = v81[1455 - (1429 + 23)];
								v73 = v73 + 1;
								v81 = v69[v73];
								v3351 = v81[7 - 5];
								v79[v3351] = v79[v3351](v13(v79, v3351 + 1 + 0, v81[3 + 0]));
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[1 + 1]][v81[3]] = v79[v81[4]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[1509 - (1140 + 366)]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[1 + 2];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[2]] = v81[1 + 2];
								v73 = v73 + 1;
								v81 = v69[v73];
								v3351 = v81[1 + 1];
								v79[v3351] = v79[v3351](v13(v79, v3351 + 1, v81[388 - (271 + 114)]));
								v73 = v73 + (4 - 3);
								v81 = v69[v73];
								v79[v81[2]][v81[3]] = v79[v81[863 - (240 + 619)]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2 + 0]] = v79[v81[2 + 1]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[2]] = v81[3];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]] = v81[3];
								v73 = v73 + 1;
								v81 = v69[v73];
								v3351 = v81[859 - (509 + 348)];
								v79[v3351] = v79[v3351](v13(v79, v3351 + (2 - 1), v81[3]));
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1380 - (1014 + 364)]][v81[7 - 4]] = v79[v81[5 - 1]];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[5 - 2]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[3 + 0];
							end
						elseif (v82 <= (607 - 408)) then
							if (v82 > 198) then
								local v3438 = 0;
								while true do
									if ((1726 - (1565 + 159)) == v3438) then
										v81 = v69[v73];
										v79[v81[2 + 0]] = v79[v81[6 - 3]][v81[2 + 2]];
										v73 = v73 + (3 - 2);
										v81 = v69[v73];
										v3438 = 4 - 1;
									end
									if (v3438 == (1864 - (1445 + 418))) then
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[6 - 4]] = v79[v81[3 + 0]] - v79[v81[4]];
										v73 = v73 + (1414 - (26 + 1387));
										v3438 = 2 + 0;
									end
									if (v3438 == 0) then
										v79[v81[1 + 1]] = v79[v81[3 + 0]][v81[4]];
										v73 = v73 + (804 - (355 + 448));
										v81 = v69[v73];
										v79[v81[263 - (246 + 15)]] = v79[v81[1 + 2]][v81[2 + 2]];
										v3438 = 1 + 0;
									end
									if (v3438 == 3) then
										v79[v81[1 + 1]] = v81[1 + 2];
										v73 = v73 + (1120 - (391 + 728));
										v81 = v69[v73];
										v73 = v81[1098 - (594 + 501)];
										break;
									end
								end
							else
								local v3439;
								local v3440, v3441;
								local v3442;
								local v3443;
								v3443 = v81[2 + 0];
								v79[v3443] = v79[v3443](v13(v79, v3443 + (1138 - (730 + 407)), v81[2 + 1]));
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[4 - 2]][v79[v81[6 - 3]]] = v79[v81[3 + 1]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1903 - (438 + 1463)]] = v81[1 + 2];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1619 - (900 + 717)]] = v79[v81[1139 - (820 + 316)]];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[1800 - (719 + 1079)]] = v81[6 - 3];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[2]] = v81[3];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v3443 = v81[1 + 1];
								v79[v3443] = v79[v3443](v13(v79, v3443 + (1 - 0), v81[206 - (148 + 55)]));
								v73 = v73 + (1454 - (914 + 539));
								v81 = v69[v73];
								v79[v81[2 + 0]][v79[v81[563 - (253 + 307)]]] = v79[v81[1070 - (926 + 140)]];
								v73 = v73 + (1059 - (331 + 727));
								v81 = v69[v73];
								v79[v81[1384 - (1014 + 368)]] = v81[1580 - (1035 + 542)];
								v73 = v73 + (79 - (44 + 34));
								v81 = v69[v73];
								v79[v81[3 - 1]] = v79[v81[1 + 2]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[6 - 4]] = v81[5 - 2];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[670 - (355 + 313)]] = v81[2 + 1];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v3443 = v81[3 - 1];
								v79[v3443] = v79[v3443](v13(v79, v3443 + 1, v81[3 + 0]));
								v73 = v73 + (1866 - (762 + 1103));
								v81 = v69[v73];
								v79[v81[1 + 1]][v79[v81[1 + 2]]] = v79[v81[2 + 2]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1569 - (1491 + 76)]] = v81[3];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[1 + 2]];
								v73 = v73 + (763 - (94 + 668));
								v81 = v69[v73];
								v79[v81[2]] = v81[1412 - (36 + 1373)];
								v73 = v73 + (1102 - (58 + 1043));
								v81 = v69[v73];
								v79[v81[2]] = v81[13 - 10];
								v73 = v73 + 1;
								v81 = v69[v73];
								v3443 = v81[2];
								v79[v3443] = v79[v3443](v13(v79, v3443 + (1 - 0), v81[7 - 4]));
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[2]][v79[v81[11 - 8]]] = v79[v81[232 - (35 + 193)]];
								v73 = v73 + (4 - 3);
								v81 = v69[v73];
								v79[v81[654 - (242 + 410)]] = v81[3];
								v73 = v73 + (1496 - (1285 + 210));
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[3]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1741 - (1179 + 560)]] = v81[1 + 2];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[6 - 4]] = v81[5 - 2];
								v73 = v73 + 1;
								v81 = v69[v73];
								v3443 = v81[1218 - (262 + 954)];
								v79[v3443] = v79[v3443](v13(v79, v3443 + 1, v81[11 - 8]));
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[5 - 3]][v79[v81[3 + 0]]] = v79[v81[13 - 9]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[1 + 2];
								v73 = v73 + (1843 - (1696 + 146));
								v81 = v69[v73];
								v79[v81[1908 - (1835 + 71)]] = v79[v81[637 - (58 + 576)]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[6 - 3];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[82 - (27 + 53)]] = v81[1732 - (22 + 1707)];
								v73 = v73 + 1;
								v81 = v69[v73];
								v3443 = v81[2 - 0];
								v79[v3443] = v79[v3443](v13(v79, v3443 + (891 - (627 + 263)), v81[3]));
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v79[v81[2 - 0]][v79[v81[7 - 4]]] = v79[v81[5 - 1]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1188 - (255 + 931)]] = v81[8 - 5];
								v73 = v73 + (1389 - (507 + 881));
								v81 = v69[v73];
								v79[v81[2 - 0]] = v79[v81[3]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]] = v81[5 - 2];
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v79[v81[1605 - (475 + 1128)]] = v81[6 - 3];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v3443 = v81[6 - 4];
								v79[v3443] = v79[v3443](v13(v79, v3443 + 1, v81[2 + 1]));
								v73 = v73 + (358 - (110 + 247));
								v81 = v69[v73];
								v79[v81[1248 - (1109 + 137)]][v79[v81[14 - 11]]] = v79[v81[3 + 1]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[5 - 3]] = v81[1 + 2];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v79[v81[3]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[5 - 3]] = v81[2 + 1];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v81[3 + 0];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v3443 = v81[7 - 5];
								v79[v3443] = v79[v3443](v13(v79, v3443 + 1, v81[3]));
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2 + 0]][v79[v81[3 + 0]]] = v79[v81[15 - 11]];
								v73 = v73 + (206 - (192 + 13));
								v81 = v69[v73];
								v79[v81[2]] = v64[v81[760 - (585 + 172)]];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[798 - (76 + 720)]] = v64[v81[3]];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[134 - (45 + 87)]] = v81[4 - 1];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v3443 = v81[2 + 0];
								v3442 = v79[v81[10 - 7]];
								v79[v3443 + 1] = v3442;
								v79[v3443] = v3442[v79[v81[4 + 0]]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1285 - (61 + 1222)]] = v81[1506 - (628 + 875)];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v3443 = v81[3 - 1];
								v3440, v3441 = v72(v79[v3443](v13(v79, v3443 + (2 - 1), v81[3])));
								v74 = (v3441 + v3443) - (1923 - (590 + 1332));
								v3439 = 0;
								for v7819 = v3443, v74 do
									local v7820 = 0;
									while true do
										if (v7820 == (0 - 0)) then
											v3439 = v3439 + (3 - 2);
											v79[v7819] = v3440[v3439];
											break;
										end
									end
								end
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v3443 = v81[2];
								v79[v3443] = v79[v3443](v13(v79, v3443 + 1, v74));
								v73 = v73 + 1;
								v81 = v69[v73];
								v3443 = v81[1628 - (173 + 1453)];
								v79[v3443] = v79[v3443]();
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[850 - (237 + 611)]] = v64[v81[2 + 1]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[3];
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v79[v81[1 + 1]] = v79[v81[6 - 3]][v79[v81[4]]];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[377 - (129 + 246)]] = v79[v81[7 - 4]][v79[v81[1096 - (83 + 1009)]]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[875 - (506 + 367)]] = v81[14 - 11];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[360 - (72 + 286)]] = v79[v81[3 + 0]][v79[v81[138 - (107 + 27)]]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v64[v81[4 - 1]];
								v73 = v73 + (4 - 3);
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[5 - 2];
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v79[v81[397 - (304 + 91)]] = v79[v81[3 + 0]][v79[v81[15 - 11]]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 - 0]] = v81[1563 - (648 + 912)];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[5 - 3]] = v79[v81[3]][v79[v81[449 - (206 + 239)]]];
								v73 = v73 + (1421 - (956 + 464));
								v81 = v69[v73];
								v79[v81[270 - (159 + 109)]] = v64[v81[3 + 0]];
								v73 = v73 + (680 - (239 + 440));
								v81 = v69[v73];
								v79[v81[5 - 3]] = v81[1 + 2];
								v73 = v73 + (1729 - (1664 + 64));
								v81 = v69[v73];
								v3443 = v81[2 + 0];
								v3442 = v79[v81[2 + 1]];
								v79[v3443 + (2 - 1)] = v3442;
								v79[v3443] = v3442[v79[v81[4 + 0]]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]] = v81[1 + 2];
								v73 = v73 + (1515 - (1421 + 93));
								v81 = v69[v73];
								v79[v81[7 - 5]] = v79[v81[1151 - (1049 + 99)]][v79[v81[4 + 0]]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v3443 = v81[1 + 1];
								v79[v3443] = v79[v3443](v13(v79, v3443 + (1249 - (871 + 377)), v81[2 + 1]));
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1779 - (1238 + 539)]] = v64[v81[575 - (206 + 366)]];
								v73 = v73 + (527 - (489 + 37));
								v81 = v69[v73];
								v79[v81[4 - 2]] = v81[1 + 2];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v3443 = v81[1 + 1];
								v3442 = v79[v81[2 + 1]];
								v79[v3443 + (1 - 0)] = v3442;
								v79[v3443] = v3442[v79[v81[14 - 10]]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v81[1 + 2];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[1 + 1]] = v79[v81[1290 - (254 + 1033)]][v79[v81[4 + 0]]];
								v73 = v73 + (1763 - (1099 + 663));
								v81 = v69[v73];
								v3443 = v81[2];
								v79[v3443] = v79[v3443](v13(v79, v3443 + (808 - (504 + 303)), v81[3 + 0]));
								v73 = v73 + (4 - 3);
								v81 = v69[v73];
								v79[v81[2]] = v64[v81[6 - 3]];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[241 - (155 + 84)]] = v81[10 - 7];
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v3443 = v81[2 + 0];
								v3442 = v79[v81[3]];
								v79[v3443 + (1426 - (557 + 868))] = v3442;
								v79[v3443] = v3442[v79[v81[611 - (33 + 574)]]];
								v73 = v73 + (1566 - (839 + 726));
								v81 = v69[v73];
								v79[v81[3 - 1]] = v81[9 - 6];
								v73 = v73 + (332 - (124 + 207));
								v81 = v69[v73];
								v79[v81[2 - 0]] = v79[v81[11 - 8]][v79[v81[5 - 1]]];
							end
						elseif ((v82 == (696 - 496)) or (1929 > 4425)) then
							local v3547 = 0;
							while true do
								if ((3894 == 3894) and (v3547 == (14 - 7))) then
									v79[v81[2]] = v79[v81[3]][v79[v81[1 + 3]]];
									break;
								end
								if ((v3547 == (2 + 1)) or (1155 >= 1174)) then
									v79[v81[2 + 0]] = v79[v81[3]][v79[v81[3 + 1]]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v3547 = 4 + 0;
								end
								if (v3547 == 1) then
									v79[v81[2]][v79[v81[3 + 0]]] = v79[v81[4]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v3547 = 4 - 2;
								end
								if (v3547 == (1 + 4)) then
									v79[v81[2 - 0]][v79[v81[3]]] = v79[v81[3 + 1]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v3547 = 12 - 6;
								end
								if (v3547 == (0 - 0)) then
									v79[v81[1012 - (15 + 995)]] = v81[6 - 3];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v3547 = 1;
								end
								if (v3547 == (1 + 1)) then
									v79[v81[1 + 1]] = v81[40 - (34 + 3)];
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v3547 = 1 + 2;
								end
								if ((v3547 == (21 - 15)) or (304 >= 918)) then
									v79[v81[623 - (477 + 144)]] = v81[973 - (797 + 173)];
									v73 = v73 + (1262 - (161 + 1100));
									v81 = v69[v73];
									v3547 = 1343 - (1150 + 186);
								end
								if ((v3547 == (4 + 0)) or (1621 <= 1270)) then
									v79[v81[2 + 0]] = v81[32 - (12 + 17)];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v3547 = 2 + 3;
								end
							end
						else
							local v3548;
							local v3549;
							v79[v81[283 - (68 + 213)]] = v64[v81[7 - 4]];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[1 + 1]] = v63[v81[4 - 1]];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[1384 - (349 + 1033)]] = v79[v81[357 - (68 + 286)]][v81[1 + 3]];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[3 - 1]] = v79[v81[6 - 3]][v79[v81[3 + 1]]];
							v73 = v73 + (3 - 2);
							v81 = v69[v73];
							v79[v81[5 - 3]] = v79[v81[4 - 1]][v81[10 - 6]];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v3549 = v81[1199 - (1064 + 133)];
							v3548 = v79[v81[10 - 7]];
							v79[v3549 + 1] = v3548;
							v79[v3549] = v3548[v81[10 - 6]];
						end
					elseif (v82 <= 208) then
						if (v82 <= (57 + 147)) then
							if (v82 <= (167 + 35)) then
								local v486 = 0 + 0;
								local v487;
								local v488;
								local v489;
								local v490;
								while true do
									if (v486 == (5 - 3)) then
										v79[v81[1635 - (670 + 963)]] = v79[v81[3]][v81[4]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v486 = 1 + 2;
									end
									if ((v486 == (1107 - (1034 + 65))) or (2653 == 4819)) then
										v73 = v73 + (50 - (5 + 44));
										v81 = v69[v73];
										v79[v81[1 + 1]] = v81[3];
										break;
									end
									if ((163 <= 3866) and (v486 == (48 - (25 + 20)))) then
										v79[v81[2 - 0]] = v64[v81[1978 - (1535 + 440)]];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v486 = 623 - (477 + 142);
									end
									if (v486 == (1348 - (1324 + 20))) then
										v79[v81[2 + 0]] = v79[v81[3]];
										v73 = v73 + (3 - 2);
										v81 = v69[v73];
										v486 = 5 + 0;
									end
									if (v486 == (12 - 7)) then
										v490 = v81[1620 - (818 + 800)];
										v488, v489 = v72(v79[v490](v79[v490 + (230 - (163 + 66))]));
										v74 = (v489 + v490) - 1;
										v486 = 6;
									end
									if (v486 == 1) then
										v79[v81[2]] = v63[v81[14 - 11]];
										v73 = v73 + (88 - (40 + 47));
										v81 = v69[v73];
										v486 = 637 - (146 + 489);
									end
									if ((v486 == (3 + 3)) or (3858 == 915)) then
										v487 = 0;
										for v8305 = v490, v74 do
											v487 = v487 + (1388 - (499 + 888));
											v79[v8305] = v488[v487];
										end
										v73 = v73 + 1 + 0;
										v486 = 10 - 3;
									end
									if (v486 == (0 - 0)) then
										v487 = nil;
										v488, v489 = nil;
										v490 = nil;
										v486 = 3 - 2;
									end
									if (v486 == 7) then
										v81 = v69[v73];
										v490 = v81[3 - 1];
										v79[v490](v13(v79, v490 + 1, v74));
										v486 = 752 - (522 + 222);
									end
								end
							elseif (v82 == 203) then
								v79[v81[2 + 0]] = v81[1488 - (72 + 1413)];
								v73 = v73 + (1204 - (216 + 987));
								v81 = v69[v73];
								v79[v81[2 + 0]] = v79[v81[14 - 11]][v79[v81[1415 - (1300 + 111)]]];
								v73 = v73 + (1082 - (1055 + 26));
								v81 = v69[v73];
								v79[v81[645 - (475 + 168)]][v79[v81[3]]] = v79[v81[4]];
								v73 = v73 + (1368 - (302 + 1065));
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[2 + 1];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1320 - (917 + 401)]] = v79[v81[1273 - (631 + 639)]][v79[v81[1704 - (654 + 1046)]]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v81[3] ~= (1599 - (1007 + 592));
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[9 - 7]][v79[v81[3]]] = v79[v81[4]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[12 - 9];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[7 - 5]] = v79[v81[325 - (26 + 296)]][v79[v81[4 + 0]]];
							else
								local v3580 = 0 - 0;
								local v3581;
								local v3582;
								while true do
									if ((v3580 == (1 + 0)) or (1104 >= 1854)) then
										v81 = v69[v73];
										v3582 = v81[819 - (418 + 399)];
										v3581 = v79[v81[7 - 4]];
										v79[v3582 + 1 + 0] = v3581;
										v3580 = 2;
									end
									if (3 == v3580) then
										v79[v3582](v79[v3582 + 1]);
										v73 = v73 + (708 - (314 + 393));
										v81 = v69[v73];
										v79[v81[7 - 5]] = v64[v81[173 - (82 + 88)]];
										v3580 = 4 + 0;
									end
									if (v3580 == (147 - (95 + 52))) then
										v3581 = nil;
										v3582 = nil;
										v79[v81[1 + 1]] = v79[v81[3 + 0]][v81[11 - 7]];
										v73 = v73 + 1;
										v3580 = 834 - (8 + 825);
									end
									if ((4228 == 4228) and (v3580 == (2 + 0))) then
										v79[v3582] = v3581[v81[1644 - (471 + 1169)]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v3582 = v81[1 + 1];
										v3580 = 14 - 11;
									end
									if (v3580 == (11 - 7)) then
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2]][v81[3 + 0]] = v81[1 + 3];
										v73 = v73 + 1 + 0;
										v3580 = 1 + 4;
									end
									if (v3580 == (448 - (365 + 78))) then
										v81 = v69[v73];
										v73 = v81[226 - (200 + 23)];
										break;
									end
								end
							end
						elseif (v82 <= (139 + 67)) then
							if (v82 == (50 + 155)) then
								v79[v81[2 + 0]] = v79[v81[382 - (373 + 6)]] - v79[v81[16 - 12]];
							else
								v79[v81[2]] = v81[4 - 1];
								v73 = v73 + (923 - (519 + 403));
								v81 = v69[v73];
								v79[v81[1523 - (1435 + 86)]] = v79[v81[180 - (97 + 80)]][v79[v81[4]]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[704 - (366 + 336)]][v79[v81[3]]] = v79[v81[609 - (4 + 601)]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[670 - (128 + 540)]] = v81[572 - (341 + 228)];
								v73 = v73 + (1789 - (231 + 1557));
								v81 = v69[v73];
								v79[v81[2 - 0]] = v79[v81[13 - 10]][v79[v81[4]]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1353 - (1329 + 22)]] = v81[3] ~= (703 - (27 + 676));
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v79[v81[7 - 5]][v79[v81[1694 - (219 + 1472)]]] = v79[v81[1 + 3]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[390 - (162 + 226)]] = v81[4 - 1];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v79[v81[6 - 3]][v79[v81[4]]];
							end
						elseif ((3595 > 1542) and (v82 > (1097 - (224 + 666)))) then
							local v3601 = 1680 - (345 + 1335);
							while true do
								if ((1440 < 2704) and (v3601 == (9 + 0))) then
									v79[v81[2]] = v79[v81[7 - 4]][v81[14 - 10]];
									break;
								end
								if (v3601 == (6 + 1)) then
									v79[v81[367 - (18 + 347)]] = v64[v81[975 - (556 + 416)]];
									v73 = v73 + (1700 - (797 + 902));
									v81 = v69[v73];
									v3601 = 1 + 7;
								end
								if (v3601 == (4 - 3)) then
									v79[v81[2]] = v79[v81[10 - 7]][v81[1076 - (632 + 440)]];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v3601 = 1211 - (705 + 504);
								end
								if (v3601 == (8 - 2)) then
									v79[v81[2]][v81[6 - 3]] = v79[v81[1921 - (1300 + 617)]];
									v73 = v73 + (4 - 3);
									v81 = v69[v73];
									v3601 = 1929 - (36 + 1886);
								end
								if (v3601 == (7 - 5)) then
									v79[v81[618 - (305 + 311)]][v81[2 + 1]] = v79[v81[1459 - (1093 + 362)]];
									v73 = v73 + (1099 - (734 + 364));
									v81 = v69[v73];
									v3601 = 3;
								end
								if (v3601 == (1016 - (374 + 634))) then
									v79[v81[1 + 1]] = v79[v81[1120 - (331 + 786)]][v81[1100 - (759 + 337)]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v3601 = 573 - (255 + 309);
								end
								if ((376 <= 2127) and (v3601 == (498 - (484 + 9)))) then
									v79[v81[2 + 0]] = v79[v81[4 - 1]][v81[3 + 1]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v3601 = 10 - 4;
								end
								if ((490 >= 167) and ((1454 - (341 + 1109)) == v3601)) then
									v79[v81[1 + 1]] = v79[v81[1 + 2]][v81[4]];
									v73 = v73 + (660 - (483 + 176));
									v81 = v69[v73];
									v3601 = 3 + 2;
								end
								if (0 == v3601) then
									v79[v81[2 + 0]] = v79[v81[1283 - (47 + 1233)]][v81[3 + 1]];
									v73 = v73 + (615 - (421 + 193));
									v81 = v69[v73];
									v3601 = 1;
								end
								if ((11 - 8) == v3601) then
									v79[v81[2 - 0]] = v64[v81[3]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v3601 = 17 - 13;
								end
							end
						else
							local v3602 = 0;
							while true do
								if ((3568 >= 533) and (v3602 == (0 + 0))) then
									v79[v81[2 + 0]] = v79[v81[3 + 0]][v81[1 + 3]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[1846 - (463 + 1381)]][v81[3 + 0]] = v79[v81[4]];
									v3602 = 1 + 0;
								end
								if (v3602 == (2 + 0)) then
									v81 = v69[v73];
									v79[v81[3 - 1]] = v79[v81[4 - 1]][v81[1165 - (696 + 465)]];
									v73 = v73 + (561 - (14 + 546));
									v81 = v69[v73];
									v3602 = 1 + 2;
								end
								if (v3602 == (1441 - (413 + 1027))) then
									v73 = v73 + (1817 - (1382 + 434));
									v81 = v69[v73];
									v79[v81[5 - 3]] = v63[v81[1527 - (86 + 1438)]];
									v73 = v73 + (722 - (692 + 29));
									v3602 = 1 + 1;
								end
								if ((v3602 == (9 - 6)) or (1055 >= 4622)) then
									v79[v81[1 + 1]][v81[2 + 1]] = v79[v81[1 + 3]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[6 - 4]] = v81[3];
									break;
								end
							end
						end
					elseif ((2352 > 1742) and (v82 <= (607 - 396))) then
						if (v82 <= (267 - (11 + 47))) then
							local v491 = v81[3 - 1];
							local v492, v493 = v72(v79[v491](v79[v491 + 1 + 0]));
							v74 = (v493 + v491) - 1;
							local v494 = 449 - (287 + 162);
							for v954 = v491, v74 do
								local v955 = 0 + 0;
								while true do
									if (v955 == 0) then
										v494 = v494 + (1630 - (10 + 1619));
										v79[v954] = v492[v494];
										break;
									end
								end
							end
						elseif ((v82 > 210) or (1106 == 472)) then
							local v3603;
							v79[v81[2 + 0]] = v63[v81[1 + 2]];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[1272 - (403 + 867)]] = v79[v81[355 - (310 + 42)]][v81[4 + 0]];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[1447 - (1170 + 275)]] = v79[v81[3 + 0]][v79[v81[13 - 9]]];
							v73 = v73 + (684 - (424 + 259));
							v81 = v69[v73];
							v3603 = v81[2];
							v79[v3603] = v79[v3603]();
							v73 = v73 + (3 - 2);
							v81 = v69[v73];
							v79[v81[1066 - (289 + 775)]] = v64[v81[7 - 4]];
							v73 = v73 + (2 - 1);
							v81 = v69[v73];
							v79[v81[7 - 5]] = v63[v81[6 - 3]];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[7 - 5]] = v79[v81[3]][v81[18 - 14]];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[1892 - (946 + 944)]] = v79[v81[7 - 4]][v79[v81[16 - 12]]];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[2 + 0]] = {};
							v73 = v73 + (1 - 0);
							v81 = v69[v73];
							v79[v81[1445 - (949 + 494)]] = v63[v81[1233 - (505 + 725)]];
							v73 = v73 + (2 - 1);
							v81 = v69[v73];
							v79[v81[1 + 1]] = v79[v81[5 - 2]][v81[12 - 8]];
							v73 = v73 + (1952 - (1928 + 23));
							v81 = v69[v73];
							v79[v81[1 + 1]][v79[v81[13 - 10]]] = v79[v81[4 - 0]];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[3 - 1]] = {};
							v73 = v73 + (2 - 1);
							v81 = v69[v73];
							v79[v81[2 + 0]] = v63[v81[3]];
							v73 = v73 + (237 - (40 + 196));
							v81 = v69[v73];
							v79[v81[1019 - (845 + 172)]] = v79[v81[3]][v81[4]];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[1283 - (423 + 858)]][v79[v81[1705 - (1520 + 182)]]] = v81[1470 - (196 + 1270)];
							v73 = v73 + (1807 - (763 + 1043));
							v81 = v69[v73];
							v3603 = v81[8 - 6];
							v79[v3603] = v79[v3603](v13(v79, v3603 + (1276 - (1144 + 131)), v81[4 - 1]));
							v73 = v73 + (530 - (458 + 71));
							v81 = v69[v73];
							v79[v81[5 - 3]] = v64[v81[4 - 1]];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[2 + 0]] = v63[v81[1776 - (775 + 998)]];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[2]] = v79[v81[3]][v81[148 - (78 + 66)]];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[5 - 3]] = v79[v81[1047 - (437 + 607)]][v79[v81[13 - 9]]];
							v73 = v73 + (32 - (30 + 1));
							v81 = v69[v73];
							v79[v81[813 - (786 + 25)]] = {};
							v73 = v73 + (3 - 2);
							v81 = v69[v73];
							v79[v81[2 + 0]] = v63[v81[2 + 1]];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[4 - 2]] = v79[v81[3]][v81[1 + 3]];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[2]][v79[v81[1 + 2]]] = v79[v81[68 - (9 + 55)]];
							v73 = v73 + (766 - (256 + 509));
							v81 = v69[v73];
							v79[v81[1962 - (1497 + 463)]] = {};
							v73 = v73 + (957 - (567 + 389));
							v81 = v69[v73];
							v79[v81[62 - (14 + 46)]] = v63[v81[3]];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[3 - 1]] = v79[v81[4 - 1]][v81[5 - 1]];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[818 - (301 + 515)]][v79[v81[540 - (45 + 492)]]] = v81[1 + 3];
							v73 = v73 + 1;
							v81 = v69[v73];
							v3603 = v81[2];
							v79[v3603] = v79[v3603](v13(v79, v3603 + 1, v81[6 - 3]));
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[2]] = v81[3];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[1 + 1]] = v64[v81[3]];
							v73 = v73 + (1 - 0);
							v81 = v69[v73];
							v79[v81[645 - (228 + 415)]] = v79[v81[2 + 1]][v81[1 + 3]];
							v73 = v73 + (2 - 1);
							v81 = v69[v73];
							v79[v81[256 - (147 + 107)]] = v79[v81[3 + 0]][v81[1036 - (925 + 107)]];
							v73 = v73 + (473 - (375 + 97));
							v81 = v69[v73];
							if not v79[v81[6 - 4]] then
								v73 = v73 + 1 + 0;
							else
								v73 = v81[8 - 5];
							end
						else
							local v3656;
							local v3657;
							local v3656, v3658;
							local v3659;
							local v3660;
							v79[v81[2]] = v63[v81[1577 - (298 + 1276)]];
							v73 = v73 + (1781 - (1225 + 555));
							v81 = v69[v73];
							v79[v81[1 + 1]] = v79[v81[3 - 0]][v81[293 - (75 + 214)]];
							v73 = v73 + (2 - 1);
							v81 = v69[v73];
							v3660 = v81[453 - (366 + 85)];
							v3659 = v79[v81[856 - (380 + 473)]];
							v79[v3660 + 1 + 0] = v3659;
							v79[v3660] = v3659[v81[4]];
							v73 = v73 + (1 - 0);
							v81 = v69[v73];
							v3660 = v81[1571 - (934 + 635)];
							v3656, v3658 = v72(v79[v3660](v79[v3660 + (681 - (266 + 414))]));
							v74 = (v3658 + v3660) - (1 + 0);
							v3657 = 0;
							for v7839 = v3660, v74 do
								v3657 = v3657 + 1 + 0;
								v79[v7839] = v3656[v3657];
							end
							v73 = v73 + (546 - (62 + 483));
							v81 = v69[v73];
							v3660 = v81[1636 - (904 + 730)];
							v3656 = {v79[v3660](v13(v79, v3660 + 1 + 0, v74))};
							v3657 = 1226 - (371 + 855);
							for v7842 = v3660, v81[8 - 4] do
								local v7843 = 1212 - (749 + 463);
								while true do
									if ((826 == 826) and (v7843 == (0 - 0))) then
										v3657 = v3657 + 1 + 0;
										v79[v7842] = v3656[v3657];
										break;
									end
								end
							end
							v73 = v73 + 1;
							v81 = v69[v73];
							v73 = v81[4 - 1];
						end
					elseif (v82 <= (578 - 365)) then
						if ((1468 == 1468) and (v82 == (305 - 93))) then
							local v3674 = 0 - 0;
							local v3675;
							while true do
								if (v3674 == (4 + 1)) then
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v3675 = v81[2];
									v79[v3675] = v79[v3675](v13(v79, v3675 + 1 + 0, v81[7 - 4]));
									v3674 = 1 + 5;
								end
								if (v3674 == (21 - 15)) then
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]][v81[8 - 5]] = v79[v81[1 + 3]];
									v73 = v73 + (1 - 0);
									v3674 = 51 - (5 + 39);
								end
								if (v3674 == (1283 - (20 + 1256))) then
									v81 = v69[v73];
									v79[v81[1 + 1]] = v81[659 - (616 + 40)];
									break;
								end
								if (v3674 == 3) then
									v81 = v69[v73];
									v79[v81[5 - 3]] = v79[v81[3 + 0]][v81[5 - 1]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v3674 = 658 - (82 + 572);
								end
								if (v3674 == (0 + 0)) then
									v3675 = nil;
									v79[v81[4 - 2]] = v63[v81[3]];
									v73 = v73 + (711 - (349 + 361));
									v81 = v69[v73];
									v3674 = 703 - (552 + 150);
								end
								if ((1556 >= 163) and ((806 - (521 + 281)) == v3674)) then
									v79[v81[2]] = v81[3];
									v73 = v73 + (119 - (15 + 103));
									v81 = v69[v73];
									v79[v81[1411 - (974 + 435)]] = v81[4 - 1];
									v3674 = 5;
								end
								if (v3674 == (2 - 1)) then
									v79[v81[2 + 0]][v81[1 + 2]] = v79[v81[4 + 0]];
									v73 = v73 + (1103 - (925 + 177));
									v81 = v69[v73];
									v79[v81[2]][v81[8 - 5]] = v81[4];
									v3674 = 21 - (12 + 7);
								end
								if ((v3674 == (2 + 0)) or (1497 >= 4135)) then
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[3 - 1]] = v64[v81[2 + 1]];
									v73 = v73 + (2 - 1);
									v3674 = 11 - 8;
								end
							end
						else
							local v3676 = 0 - 0;
							local v3677;
							local v3678;
							local v3679;
							local v3680;
							while true do
								if (v3676 == (3 + 3)) then
									v81 = v69[v73];
									if v79[v81[368 - (198 + 168)]] then
										v73 = v73 + 1 + 0;
									else
										v73 = v81[3];
									end
									break;
								end
								if ((v3676 == (12 - 7)) or (901 > 3361)) then
									v3680 = v81[6 - 4];
									v3678 = {v79[v3680](v13(v79, v3680 + 1, v81[8 - 5]))};
									v3677 = 0 - 0;
									for v12390 = v3680, v81[64 - (4 + 56)] do
										local v12391 = 0 - 0;
										while true do
											if ((804 < 3437) and (0 == v12391)) then
												v3677 = v3677 + (3 - 2);
												v79[v12390] = v3678[v3677];
												break;
											end
										end
									end
									v73 = v73 + 1 + 0;
									v3676 = 3 + 3;
								end
								if ((4775 >= 4115) and (v3676 == (0 - 0))) then
									v3677 = nil;
									v3678 = nil;
									v3679 = nil;
									v3680 = nil;
									v79[v81[1900 - (1270 + 628)]] = v63[v81[1325 - (570 + 752)]];
									v3676 = 1462 - (958 + 503);
								end
								if ((2967 < 3704) and (v3676 == (6 - 2))) then
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[6 - 4]] = v79[v81[5 - 2]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v3676 = 5;
								end
								if ((3691 <= 4944) and (v3676 == 1)) then
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1 + 1]] = v79[v81[9 - 6]][v81[8 - 4]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v3676 = 931 - (799 + 130);
								end
								if (v3676 == (2 + 0)) then
									v79[v81[1 + 1]] = v79[v81[14 - 11]][v79[v81[4]]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v3680 = v81[4 - 2];
									v3679 = v79[v81[3]];
									v3676 = 1439 - (772 + 664);
								end
								if (v3676 == (1 + 2)) then
									v79[v3680 + 1 + 0] = v3679;
									v79[v3680] = v3679[v81[1077 - (46 + 1027)]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1355 - (467 + 886)]] = v79[v81[3]];
									v3676 = 4 - 0;
								end
							end
						end
					elseif (v82 == (406 - 192)) then
						local v3681;
						local v3682;
						local v3683;
						v79[v81[685 - (582 + 101)]] = v63[v81[748 - (574 + 171)]];
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[2 + 0]] = v63[v81[3]];
						v73 = v73 + (368 - (66 + 301));
						v81 = v69[v73];
						v79[v81[2]] = v63[v81[3]];
						v73 = v73 + (482 - (423 + 58));
						v81 = v69[v73];
						v79[v81[2]] = v79[v81[3]][v81[4]];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[1082 - (141 + 939)]] = v79[v81[684 - (532 + 149)]];
						v73 = v73 + 1;
						v81 = v69[v73];
						v3683 = v81[2 + 1];
						v3682 = v79[v3683];
						for v7844 = v3683 + (919 - (592 + 326)), v81[4] do
							v3682 = v3682 .. v79[v7844];
						end
						v79[v81[2]] = v3682;
						v73 = v73 + (3 - 2);
						v81 = v69[v73];
						v79[v81[9 - 7]] = v81[3] ~= (0 + 0);
						v73 = v73 + (826 - (467 + 358));
						v81 = v69[v73];
						v79[v81[8 - 6]] = v81[3 - 0] ~= (0 + 0);
						v73 = v73 + (3 - 2);
						v81 = v69[v73];
						v79[v81[4 - 2]] = v81[1829 - (233 + 1593)] ~= 0;
						v73 = v73 + 1;
						v81 = v69[v73];
						v3681 = v81[3 - 1];
						v79[v3681](v13(v79, v3681 + (763 - (28 + 734)), v81[4 - 1]));
						v73 = v73 + (1132 - (337 + 794));
						v81 = v69[v73];
						v79[v81[2]] = v81[3];
					else
						local v3700;
						v3700 = v81[2 + 0];
						v79[v3700] = v79[v3700](v13(v79, v3700 + 1 + 0, v81[2 + 1]));
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[6 - 4]][v79[v81[705 - (342 + 360)]]] = v79[v81[3 + 1]];
						v73 = v73 + (1000 - (440 + 559));
						v81 = v69[v73];
						v79[v81[580 - (150 + 428)]] = v81[1 + 2];
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[159 - (15 + 142)]] = v79[v81[3]];
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[1 + 1]] = v81[6 - 3];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[1678 - (757 + 919)]] = v81[2 + 1];
						v73 = v73 + (4 - 3);
						v81 = v69[v73];
						v3700 = v81[2 + 0];
						v79[v3700] = v79[v3700](v13(v79, v3700 + (2 - 1), v81[3]));
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[3 - 1]][v79[v81[3]]] = v79[v81[4]];
						v73 = v73 + (52 - (8 + 43));
						v81 = v69[v73];
						v79[v81[5 - 3]] = v81[1 + 2];
						v73 = v73 + (297 - (236 + 60));
						v81 = v69[v73];
						v79[v81[2]] = v79[v81[1 + 2]];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[2]] = v81[1 + 2];
						v73 = v73 + (2 - 1);
						v81 = v69[v73];
						v79[v81[6 - 4]] = v81[2 + 1];
						v73 = v73 + (2 - 1);
						v81 = v69[v73];
						v3700 = v81[2 + 0];
						v79[v3700] = v79[v3700](v13(v79, v3700 + (269 - (35 + 233)), v81[1900 - (547 + 1350)]));
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[3 - 1]][v79[v81[12 - 9]]] = v79[v81[606 - (593 + 9)]];
						v73 = v73 + (1396 - (298 + 1097));
						v81 = v69[v73];
						v79[v81[4 - 2]] = v81[14 - 11];
						v73 = v73 + (2 - 1);
						v81 = v69[v73];
						v79[v81[836 - (479 + 355)]] = v79[v81[399 - (175 + 221)]];
						v73 = v73 + (2 - 1);
						v81 = v69[v73];
						v79[v81[1 + 1]] = v81[6 - 3];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[2]] = v81[3];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v3700 = v81[5 - 3];
						v79[v3700] = v79[v3700](v13(v79, v3700 + 1, v81[1328 - (471 + 854)]));
						v73 = v73 + (808 - (55 + 752));
						v81 = v69[v73];
						v79[v81[387 - (97 + 288)]][v79[v81[1438 - (317 + 1118)]]] = v79[v81[1893 - (198 + 1691)]];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[602 - (263 + 337)]] = v81[1013 - (577 + 433)];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[2]] = v79[v81[989 - (185 + 801)]];
						v73 = v73 + (515 - (270 + 244));
						v81 = v69[v73];
						v79[v81[3 - 1]] = v81[3 + 0];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[3 - 1]] = v81[2 + 1];
						v73 = v73 + (2 - 1);
						v81 = v69[v73];
						v3700 = v81[2 - 0];
						v79[v3700] = v79[v3700](v13(v79, v3700 + 1, v81[1266 - (653 + 610)]));
						v73 = v73 + (1781 - (1358 + 422));
						v81 = v69[v73];
						v79[v81[2]][v79[v81[1154 - (123 + 1028)]]] = v79[v81[5 - 1]];
						v73 = v73 + (618 - (469 + 148));
						v81 = v69[v73];
						v79[v81[2]] = v81[2 + 1];
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[2]] = v79[v81[7 - 4]];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[9 - 7]] = v81[3];
						v73 = v73 + (4 - 3);
						v81 = v69[v73];
						v79[v81[2]] = v81[2 + 1];
						v73 = v73 + (1 - 0);
						v81 = v69[v73];
						v3700 = v81[1432 - (187 + 1243)];
						v79[v3700] = v79[v3700](v13(v79, v3700 + (1905 - (1011 + 893)), v81[1 + 2]));
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[2]][v79[v81[1484 - (1349 + 132)]]] = v79[v81[3 + 1]];
						v73 = v73 + (1417 - (921 + 495));
						v81 = v69[v73];
						v79[v81[2]] = v81[3];
						v73 = v73 + (757 - (112 + 644));
						v81 = v69[v73];
						v79[v81[2]] = v79[v81[3]];
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[2]] = v81[6 - 3];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[2]] = v81[281 - (140 + 138)];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v3700 = v81[266 - (74 + 190)];
						v79[v3700] = v79[v3700](v13(v79, v3700 + 1, v81[3]));
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[1354 - (233 + 1119)]][v79[v81[3 + 0]]] = v79[v81[10 - 6]];
						v73 = v73 + (1 - 0);
						v81 = v69[v73];
						v79[v81[2]] = v81[3];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[3 - 1]] = v79[v81[508 - (248 + 257)]];
						v73 = v73 + (1 - 0);
						v81 = v69[v73];
						v79[v81[2]] = v81[1494 - (1472 + 19)];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[1 + 1]] = v81[275 - (120 + 152)];
						v73 = v73 + 1;
						v81 = v69[v73];
						v3700 = v81[2 + 0];
						v79[v3700] = v79[v3700](v13(v79, v3700 + (2 - 1), v81[2 + 1]));
						v73 = v73 + (1217 - (401 + 815));
						v81 = v69[v73];
						v79[v81[1 + 1]][v79[v81[7 - 4]]] = v79[v81[10 - 6]];
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[1 + 1]] = v81[7 - 4];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[2 + 0]] = v79[v81[763 - (51 + 709)]];
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[111 - (33 + 76)]] = v81[4 - 1];
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[2 + 0]] = v81[5 - 2];
						v73 = v73 + 1;
						v81 = v69[v73];
						v3700 = v81[552 - (154 + 396)];
						v79[v3700] = v79[v3700](v13(v79, v3700 + (2 - 1), v81[3 + 0]));
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[1 + 1]][v79[v81[1515 - (24 + 1488)]]] = v79[v81[13 - 9]];
						v73 = v73 + (428 - (246 + 181));
						v81 = v69[v73];
						v79[v81[2 + 0]] = v81[3 + 0];
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[2 + 0]] = v79[v81[3]];
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[2 + 0]] = v81[1862 - (413 + 1446)];
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[2 - 0]] = v81[1 + 2];
						v73 = v73 + 1;
						v81 = v69[v73];
						v3700 = v81[1978 - (29 + 1947)];
						v79[v3700] = v79[v3700](v13(v79, v3700 + 1 + 0, v81[5 - 2]));
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[4 - 2]][v79[v81[3]]] = v79[v81[3 + 1]];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[4 - 2]] = v81[3];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[4 - 2]] = v79[v81[8 - 5]];
						v73 = v73 + (2 - 1);
						v81 = v69[v73];
						v79[v81[404 - (74 + 328)]] = v81[656 - (144 + 509)];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[2 + 0]] = v81[3];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v3700 = v81[2];
						v79[v3700] = v79[v3700](v13(v79, v3700 + 1 + 0, v81[1366 - (319 + 1044)]));
						v73 = v73 + (3 - 2);
						v81 = v69[v73];
						v79[v81[632 - (14 + 616)]][v79[v81[3]]] = v79[v81[582 - (303 + 275)]];
						v73 = v73 + (1851 - (1659 + 191));
						v81 = v69[v73];
						v79[v81[1 + 1]] = v81[3];
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[1 + 1]] = v79[v81[571 - (205 + 363)]];
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[3 - 1]] = v81[3];
						v73 = v73 + (575 - (147 + 427));
						v81 = v69[v73];
						v79[v81[2 - 0]] = v81[11 - 8];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v3700 = v81[2 - 0];
						v79[v3700] = v79[v3700](v13(v79, v3700 + 1, v81[5 - 2]));
						v73 = v73 + (1229 - (1108 + 120));
						v81 = v69[v73];
						v79[v81[2]][v79[v81[3]]] = v79[v81[4]];
						v73 = v73 + (3 - 2);
						v81 = v69[v73];
						v79[v81[653 - (303 + 348)]] = v81[3];
						v73 = v73 + (312 - (242 + 69));
						v81 = v69[v73];
						v79[v81[1 + 1]] = v79[v81[216 - (172 + 41)]];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[2]] = v81[141 - (40 + 98)];
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[5 - 3]] = v81[800 - (161 + 636)];
						v73 = v73 + 1;
						v81 = v69[v73];
						v3700 = v81[9 - 7];
						v79[v3700] = v79[v3700](v13(v79, v3700 + (1 - 0), v81[3 + 0]));
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[2]][v79[v81[3 + 0]]] = v79[v81[3 + 1]];
						v73 = v73 + (630 - (123 + 506));
						v81 = v69[v73];
						v79[v81[4 - 2]] = v81[1905 - (296 + 1606)];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[2]] = v79[v81[3]];
						v73 = v73 + (2 - 1);
						v81 = v69[v73];
						v79[v81[2 + 0]] = v81[3 + 0];
						v73 = v73 + (1620 - (863 + 756));
						v81 = v69[v73];
						v79[v81[1426 - (39 + 1385)]] = v81[3];
						v73 = v73 + (760 - (52 + 707));
						v81 = v69[v73];
						v3700 = v81[1 + 1];
						v79[v3700] = v79[v3700](v13(v79, v3700 + (446 - (358 + 87)), v81[1 + 2]));
						v73 = v73 + (3 - 2);
						v81 = v69[v73];
						v79[v81[1336 - (27 + 1307)]][v79[v81[5 - 2]]] = v79[v81[3 + 1]];
					end
				elseif ((v82 <= (743 - 420)) or (4915 < 2409)) then
					if (v82 <= (258 + 11)) then
						if (v82 <= (54 + 188)) then
							if ((v82 <= 228) or (4336 <= 1705)) then
								if (v82 <= (634 - 413)) then
									if ((v82 <= 218) or (941 > 3418)) then
										if ((2170 >= 414) and (v82 <= (479 - (152 + 111)))) then
											local v495;
											local v496;
											v496 = v81[2 + 0];
											v79[v496](v13(v79, v496 + 1, v81[5 - 2]));
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[7 - 5]] = v63[v81[8 - 5]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[283 - (32 + 249)]] = v79[v81[1057 - (793 + 261)]][v81[4]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v496 = v81[5 - 3];
											v495 = v79[v81[3 + 0]];
											v79[v496 + (1 - 0)] = v495;
											v79[v496] = v495[v81[231 - (109 + 118)]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[597 - (115 + 480)]] = v63[v81[1 + 2]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[2 + 0]] = v79[v81[1416 - (547 + 866)]][v81[266 - (259 + 3)]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v496 = v81[2];
											v79[v496] = v79[v496](v13(v79, v496 + (2 - 1), v81[1422 - (891 + 528)]));
											v73 = v73 + (1 - 0);
											v81 = v69[v73];
											v496 = v81[1 + 1];
											v495 = v79[v81[3]];
											v79[v496 + 1] = v495;
											v79[v496] = v495[v81[16 - 12]];
											v73 = v73 + (3 - 2);
											v81 = v69[v73];
											v79[v81[3 - 1]] = v63[v81[3]];
											v73 = v73 + (3 - 2);
											v81 = v69[v73];
											v79[v81[1 + 1]] = v79[v81[3]][v81[1 + 3]];
										elseif (v82 > (491 - 274)) then
											v79[v81[1953 - (1144 + 807)]] = v63[v81[2 + 1]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[4 - 2]] = v79[v81[3 + 0]][v81[6 - 2]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[1114 - (930 + 182)]] = v79[v81[1837 - (1429 + 405)]][v81[4]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[779 - (641 + 136)]][v81[8 - 5]] = v79[v81[3 + 1]];
											v73 = v73 + (3 - 2);
											v81 = v69[v73];
											do
												return;
											end
										else
											local v3791;
											v79[v81[1 + 1]] = v79[v81[3]];
											v73 = v73 + (714 - (87 + 626));
											v81 = v69[v73];
											v79[v81[2]] = v81[4 - 1];
											v73 = v73 + (1286 - (1261 + 24));
											v81 = v69[v73];
											v79[v81[2]] = v81[3 + 0];
											v73 = v73 + 1;
											v81 = v69[v73];
											v3791 = v81[7 - 5];
											v79[v3791] = v79[v3791](v13(v79, v3791 + 1, v81[2 + 1]));
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[2]][v79[v81[3]]] = v79[v81[1 + 3]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[2]] = v81[11 - 8];
											v73 = v73 + (4 - 3);
											v81 = v69[v73];
											v79[v81[859 - (822 + 35)]] = v79[v81[1788 - (360 + 1425)]];
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v79[v81[5 - 3]] = v81[3 + 0];
											v73 = v73 + (297 - (283 + 13));
											v81 = v69[v73];
											v79[v81[3 - 1]] = v81[2 + 1];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v3791 = v81[2];
											v79[v3791] = v79[v3791](v13(v79, v3791 + 1, v81[3]));
											v73 = v73 + (1 - 0);
											v81 = v69[v73];
											v79[v81[1032 - (810 + 220)]][v79[v81[5 - 2]]] = v79[v81[4 + 0]];
											v73 = v73 + (212 - (195 + 16));
											v81 = v69[v73];
											v79[v81[4 - 2]] = v81[13 - 10];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[3 - 1]] = v79[v81[1 + 2]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[2]] = v81[588 - (92 + 493)];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[2]] = v81[2 + 1];
											v73 = v73 + (1159 - (75 + 1083));
											v81 = v69[v73];
											v3791 = v81[7 - 5];
											v79[v3791] = v79[v3791](v13(v79, v3791 + (1 - 0), v81[3]));
											v73 = v73 + (4 - 3);
											v81 = v69[v73];
											v79[v81[1 + 1]][v79[v81[2 + 1]]] = v79[v81[18 - 14]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[2]] = v81[1378 - (159 + 1216)];
											v73 = v73 + (3 - 2);
											v81 = v69[v73];
											v79[v81[2 - 0]] = v79[v81[3 + 0]];
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v79[v81[2]] = v81[3];
											v73 = v73 + (1616 - (418 + 1197));
											v81 = v69[v73];
											v79[v81[2]] = v81[967 - (632 + 332)];
											v73 = v73 + 1;
											v81 = v69[v73];
											v3791 = v81[2];
											v79[v3791] = v79[v3791](v13(v79, v3791 + (1599 - (964 + 634)), v81[6 - 3]));
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[2 + 0]][v79[v81[3 + 0]]] = v79[v81[5 - 1]];
											v73 = v73 + (1 - 0);
											v81 = v69[v73];
											v79[v81[4 - 2]] = v81[1654 - (1559 + 92)];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[2 + 0]] = v79[v81[3 + 0]];
											v73 = v73 + (38 - (9 + 28));
											v81 = v69[v73];
											v79[v81[2 + 0]] = v81[8 - 5];
											v73 = v73 + (1953 - (922 + 1030));
											v81 = v69[v73];
											v79[v81[2]] = v81[386 - (345 + 38)];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v3791 = v81[2 + 0];
											v79[v3791] = v79[v3791](v13(v79, v3791 + (3 - 2), v81[563 - (546 + 14)]));
											v73 = v73 + (1068 - (7 + 1060));
											v81 = v69[v73];
											v79[v81[2]][v79[v81[3 + 0]]] = v79[v81[15 - 11]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[2]] = v81[403 - (256 + 144)];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[124 - (7 + 115)]] = v79[v81[537 - (21 + 513)]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[1279 - (59 + 1218)]] = v81[3];
											v73 = v73 + (1 - 0);
											v81 = v69[v73];
											v79[v81[2]] = v81[6 - 3];
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v3791 = v81[2];
											v79[v3791] = v79[v3791](v13(v79, v3791 + (187 - (155 + 31)), v81[3 - 0]));
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[2]][v79[v81[3 + 0]]] = v79[v81[1995 - (1417 + 574)]];
											v73 = v73 + (153 - (112 + 40));
											v81 = v69[v73];
											v79[v81[3 - 1]] = v81[3 + 0];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[686 - (326 + 358)]] = v79[v81[835 - (4 + 828)]];
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v79[v81[1719 - (85 + 1632)]] = v81[3];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[2]] = v81[3 + 0];
											v73 = v73 + (1140 - (1096 + 43));
											v81 = v69[v73];
											v3791 = v81[420 - (176 + 242)];
											v79[v3791] = v79[v3791](v13(v79, v3791 + (913 - (313 + 599)), v81[642 - (402 + 237)]));
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[1058 - (551 + 505)]][v79[v81[3]]] = v79[v81[4]];
											v73 = v73 + (3 - 2);
											v81 = v69[v73];
											v79[v81[4 - 2]] = v81[3];
											v73 = v73 + (434 - (268 + 165));
											v81 = v69[v73];
											v79[v81[1 + 1]] = v79[v81[6 - 3]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[4 - 2]] = v81[3];
											v73 = v73 + (1773 - (238 + 1534));
											v81 = v69[v73];
											v79[v81[3 - 1]] = v81[3];
											v73 = v73 + (919 - (302 + 616));
											v81 = v69[v73];
											v3791 = v81[2 + 0];
											v79[v3791] = v79[v3791](v13(v79, v3791 + 1, v81[1831 - (1054 + 774)]));
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[2]][v79[v81[1328 - (240 + 1085)]]] = v79[v81[1231 - (1220 + 7)]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[1971 - (1819 + 150)]] = v81[2 + 1];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[2]] = v79[v81[3 + 0]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[1 + 1]] = v81[3];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[2 - 0]] = v81[1367 - (229 + 1135)];
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v3791 = v81[4 - 2];
											v79[v3791] = v79[v3791](v13(v79, v3791 + 1, v81[1 + 2]));
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[784 - (289 + 493)]][v79[v81[1 + 2]]] = v79[v81[13 - 9]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[4 - 2]] = v81[3 + 0];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[2]] = v79[v81[1291 - (1170 + 118)]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[2]] = v81[3];
											v73 = v73 + (1810 - (817 + 992));
											v81 = v69[v73];
											v79[v81[4 - 2]] = v81[13 - 10];
											v73 = v73 + (1173 - (852 + 320));
											v81 = v69[v73];
											v3791 = v81[2 + 0];
											v79[v3791] = v79[v3791](v13(v79, v3791 + (802 - (731 + 70)), v81[4 - 1]));
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[600 - (17 + 581)]][v79[v81[3]]] = v79[v81[1327 - (470 + 853)]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[2]] = v81[67 - (30 + 34)];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[3 - 1]] = v79[v81[223 - (180 + 40)]];
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v79[v81[2]] = v81[181 - (11 + 167)];
											v73 = v73 + (1640 - (127 + 1512));
											v81 = v69[v73];
											v79[v81[3 - 1]] = v81[10 - 7];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v3791 = v81[4 - 2];
											v79[v3791] = v79[v3791](v13(v79, v3791 + (2 - 1), v81[2 + 1]));
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v79[v81[2]][v79[v81[891 - (304 + 584)]]] = v79[v81[8 - 4]];
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v79[v81[2]] = v81[3];
											v73 = v73 + (1 - 0);
											v81 = v69[v73];
											v79[v81[2 + 0]] = v79[v81[14 - 11]];
											v73 = v73 + (1662 - (997 + 664));
											v81 = v69[v73];
											v79[v81[2 + 0]] = v81[1 + 2];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[2 + 0]] = v81[987 - (231 + 753)];
											v73 = v73 + (1 - 0);
											v81 = v69[v73];
											v3791 = v81[2];
											v79[v3791] = v79[v3791](v13(v79, v3791 + (1579 - (615 + 963)), v81[1 + 2]));
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[3 - 1]][v79[v81[1807 - (863 + 941)]]] = v79[v81[842 - (461 + 377)]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[2]] = v81[1 + 2];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[2]] = v79[v81[3]];
											v73 = v73 + (1273 - (455 + 817));
											v81 = v69[v73];
											v79[v81[2 + 0]] = v81[835 - (123 + 709)];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[1696 - (618 + 1076)]] = v81[3];
											v73 = v73 + (1 - 0);
											v81 = v69[v73];
											v3791 = v81[8 - 6];
											v79[v3791] = v79[v3791](v13(v79, v3791 + 1 + 0, v81[947 - (657 + 287)]));
											v73 = v73 + (3 - 2);
											v81 = v69[v73];
											v79[v81[1853 - (1256 + 595)]][v79[v81[3 + 0]]] = v79[v81[78 - (59 + 15)]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[1 + 1]] = v81[2 + 1];
											v73 = v73 + (753 - (406 + 346));
											v81 = v69[v73];
											v79[v81[4 - 2]] = v79[v81[3]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[7 - 5]] = v81[3];
										end
									elseif (v82 <= (118 + 101)) then
										v79[v81[193 - (127 + 64)]][v79[v81[948 - (70 + 875)]]] = v81[6 - 2];
									elseif (v82 == 220) then
										for v7845 = v81[2], v81[7 - 4] do
											v79[v7845] = nil;
										end
									else
										v79[v81[2 + 0]] = v81[3 + 0] - v79[v81[1593 - (1039 + 550)]];
									end
								elseif (v82 <= (426 - (35 + 167))) then
									if (v82 <= (1435 - (103 + 1110))) then
										local v523 = 0;
										local v524;
										local v525;
										while true do
											if (v523 == (1116 - (540 + 574))) then
												v73 = v73 + (3 - 2);
												v81 = v69[v73];
												v79[v81[1396 - (1283 + 111)]] = v63[v81[355 - (204 + 148)]];
												v523 = 4 - 1;
											end
											if (v523 == (3 + 0)) then
												v73 = v73 + 1;
												v81 = v69[v73];
												v79[v81[1 + 1]] = v79[v81[553 - (58 + 492)]][v81[17 - 13]];
												v523 = 8 - 4;
											end
											if (v523 == 4) then
												v73 = v73 + (4 - 3);
												v81 = v69[v73];
												v525 = v81[2 + 0];
												v523 = 1 + 4;
											end
											if (v523 == (789 - (531 + 252))) then
												v524 = v79[v81[4 + 0]];
												if ((2196 > 1182) and v524) then
													v73 = v73 + (2 - 1);
												else
													local v10632 = 1786 - (928 + 858);
													while true do
														if ((2949 > 889) and (v10632 == (0 - 0))) then
															v79[v81[774 - (108 + 664)]] = v524;
															v73 = v81[3];
															break;
														end
													end
												end
												break;
											end
											if (v523 == (0 - 0)) then
												v524 = nil;
												v525 = nil;
												v525 = v81[3 - 1];
												v523 = 1;
											end
											if (1 == v523) then
												v524 = v79[v81[3 + 0]];
												v79[v525 + 1] = v524;
												v79[v525] = v524[v81[839 - (732 + 103)]];
												v523 = 2;
											end
											if (v523 == (633 - (351 + 277))) then
												v79[v525] = v79[v525](v13(v79, v525 + (681 - (538 + 142)), v81[13 - 10]));
												v73 = v73 + (1828 - (189 + 1638));
												v81 = v69[v73];
												v523 = 13 - 7;
											end
										end
									elseif (v82 > (1446 - (348 + 875))) then
										local v3872 = 1216 - (1202 + 14);
										local v3873;
										while true do
											if (v3872 == (636 - (619 + 16))) then
												v79[v81[681 - (445 + 234)]] = v81[8 - 5];
												v73 = v73 + (502 - (295 + 206));
												v81 = v69[v73];
												v79[v81[2]] = v81[3 + 0];
												v3872 = 2;
											end
											if ((v3872 == (6 - 3)) or (2079 == 439)) then
												v81 = v69[v73];
												v3873 = v81[2 + 0];
												v79[v3873] = v79[v3873](v13(v79, v3873 + 1 + 0, v81[2 + 1]));
												break;
											end
											if (v3872 == (0 + 0)) then
												v3873 = nil;
												v79[v81[2]] = v79[v81[150 - (84 + 63)]][v81[1376 - (913 + 459)]];
												v73 = v73 + 1;
												v81 = v69[v73];
												v3872 = 783 - (700 + 82);
											end
											if (v3872 == (1 + 1)) then
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v79[v81[445 - (362 + 81)]] = v81[3];
												v73 = v73 + (180 - (133 + 46));
												v3872 = 3;
											end
										end
									else
										local v3874 = 0 - 0;
										local v3875;
										while true do
											if (v3874 == (1525 - (1219 + 306))) then
												v3875 = nil;
												v79[v81[1959 - (1012 + 945)]] = v79[v81[3]][v81[761 - (481 + 276)]];
												v73 = v73 + (2 - 1);
												v81 = v69[v73];
												v3874 = 2 - 1;
											end
											if (v3874 == 6) then
												v73 = v73 + (124 - (49 + 74));
												v81 = v69[v73];
												v73 = v81[1 + 2];
												break;
											end
											if ((4423 == 4423) and ((13 - 8) == v3874)) then
												v79[v3875] = v79[v3875](v13(v79, v3875 + (3 - 2), v81[3]));
												v73 = v73 + (2 - 1);
												v81 = v69[v73];
												v79[v81[2]][v81[2 + 1]] = v79[v81[4]];
												v3874 = 21 - 15;
											end
											if ((v3874 == 3) or (289 >= 2722)) then
												v81 = v69[v73];
												v79[v81[8 - 6]] = v79[v81[8 - 5]] + v79[v81[11 - 7]];
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v3874 = 4;
											end
											if (v3874 == (4 - 2)) then
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v79[v81[5 - 3]] = v63[v81[7 - 4]];
												v73 = v73 + 1 + 0;
												v3874 = 1 + 2;
											end
											if (v3874 == (2 - 1)) then
												v79[v81[2 - 0]] = v79[v81[3]][v81[4]];
												v73 = v73 + (1729 - (17 + 1711));
												v81 = v69[v73];
												v79[v81[5 - 3]] = v79[v81[116 - (14 + 99)]] / v81[3 + 1];
												v3874 = 3 - 1;
											end
											if (v3874 == (314 - (287 + 23))) then
												v79[v81[2]] = v79[v81[6 - 3]] + v81[8 - 4];
												v73 = v73 + 1;
												v81 = v69[v73];
												v3875 = v81[436 - (54 + 380)];
												v3874 = 13 - 8;
											end
										end
									end
								elseif ((v82 <= 226) or (1368 >= 3378)) then
									if ((v82 > (1861 - (486 + 1150))) or (3719 >= 4268)) then
										local v3876;
										local v3877;
										v79[v81[818 - (356 + 460)]] = v81[3 + 0];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v79[v81[3 - 1]] = v79[v81[2 + 1]][v81[1457 - (1281 + 172)]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v3877 = v81[587 - (158 + 427)];
										v3876 = v79[v81[3 + 0]];
										v79[v3877 + (3 - 2)] = v3876;
										v79[v3877] = v3876[v81[4]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[878 - (103 + 773)]] = v63[v81[3 + 0]];
										v73 = v73 + (1495 - (739 + 755));
										v81 = v69[v73];
										v79[v81[345 - (39 + 304)]] = v79[v81[3]][v81[4]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v3877 = v81[507 - (129 + 376)];
										v79[v3877] = v79[v3877](v13(v79, v3877 + (1541 - (282 + 1258)), v81[1290 - (204 + 1083)]));
										v73 = v73 + (707 - (471 + 235));
										v81 = v69[v73];
										if not v79[v81[5 - 3]] then
											v73 = v73 + (1088 - (38 + 1049));
										else
											v73 = v81[1628 - (1437 + 188)];
										end
									else
										v79[v81[2]] = v79[v81[1 + 2]][v81[2 + 2]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[1 + 1]] = v63[v81[5 - 2]];
										v73 = v73 + (44 - (11 + 32));
										v81 = v69[v73];
										v79[v81[257 - (81 + 174)]] = v79[v81[7 - 4]][v81[17 - 13]];
										v73 = v73 + (765 - (513 + 251));
										v81 = v69[v73];
										v79[v81[2]][v81[3]] = v79[v81[7 - 3]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[1 + 1]] = v63[v81[1127 - (1075 + 49)]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[769 - (373 + 393)]][v81[12 - 8]];
										v73 = v73 + (889 - (875 + 13));
										v81 = v69[v73];
										if not v79[v81[1 + 1]] then
											v73 = v73 + 1 + 0;
										else
											v73 = v81[2 + 1];
										end
									end
								elseif (v82 > (941 - 714)) then
									local v3904;
									local v3905;
									v3905 = v81[5 - 3];
									v3904 = v79[v81[1 + 2]];
									v79[v3905 + (3 - 2)] = v3904;
									v79[v3905] = v3904[v81[4 + 0]];
									v73 = v73 + (4 - 3);
									v81 = v69[v73];
									v79[v81[335 - (273 + 60)]] = v63[v81[3]];
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v79[v81[4 - 2]] = v79[v81[3]][v81[15 - 11]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2 - 0]] = v81[558 - (361 + 194)] ~= (0 + 0);
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v3905 = v81[2];
									v79[v3905] = v79[v3905](v13(v79, v3905 + 1 + 0, v81[11 - 8]));
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									if (not v79[v81[7 - 5]] or (3821 < 2498)) then
										v73 = v73 + (848 - (257 + 590));
									else
										v73 = v81[3];
									end
								else
									local v3918;
									v79[v81[7 - 5]] = v79[v81[1958 - (856 + 1099)]][v81[1930 - (1556 + 370)]];
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v79[v81[3 - 1]]();
									v73 = v73 + (173 - (24 + 148));
									v81 = v69[v73];
									v79[v81[1 + 1]] = v63[v81[3]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[3 - 1]] = v63[v81[3 + 0]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v3918 = v81[6 - 4];
									v79[v3918](v79[v3918 + (1 - 0)]);
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v73 = v81[3];
								end
							elseif ((2991 < 4132) and (v82 <= (702 - 467))) then
								if (v82 <= 231) then
									if (v82 <= (15 + 214)) then
										local v526;
										local v527;
										v64[v81[3 + 0]] = v79[v81[2]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2]] = v64[v81[13 - 10]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v527 = v81[1 + 1];
										v526 = v79[v81[3]];
										v79[v527 + (2 - 1)] = v526;
										v79[v527] = v526[v81[11 - 7]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[7 - 5]] = v63[v81[7 - 4]];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v79[v81[2 + 0]] = v79[v81[4 - 1]][v81[1 + 3]];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v527 = v81[2];
										v79[v527] = v79[v527](v13(v79, v527 + 1, v81[2 + 1]));
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[1721 - (976 + 743)]] = v79[v81[3]][v81[8 - 4]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v527 = v81[1516 - (1273 + 241)];
										v526 = v79[v81[7 - 4]];
										v79[v527 + (2 - 1)] = v526;
										v79[v527] = v526[v81[4]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[267 - (135 + 130)]] = v64[v81[4 - 1]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[3]][v81[4 + 0]];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v527 = v81[6 - 4];
										v79[v527] = v79[v527](v13(v79, v527 + 1, v81[2 + 1]));
										v73 = v73 + (1742 - (1289 + 452));
										v81 = v69[v73];
										v79[v81[1 + 1]] = v79[v81[332 - (90 + 239)]];
										v73 = v73 + (930 - (117 + 812));
										v81 = v69[v73];
										do
											return;
										end
									elseif (v82 == (1229 - (146 + 853))) then
										local v3928 = 0;
										local v3929;
										local v3930;
										while true do
											if (v3928 == 1) then
												v79[v81[1967 - (986 + 979)]] = v79[v81[661 - (555 + 103)]][v81[5 - 1]];
												v73 = v73 + 1;
												v81 = v69[v73];
												v3930 = v81[739 - (329 + 408)];
												v3929 = v79[v81[1 + 2]];
												v3928 = 1712 - (838 + 872);
											end
											if (v3928 == (4 + 2)) then
												v79[v81[525 - (400 + 123)]] = v63[v81[1 + 2]];
												v73 = v73 + (1957 - (547 + 1409));
												v81 = v69[v73];
												v79[v81[2]] = v79[v81[3]][v81[4]];
												v73 = v73 + 1;
												v3928 = 87 - (73 + 7);
											end
											if (v3928 == (0 + 0)) then
												v3929 = nil;
												v3930 = nil;
												v79[v81[2]] = v63[v81[3 + 0]];
												v73 = v73 + (2 - 1);
												v81 = v69[v73];
												v3928 = 1 - 0;
											end
											if (v3928 == 7) then
												v81 = v69[v73];
												v79[v81[2 + 0]] = v79[v81[1 + 2]][v81[3 + 1]];
												break;
											end
											if (((17 - 12) == v3928) or (3868 <= 60)) then
												v3929 = v79[v81[1992 - (98 + 1891)]];
												v79[v3930 + (40 - (16 + 23))] = v3929;
												v79[v3930] = v3929[v81[1736 - (1184 + 548)]];
												v73 = v73 + (1531 - (270 + 1260));
												v81 = v69[v73];
												v3928 = 4 + 2;
											end
											if ((v3928 == (738 - (60 + 675))) or (2517 > 3671)) then
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v79[v81[1204 - (984 + 218)]] = v79[v81[3]][v81[4]];
												v73 = v73 + (383 - (45 + 337));
												v81 = v69[v73];
												v3928 = 332 - (74 + 254);
											end
											if ((4911 >= 1596) and (v3928 == (1 + 3))) then
												v3930 = v81[2 + 0];
												v79[v3930] = v79[v3930](v13(v79, v3930 + (1350 - (1190 + 159)), v81[3 + 0]));
												v73 = v73 + 1;
												v81 = v69[v73];
												v3930 = v81[1 + 1];
												v3928 = 5 + 0;
											end
											if (2 == v3928) then
												v79[v3930 + (2 - 1)] = v3929;
												v79[v3930] = v3929[v81[4]];
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v79[v81[1420 - (192 + 1226)]] = v63[v81[739 - (511 + 225)]];
												v3928 = 3 + 0;
											end
										end
									else
										local v3931 = 1395 - (1200 + 195);
										local v3932;
										while true do
											if (v3931 == (1585 - (329 + 1249))) then
												v73 = v73 + (778 - (631 + 146));
												v81 = v69[v73];
												v79[v81[7 - 5]] = v81[1 + 2];
												v3931 = 1041 - (510 + 523);
											end
											if ((v3931 == 6) or (1621 == 221)) then
												v73 = v73 + 1;
												v81 = v69[v73];
												v79[v81[1 + 1]] = {};
												v3931 = 31 - 24;
											end
											if (v3931 == 0) then
												v3932 = nil;
												v79[v81[2]] = v81[2 + 1];
												v73 = v73 + (2 - 1);
												v3931 = 1472 - (996 + 475);
											end
											if (v3931 == 3) then
												v81 = v69[v73];
												v79[v81[1 + 1]][v79[v81[3]]] = v79[v81[6 - 2]];
												v73 = v73 + 1;
												v3931 = 4;
											end
											if (((5 + 0) == v3931) or (296 > 1992)) then
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v79[v81[1944 - (1132 + 810)]][v79[v81[4 - 1]]] = v79[v81[15 - 11]];
												v3931 = 6;
											end
											if (v3931 == (1 + 0)) then
												v81 = v69[v73];
												v79[v81[1963 - (941 + 1020)]] = v79[v81[3]][v79[v81[531 - (313 + 214)]]];
												v73 = v73 + (545 - (363 + 181));
												v3931 = 2 + 0;
											end
											if (v3931 == (1 + 7)) then
												v73 = v73 + 1;
												v81 = v69[v73];
												v79[v81[1451 - (91 + 1358)]] = v79[v81[1 + 2]][v79[v81[8 - 4]]];
												v3931 = 15 - 6;
											end
											if (v3931 == 2) then
												v81 = v69[v73];
												v79[v81[2 + 0]] = v81[8 - 5];
												v73 = v73 + (1 - 0);
												v3931 = 8 - 5;
											end
											if (v3931 == (1 + 3)) then
												v81 = v69[v73];
												v3932 = v81[2];
												v79[v3932] = v79[v3932](v13(v79, v3932 + 1 + 0, v81[3 + 0]));
												v3931 = 20 - 15;
											end
											if (9 == v3931) then
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v79[v81[6 - 4]] = v81[871 - (311 + 557)];
												break;
											end
										end
									end
								elseif (v82 <= (396 - (117 + 46))) then
									if ((1858 > 153) and (v82 == 232)) then
										local v3933;
										v79[v81[1 + 1]] = v79[v81[507 - (268 + 236)]][v81[2 + 2]];
										v73 = v73 + (181 - (92 + 88));
										v81 = v69[v73];
										v3933 = v81[2 - 0];
										v79[v3933] = v79[v3933](v13(v79, v3933 + (1085 - (745 + 339)), v81[2 + 1]));
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[3 - 1]] = v64[v81[1 + 2]];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[741 - (582 + 156)]][v81[1774 - (268 + 1502)]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[1448 - (219 + 1227)]] = v79[v81[1 + 2]][v81[11 - 7]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[7 - 4]][v81[12 - 8]];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v3933 = v81[1978 - (1855 + 121)];
										v79[v3933] = v79[v3933](v13(v79, v3933 + (4 - 3), v81[7 - 4]));
										v73 = v73 + (787 - (452 + 334));
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[3 - 0]] - v79[v81[1397 - (698 + 695)]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[6 - 3]][v81[4]];
										v73 = v73 + 1;
										v81 = v69[v73];
										if ((v79[v81[5 - 3]] < v79[v81[5 - 1]]) or (454 >= 825)) then
											v73 = v73 + (1 - 0);
										else
											v73 = v81[3];
										end
									else
										local v3948;
										v79[v81[2 - 0]][v79[v81[10 - 7]]] = v79[v81[4]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2]] = v81[1732 - (529 + 1200)];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[280 - (199 + 79)]] = v79[v81[3 + 0]][v79[v81[12 - 8]]];
										v73 = v73 + (585 - (120 + 464));
										v81 = v69[v73];
										v79[v81[3 - 1]] = v81[3 + 0];
										v73 = v73 + (755 - (33 + 721));
										v81 = v69[v73];
										v79[v81[2]][v79[v81[1366 - (1061 + 302)]]] = v79[v81[1733 - (719 + 1010)]];
										v73 = v73 + (3 - 2);
										v81 = v69[v73];
										v3948 = v81[941 - (446 + 493)];
										v79[v3948] = v79[v3948](v13(v79, v3948 + 1 + 0, v81[1147 - (602 + 542)]));
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[4 - 2]][v79[v81[364 - (276 + 85)]]] = v79[v81[4]];
										v73 = v73 + (1381 - (816 + 564));
										v81 = v69[v73];
										v79[v81[4 - 2]] = v81[917 - (854 + 60)];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[697 - (227 + 468)]] = v79[v81[2 + 1]][v79[v81[533 - (54 + 475)]]];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v79[v81[2]] = v81[35 - (21 + 11)];
									end
								elseif (v82 > 234) then
									local v3968 = 0 + 0;
									local v3969;
									while true do
										if (v3968 == (1604 - (1351 + 244))) then
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[2 + 0]] = v79[v81[3]][v79[v81[15 - 11]]];
											break;
										end
										if (v3968 == 5) then
											v81 = v69[v73];
											v79[v81[426 - (407 + 17)]] = v81[1 + 2];
											v73 = v73 + 1 + 0;
											v3968 = 955 - (174 + 775);
										end
										if ((2966 <= 4275) and ((1767 - (601 + 1159)) == v3968)) then
											v73 = v73 + (1149 - (388 + 760));
											v81 = v69[v73];
											v79[v81[1 + 1]][v79[v81[3]]] = v79[v81[1954 - (900 + 1050)]];
											v3968 = 8;
										end
										if (v3968 == (0 + 0)) then
											v3969 = nil;
											v79[v81[1 + 1]] = v64[v81[3 + 0]];
											v73 = v73 + 1 + 0;
											v3968 = 3 - 2;
										end
										if ((v3968 == (3 + 0)) or (1190 == 3173)) then
											v81 = v69[v73];
											v79[v81[284 - (80 + 202)]] = v81[3];
											v73 = v73 + 1 + 0;
											v3968 = 11 - 7;
										end
										if ((v3968 == 1) or (2461 == 1779)) then
											v81 = v69[v73];
											v79[v81[2 + 0]] = v81[3 - 0];
											v73 = v73 + (3 - 2);
											v3968 = 2;
										end
										if (v3968 == (4 + 2)) then
											v81 = v69[v73];
											v3969 = v81[666 - (308 + 356)];
											v79[v3969] = v79[v3969](v13(v79, v3969 + 1 + 0, v81[3]));
											v3968 = 22 - 15;
										end
										if ((v3968 == (8 + 0)) or (3040 == 3865)) then
											v73 = v73 + (1 - 0);
											v81 = v69[v73];
											v79[v81[1056 - (1021 + 33)]] = v81[1054 - (46 + 1005)];
											v3968 = 8 + 1;
										end
										if ((v3968 == (8 - 4)) or (4927 <= 1693)) then
											v81 = v69[v73];
											v79[v81[2 + 0]] = v81[3];
											v73 = v73 + 1;
											v3968 = 6 - 1;
										end
										if ((v3968 == (1 + 1)) or (3468 <= 287)) then
											v81 = v69[v73];
											v79[v81[3 - 1]] = v79[v81[8 - 5]][v79[v81[6 - 2]]];
											v73 = v73 + (2 - 1);
											v3968 = 2 + 1;
										end
									end
								else
									local v3970;
									v79[v81[2 - 0]] = v79[v81[1 + 2]][v81[1060 - (131 + 925)]];
									v73 = v73 + (1289 - (347 + 941));
									v81 = v69[v73];
									v79[v81[1623 - (893 + 728)]][v81[2 + 1]] = v79[v81[2 + 2]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2 - 0]][v81[6 - 3]] = v81[2 + 2];
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v79[v81[2]][v81[3 + 0]] = v81[4];
									v73 = v73 + (909 - (599 + 309));
									v81 = v69[v73];
									v79[v81[1914 - (1598 + 314)]] = v64[v81[3]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[8 - 5]][v81[1618 - (274 + 1340)]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1 + 1]] = v81[1417 - (557 + 857)];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2]] = v81[9 - 6];
									v73 = v73 + (1113 - (581 + 531));
									v81 = v69[v73];
									v79[v81[6 - 4]] = v81[1338 - (1314 + 21)];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[2]] = v81[1 + 2];
									v73 = v73 + (1190 - (487 + 702));
									v81 = v69[v73];
									v3970 = v81[1 + 1];
									v79[v3970] = v79[v3970](v13(v79, v3970 + 1, v81[4 - 1]));
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[5 - 3]][v81[1 + 2]] = v79[v81[1 + 3]];
									v73 = v73 + (539 - (86 + 452));
									v81 = v69[v73];
									v79[v81[2]] = v81[2 + 1];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v73 = v81[7 - 4];
								end
							elseif (v82 <= (1310 - (123 + 949))) then
								if (v82 <= 236) then
									local v553;
									v79[v81[915 - (836 + 77)]] = v79[v81[653 - (354 + 296)]][v81[96 - (5 + 87)]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1 + 1]] = v63[v81[3 + 0]];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[2 + 0]] = v79[v81[685 - (267 + 415)]][v81[9 - 5]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v553 = v81[1 + 1];
									v79[v553] = v79[v553](v79[v553 + 1]);
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2 + 0]] = v63[v81[1 + 2]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[1895 - (1799 + 93)]][v81[2 + 2]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1 + 1]][v81[22 - (6 + 13)]] = v79[v81[1063 - (383 + 676)]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[342 - (119 + 221)]] = v64[v81[1 + 2]];
									v73 = v73 + (482 - (345 + 136));
									v81 = v69[v73];
									v79[v81[2 - 0]] = v63[v81[8 - 5]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[3 - 1]] = v79[v81[8 - 5]][v81[4]];
									v73 = v73 + (477 - (345 + 131));
									v81 = v69[v73];
									v79[v81[1303 - (916 + 385)]] = v79[v81[3]][v79[v81[296 - (6 + 286)]]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2 + 0]] = v79[v81[3 + 0]][v81[295 - (151 + 140)]];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[956 - (32 + 922)]] = v64[v81[845 - (322 + 520)]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2 + 0]] = v79[v81[2 + 1]][v81[2 + 2]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[223 - (187 + 34)]] = v79[v81[3 + 0]][v81[6 - 2]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									if not v79[v81[2]] then
										v73 = v73 + 1;
									else
										v73 = v81[299 - (194 + 102)];
									end
								elseif (v82 > (789 - (49 + 503))) then
									local v3997;
									v79[v81[5 - 3]] = v81[1352 - (12 + 1337)];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[3]][v79[v81[4 + 0]]];
									v73 = v73 + (1066 - (38 + 1027));
									v81 = v69[v73];
									v79[v81[4 - 2]] = v64[v81[124 - (11 + 110)]];
									v73 = v73 + (816 - (199 + 616));
									v81 = v69[v73];
									v79[v81[1 + 1]] = v81[482 - (396 + 83)];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[3]][v79[v81[4]]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1787 - (774 + 1011)]] = v81[3];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]] = v81[3];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2]] = v81[5 - 2];
									v73 = v73 + (390 - (94 + 295));
									v81 = v69[v73];
									v3997 = v81[2];
									v79[v3997] = v79[v3997](v13(v79, v3997 + 1 + 0, v81[1 + 2]));
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[4 - 2]][v79[v81[2 + 1]]] = v79[v81[4 + 0]];
								else
									local v4015 = 0 - 0;
									local v4016;
									while true do
										if (v4015 == (0 - 0)) then
											v4016 = nil;
											v79[v81[1 + 1]] = v63[v81[3]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v4015 = 1 - 0;
										end
										if (v4015 == (13 - (6 + 4))) then
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v79[v81[855 - (629 + 224)]] = v64[v81[6 - 3]];
											v73 = v73 + (1523 - (466 + 1056));
											v4015 = 4;
										end
										if (v4015 == (770 - (485 + 280))) then
											v79[v81[93 - (51 + 40)]] = v79[v81[796 - (610 + 183)]] - v79[v81[3 + 1]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											if (v81[2] < v79[v81[1 + 3]]) then
												v73 = v73 + (2 - 1);
											else
												v73 = v81[775 - (572 + 200)];
											end
											break;
										end
										if (v4015 == (1976 - (1598 + 377))) then
											v79[v81[2]] = v79[v81[5 - 2]][v81[4 + 0]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[1280 - (881 + 397)]] = v79[v81[7 - 4]][v79[v81[4]]];
											v4015 = 1215 - (892 + 321);
										end
										if (v4015 == 4) then
											v81 = v69[v73];
											v79[v81[629 - (441 + 186)]] = v79[v81[3 + 0]][v81[1425 - (606 + 815)]];
											v73 = v73 + (4 - 3);
											v81 = v69[v73];
											v4015 = 5;
										end
										if (v4015 == (2 + 0)) then
											v73 = v73 + 1;
											v81 = v69[v73];
											v4016 = v81[2 + 0];
											v79[v4016] = v79[v4016]();
											v4015 = 1175 - (1055 + 117);
										end
									end
								end
							elseif (v82 <= 240) then
								if ((3066 >= 2650) and (v82 > (927 - (266 + 422)))) then
									local v4017 = 0 - 0;
									local v4018;
									local v4019;
									local v4020;
									while true do
										if (4 == v4017) then
											v4019 = v79[v4020];
											v4018 = v81[1894 - (1098 + 793)];
											for v12392 = 1, v4018 do
												v4019[v12392] = v79[v4020 + v12392];
											end
											break;
										end
										if ((3963 > 21) and (v4017 == 0)) then
											v4018 = nil;
											v4019 = nil;
											v4020 = nil;
											v79[v81[1 + 1]] = v63[v81[3]];
											v4017 = 1560 - (12 + 1547);
										end
										if (v4017 == (1359 - (149 + 1209))) then
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[1016 - (6 + 1008)]] = v63[v81[3]];
											v73 = v73 + (1347 - (603 + 743));
											v4017 = 242 - (152 + 88);
										end
										if (v4017 == (319 - (207 + 110))) then
											v81 = v69[v73];
											v79[v81[2]] = v63[v81[5 - 2]];
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v4017 = 3;
										end
										if (v4017 == (1836 - (1401 + 432))) then
											v79[v81[3 - 1]] = v63[v81[3]];
											v73 = v73 + (1038 - (838 + 199));
											v81 = v69[v73];
											v4020 = v81[5 - 3];
											v4017 = 8 - 4;
										end
									end
								else
									local v4021 = 430 - (320 + 110);
									local v4022;
									local v4023;
									while true do
										if ((2862 > 1546) and (v4021 == (9 - 5))) then
											v4023 = v81[3 - 1];
											v4022 = v79[v81[2 + 1]];
											v79[v4023 + 1] = v4022;
											v79[v4023] = v4022[v79[v81[141 - (123 + 14)]]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v4021 = 5;
										end
										if ((0 + 0) == v4021) then
											v4022 = nil;
											v4023 = nil;
											v79[v81[5 - 3]][v79[v81[105 - (62 + 40)]]] = v79[v81[9 - 5]];
											v73 = v73 + (1098 - (823 + 274));
											v81 = v69[v73];
											v79[v81[966 - (134 + 830)]] = v81[7 - 4];
											v4021 = 3 - 2;
										end
										if ((4336 == 4336) and (v4021 == (1582 - (1430 + 151)))) then
											v73 = v73 + (1359 - (104 + 1254));
											v81 = v69[v73];
											v79[v81[426 - (161 + 263)]] = v79[v81[5 - 2]][v79[v81[4]]];
											v73 = v73 + (1397 - (317 + 1079));
											v81 = v69[v73];
											v4023 = v81[3 - 1];
											v4021 = 5 - 3;
										end
										if (v4021 == (318 - (76 + 239))) then
											v79[v81[2]] = v79[v81[376 - (349 + 24)]][v79[v81[4]]];
											v73 = v73 + (1 - 0);
											v81 = v69[v73];
											v79[v81[4 - 2]] = v81[1 + 2];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v4021 = 1638 - (1428 + 206);
										end
										if ((v4021 == 5) or (3039 >= 4314)) then
											v79[v81[1507 - (1207 + 298)]] = {};
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[350 - (224 + 124)]] = v81[3];
											break;
										end
										if (v4021 == (34 - (7 + 25))) then
											v79[v4023](v13(v79, v4023 + (2 - 1), v81[3]));
											v73 = v73 + (1053 - (886 + 166));
											v81 = v69[v73];
											v79[v81[2 - 0]] = v81[1 + 2];
											v73 = v73 + 1;
											v81 = v69[v73];
											v4021 = 321 - (142 + 176);
										end
									end
								end
							elseif (v82 > (206 + 35)) then
								local v4024;
								local v4025;
								v79[v81[940 - (584 + 354)]] = v79[v81[491 - (384 + 104)]][v81[11 - 7]];
								v73 = v73 + (36 - (13 + 22));
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[2 + 1];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[5 - 3]] = v81[7 - 4];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v4025 = v81[1 + 1];
								v79[v4025] = v79[v4025](v13(v79, v4025 + 1 + 0, v81[2 + 1]));
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[5 - 3]] = v79[v81[3]];
								v73 = v73 + (253 - (106 + 146));
								v81 = v69[v73];
								v79[v81[3 - 1]] = v79[v81[3]][v81[6 - 2]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v4025 = v81[7 - 5];
								v4024 = v79[v81[1021 - (75 + 943)]];
								v79[v4025 + (1064 - (972 + 91))] = v4024;
								v79[v4025] = v4024[v81[13 - 9]];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[1348 - (918 + 428)]] = v63[v81[1600 - (1099 + 498)]];
								v73 = v73 + (1686 - (997 + 688));
								v81 = v69[v73];
								v79[v81[1424 - (1406 + 16)]] = v79[v81[3]][v81[4]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v4025 = v81[2 + 0];
								v79[v4025] = v79[v4025](v13(v79, v4025 + (920 - (715 + 204)), v81[3 + 0]));
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								if not v79[v81[665 - (275 + 388)]] then
									v73 = v73 + 1;
								else
									v73 = v81[3];
								end
							else
								local v4047 = 0;
								local v4048;
								local v4049;
								local v4050;
								local v4051;
								local v4052;
								while true do
									if (v4047 == (1 - 0)) then
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[1 + 1]] = v79[v81[3 + 0]] - v79[v81[4]];
										v73 = v73 + (3 - 2);
										v81 = v69[v73];
										v4047 = 1 + 1;
									end
									if (v4047 == (13 - 9)) then
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[1 + 1]] = v64[v81[3 + 0]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v4047 = 570 - (5 + 560);
									end
									if ((4690 > 2721) and (v4047 == (414 - (77 + 329)))) then
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[3 + 0]][v81[4]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[1 + 1]] = v81[3];
										v4047 = 1960 - (397 + 1554);
									end
									if ((4849 >= 1013) and (v4047 == (1267 - (219 + 1038)))) then
										v4052 = v81[2];
										v4050, v4051 = v72(v79[v4052](v13(v79, v4052 + 1 + 0, v81[3])));
										v74 = (v4051 + v4052) - (1 + 0);
										v4049 = 0;
										for v12395 = v4052, v74 do
											v4049 = v4049 + 1;
											v79[v12395] = v4050[v4049];
										end
										v4047 = 11;
									end
									if ((1333 >= 28) and (v4047 == (3 - 1))) then
										v79[v81[2]] = v79[v81[3]] / v79[v81[8 - 4]];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v79[v81[1 + 1]] = v64[v81[755 - (404 + 348)]];
										v73 = v73 + (149 - (99 + 49));
										v4047 = 3 + 0;
									end
									if (v4047 == 0) then
										v4048 = nil;
										v4049 = nil;
										v4050, v4051 = nil;
										v4052 = nil;
										v79[v81[2]] = v63[v81[3]];
										v4047 = 1;
									end
									if (v4047 == (1976 - (1223 + 746))) then
										v79[v4052] = v79[v4052](v13(v79, v4052 + 1, v81[3]));
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v79[v81[2 + 0]] = v64[v81[1364 - (1247 + 114)]];
										v73 = v73 + (3 - 2);
										v4047 = 7 + 1;
									end
									if (v4047 == (14 - 8)) then
										v81 = v69[v73];
										v79[v81[5 - 3]] = v79[v81[3 - 0]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v4052 = v81[1941 - (291 + 1648)];
										v4047 = 19 - 12;
									end
									if ((4004 > 112) and (v4047 == 5)) then
										v79[v81[4 - 2]] = v79[v81[3 + 0]][v81[13 - 9]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[1700 - (1584 + 114)]] = v81[9 - 6];
										v73 = v73 + 1;
										v4047 = 6;
									end
									if (v4047 == (1768 - (957 + 808))) then
										v81 = v69[v73];
										v79[v81[7 - 5]] = v79[v81[12 - 9]][v81[1075 - (435 + 636)]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[787 - (342 + 443)]] = {};
										v4047 = 4;
									end
									if (v4047 == (16 - 5)) then
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v4052 = v81[2];
										v4048 = v79[v4052];
										for v12398 = v4052 + 1 + 0, v74 do
											v7(v4048, v79[v12398]);
										end
										break;
									end
									if ((4925 >= 3741) and ((7 + 2) == v4047)) then
										v73 = v73 + (533 - (321 + 211));
										v81 = v69[v73];
										v79[v81[2]] = v81[11 - 8];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v4047 = 18 - 8;
									end
								end
							end
						elseif ((1015 <= 4814) and (v82 <= (840 - 585))) then
							if (v82 <= 248) then
								if (v82 <= 245) then
									if ((3434 > 2141) and (v82 <= (1485 - (506 + 736)))) then
										local v582 = v81[1343 - (428 + 913)];
										do
											return v13(v79, v582, v74);
										end
									elseif (v82 == 244) then
										local v4053 = 0;
										local v4054;
										local v4055;
										while true do
											if (v4053 == (1851 - (834 + 1017))) then
												v4054 = v81[1573 - (1493 + 78)];
												v4055 = v79[v4054];
												v4053 = 1 - 0;
											end
											if ((1850 == 1850) and (v4053 == (1 + 0))) then
												for v12399 = v4054 + 1 + 0, v81[3] do
													v7(v4055, v79[v12399]);
												end
												break;
											end
										end
									else
										local v4056;
										v79[v81[1 + 1]][v79[v81[3 - 0]]] = v79[v81[1 + 3]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[188 - (177 + 9)]] = v81[1256 - (236 + 1017)];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[1982 - (1237 + 742)]][v79[v81[5 - 1]]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v4056 = v81[2 + 0];
										v79[v4056](v13(v79, v4056 + 1 + 0, v81[2 + 1]));
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[5 - 3]] = {};
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[1566 - (566 + 998)]] = v81[2 + 1];
										v73 = v73 + (1629 - (11 + 1617));
										v81 = v69[v73];
										v79[v81[1867 - (1156 + 709)]] = v79[v81[7 - 4]][v79[v81[12 - 8]]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[4 - 2]] = v81[3] ~= (0 + 0);
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[2 - 0]][v79[v81[692 - (131 + 558)]]] = v79[v81[5 - 1]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2]] = v81[3];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[6 - 4]] = v79[v81[3]][v79[v81[5 - 1]]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[1 + 1]] = v81[3];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[1647 - (1417 + 228)]][v79[v81[9 - 6]]] = v79[v81[2 + 2]];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[396 - (134 + 260)]] = v81[3];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[1 + 1]] = v79[v81[1 + 2]][v79[v81[7 - 3]]];
										v73 = v73 + (135 - (49 + 85));
										v81 = v69[v73];
										v79[v81[1 + 1]] = v64[v81[3]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2]] = v81[3];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[4 - 2]] = v79[v81[1 + 2]][v79[v81[4 + 0]]];
										v73 = v73 + (1378 - (922 + 455));
										v81 = v69[v73];
										v79[v81[3 - 1]] = v81[1 + 2];
										v73 = v73 + (62 - (31 + 30));
										v81 = v69[v73];
										v79[v81[2 + 0]] = v81[7 - 4];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2 + 0]] = v81[3];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v4056 = v81[1 + 1];
										v79[v4056] = v79[v4056](v13(v79, v4056 + (1 - 0), v81[25 - (5 + 17)]));
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[3 - 1]][v79[v81[73 - (65 + 5)]]] = v79[v81[3 + 1]];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[1 + 1]] = v81[1 + 2];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[843 - (685 + 156)]] = v79[v81[9 - 6]][v79[v81[3 + 1]]];
										v73 = v73 + (3 - 2);
										v81 = v69[v73];
										v79[v81[734 - (620 + 112)]] = v81[7 - 4];
										v73 = v73 + (3 - 2);
										v81 = v69[v73];
										v79[v81[251 - (89 + 160)]][v79[v81[7 - 4]]] = v79[v81[4]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[1609 - (975 + 632)]] = v81[3];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v79[v81[2 + 0]] = v79[v81[4 - 1]][v79[v81[514 - (358 + 152)]]];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										for v7863 = v81[1113 - (727 + 384)], v81[11 - 8] do
											v79[v7863] = nil;
										end
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[2]][v79[v81[7 - 4]]] = v79[v81[4 + 0]];
										v73 = v73 + (1226 - (804 + 421));
										v81 = v69[v73];
										v79[v81[9 - 7]] = v81[9 - 6];
										v73 = v73 + (3 - 2);
										v81 = v69[v73];
										v79[v81[1075 - (1029 + 44)]] = v79[v81[3 + 0]][v79[v81[3 + 1]]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[519 - (139 + 378)]] = v81[255 - (181 + 71)] ~= (0 + 0);
										v73 = v73 + (3 - 2);
										v81 = v69[v73];
										v79[v81[3 - 1]][v79[v81[3 - 0]]] = v79[v81[4]];
										v73 = v73 + (300 - (243 + 56));
										v81 = v69[v73];
										v79[v81[2]] = v81[146 - (56 + 87)];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[1 + 1]] = v79[v81[850 - (523 + 324)]][v79[v81[4 + 0]]];
										v73 = v73 + (3 - 2);
										v81 = v69[v73];
										for v7865 = v81[2 + 0], v81[6 - 3] do
											v79[v7865] = nil;
										end
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[2 + 0]][v79[v81[3 + 0]]] = v79[v81[894 - (9 + 881)]];
										v73 = v73 + (1486 - (1429 + 56));
										v81 = v69[v73];
										v79[v81[3 - 1]] = v81[3 - 0];
										v73 = v73 + (335 - (295 + 39));
										v81 = v69[v73];
										v79[v81[360 - (223 + 135)]] = v79[v81[3]][v79[v81[7 - 3]]];
										v73 = v73 + 1;
										v81 = v69[v73];
										for v7867 = v81[2], v81[5 - 2] do
											v79[v7867] = nil;
										end
										v73 = v73 + (1940 - (1472 + 467));
										v81 = v69[v73];
										v79[v81[1 + 1]][v79[v81[2 + 1]]] = v79[v81[126 - (103 + 19)]];
										v73 = v73 + (1834 - (1172 + 661));
										v81 = v69[v73];
										v79[v81[1 + 1]] = v81[1 + 2];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v79[v81[1074 - (373 + 699)]] = v79[v81[1552 - (331 + 1218)]][v79[v81[6 - 2]]];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										for v7869 = v81[1 + 1], v81[1 + 2] do
											v79[v7869] = nil;
										end
										v73 = v73 + (925 - (169 + 755));
										v81 = v69[v73];
										v79[v81[99 - (23 + 74)]][v79[v81[1965 - (935 + 1027)]]] = v79[v81[2 + 2]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2 + 0]] = v81[1872 - (287 + 1582)];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[4 - 2]] = v79[v81[1 + 2]][v79[v81[4]]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										for v7871 = v81[545 - (198 + 345)], v81[3] do
											v79[v7871] = nil;
										end
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[1 + 1]][v79[v81[988 - (135 + 850)]]] = v79[v81[14 - 10]];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[860 - (150 + 708)]] = v81[3];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[6 - 4]] = v79[v81[1 + 2]][v79[v81[1 + 3]]];
										v73 = v73 + (35 - (28 + 6));
										v81 = v69[v73];
										for v7873 = v81[529 - (380 + 147)], v81[3 + 0] do
											v79[v7873] = nil;
										end
										v73 = v73 + (3 - 2);
										v81 = v69[v73];
										v79[v81[909 - (875 + 32)]][v79[v81[14 - 11]]] = v79[v81[2 + 2]];
										v73 = v73 + (880 - (611 + 268));
										v81 = v69[v73];
										v79[v81[6 - 4]] = v81[2 + 1];
										v73 = v73 + (575 - (196 + 378));
										v81 = v69[v73];
										v79[v81[7 - 5]] = v79[v81[11 - 8]][v79[v81[565 - (549 + 12)]]];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[5 - 3]] = v81[3] ~= (0 - 0);
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2 + 0]][v79[v81[1862 - (1370 + 489)]]] = v79[v81[1 + 3]];
										v73 = v73 + (3 - 2);
										v81 = v69[v73];
										v79[v81[2 + 0]] = v81[8 - 5];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[1 + 1]] = v79[v81[3 + 0]][v79[v81[4]]];
										v73 = v73 + (1267 - (1059 + 207));
										v81 = v69[v73];
										for v7875 = v81[1 + 1], v81[2 + 1] do
											v79[v7875] = nil;
										end
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2]][v79[v81[2 + 1]]] = v79[v81[4]];
										v73 = v73 + (1484 - (392 + 1091));
										v81 = v69[v73];
										v79[v81[1 + 1]] = v81[3];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v79[v81[6 - 4]] = v79[v81[2 + 1]][v79[v81[4]]];
										v73 = v73 + (3 - 2);
										v81 = v69[v73];
										v79[v81[3 - 1]] = {};
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v79[v81[2]] = v81[10 - 7];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[6 - 3]][v79[v81[1418 - (791 + 623)]]];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[1892 - (1704 + 186)]] = v64[v81[3]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[628 - (406 + 220)]] = v81[11 - 8];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[1797 - (779 + 1016)]] = v79[v81[2 + 1]][v79[v81[3 + 1]]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[1 + 1]] = v81[8 - 5];
										v73 = v73 + (391 - (79 + 311));
										v81 = v69[v73];
										v79[v81[2]] = v81[3];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2]] = v81[3];
										v73 = v73 + (115 - (90 + 24));
										v81 = v69[v73];
										v4056 = v81[5 - 3];
										v79[v4056] = v79[v4056](v13(v79, v4056 + 1, v81[1 + 2]));
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2]][v79[v81[2 + 1]]] = v79[v81[1188 - (298 + 886)]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2]] = v81[3];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2 + 0]] = v79[v81[3]][v79[v81[6 - 2]]];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v79[v81[2 + 0]] = v64[v81[4 - 1]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[1 + 1]] = v81[1480 - (956 + 521)];
									end
								elseif (v82 <= 246) then
									local v583 = 0 - 0;
									while true do
										if (v583 == (0 - 0)) then
											v79[v81[4 - 2]] = v63[v81[7 - 4]];
											v73 = v73 + (1 - 0);
											v81 = v69[v73];
											v583 = 1;
										end
										if (v583 == (7 - 4)) then
											v79[v81[2]] = v79[v81[6 - 3]][v81[1 + 3]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v583 = 2 + 2;
										end
										if (v583 == (1 + 0)) then
											v79[v81[2]][v81[2 + 1]] = v79[v81[10 - 6]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v583 = 1 + 1;
										end
										if ((1328 - (1010 + 316)) == v583) then
											v79[v81[2]] = v63[v81[3 + 0]];
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v583 = 1 + 2;
										end
										if (v583 == (2 + 2)) then
											if v79[v81[1 + 1]] then
												v73 = v73 + (1220 - (1130 + 89));
											else
												v73 = v81[3];
											end
											break;
										end
									end
								elseif (v82 == (33 + 214)) then
									v79[v81[1763 - (1437 + 324)]][v81[3 + 0]] = v81[942 - (87 + 851)];
								else
									local v4146;
									v4146 = v81[2];
									v79[v4146](v79[v4146 + 1]);
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[6 - 4]] = v64[v81[3 + 0]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[964 - (105 + 857)]] = v63[v81[928 - (859 + 66)]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2 - 0]] = v79[v81[8 - 5]][v81[4]];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[1 + 1]][v79[v81[2 + 1]]] = v81[2 + 2];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v73 = v81[11 - 8];
								end
							elseif (v82 <= (888 - 637)) then
								if (v82 <= (538 - 289)) then
									v79[v81[1 + 1]] = v79[v81[5 - 2]][v79[v81[7 - 3]]];
								elseif ((v82 > (38 + 212)) or (3568 == 2098)) then
									local v4158;
									local v4159;
									v79[v81[667 - (203 + 462)]] = v81[3 - 0];
									v73 = v73 + (268 - (250 + 17));
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[3]][v79[v81[17 - 13]]];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[2 + 0]][v79[v81[3]]] = v79[v81[7 - 3]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v4159 = v81[1272 - (506 + 764)];
									v79[v4159](v13(v79, v4159 + 1, v81[1 + 2]));
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[1 + 2];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[8 - 5]][v79[v81[261 - (144 + 113)]]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[260 - (159 + 99)]] = v81[2 + 1];
									v73 = v73 + 1;
									v81 = v69[v73];
									v4159 = v81[697 - (601 + 94)];
									v4158 = v79[v81[4 - 1]];
									v79[v4159 + 1] = v4158;
									v79[v4159] = v4158[v79[v81[6 - 2]]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[4 - 2]] = {};
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v81[3];
								else
									local v4180 = 595 - (110 + 485);
									local v4181;
									while true do
										if (v4180 == 3) then
											v81 = v69[v73];
											v79[v81[2]] = v64[v81[1142 - (316 + 823)]];
											v73 = v73 + 1;
											v4180 = 1 + 3;
										end
										if ((v4180 == (1580 - (122 + 1458))) or (2101 == 742)) then
											v4181 = nil;
											v79[v81[2 + 0]] = v79[v81[4 - 1]][v81[4]];
											v73 = v73 + (817 - (666 + 150));
											v4180 = 1 + 0;
										end
										if (v4180 == (2 + 3)) then
											v81 = v69[v73];
											v79[v81[2 + 0]] = v79[v81[6 - 3]][v81[4]];
											v73 = v73 + 1;
											v4180 = 1 + 5;
										end
										if ((v4180 == (6 + 0)) or (1104 == 2798)) then
											v81 = v69[v73];
											v79[v81[454 - (424 + 28)]] = v79[v81[605 - (407 + 195)]];
											v73 = v73 + (1 - 0);
											v4180 = 7;
										end
										if (v4180 == (6 - 4)) then
											v81 = v69[v73];
											v79[v81[2 + 0]] = v79[v81[3]] + v79[v81[1 + 3]];
											v73 = v73 + (2 - 1);
											v4180 = 5 - 2;
										end
										if ((1687 < 4366) and (v4180 == (1 + 0))) then
											v81 = v69[v73];
											v79[v81[2 - 0]] = v79[v81[8 - 5]] * v79[v81[4 + 0]];
											v73 = v73 + 1;
											v4180 = 2;
										end
										if (v4180 == 4) then
											v81 = v69[v73];
											v79[v81[6 - 4]] = v79[v81[7 - 4]][v81[4]];
											v73 = v73 + 1;
											v4180 = 5;
										end
										if (v4180 == 8) then
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[6 - 4]][v81[3]] = v79[v81[4]];
											v4180 = 34 - 25;
										end
										if ((v4180 == (6 + 3)) or (1802 > 4502)) then
											v73 = v73 + 1;
											v81 = v69[v73];
											v73 = v81[3 + 0];
											break;
										end
										if ((v4180 == (1199 - (274 + 918))) or (771 > 2713)) then
											v81 = v69[v73];
											v4181 = v81[1 + 1];
											v79[v4181] = v79[v4181](v13(v79, v4181 + 1, v81[14 - 11]));
											v4180 = 8;
										end
									end
								end
							elseif (v82 <= (215 + 38)) then
								if (v82 > (203 + 49)) then
									v79[v81[1815 - (1030 + 783)]] = v29(v70[v81[2 + 1]], nil, v64);
								else
									local v4183;
									v79[v81[2 - 0]] = v79[v81[1 + 2]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v81[706 - (167 + 536)];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[5 - 3]] = v81[3 + 0];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v4183 = v81[2];
									v79[v4183] = v79[v4183](v13(v79, v4183 + 1, v81[1458 - (1304 + 151)]));
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]][v79[v81[2 + 1]]] = v79[v81[2 + 2]];
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[3];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[511 - (471 + 37)]];
									v73 = v73 + (1027 - (557 + 469));
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[6 - 3];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[3 - 1]] = v81[1380 - (513 + 864)];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v4183 = v81[2];
									v79[v4183] = v79[v4183](v13(v79, v4183 + (2 - 1), v81[5 - 2]));
									v73 = v73 + (400 - (187 + 212));
									v81 = v69[v73];
									v79[v81[80 - (35 + 43)]][v79[v81[1117 - (209 + 905)]]] = v79[v81[1 + 3]];
									v73 = v73 + (737 - (555 + 181));
									v81 = v69[v73];
									v79[v81[2 - 0]] = v81[3];
									v73 = v73 + (986 - (953 + 32));
									v81 = v69[v73];
									v79[v81[7 - 5]] = v79[v81[3 - 0]];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[3 - 1]] = v81[506 - (412 + 91)];
									v73 = v73 + (273 - (53 + 219));
									v81 = v69[v73];
									v79[v81[2]] = v81[3];
									v73 = v73 + (1650 - (145 + 1504));
									v81 = v69[v73];
									v4183 = v81[229 - (101 + 126)];
									v79[v4183] = v79[v4183](v13(v79, v4183 + 1 + 0, v81[3 + 0]));
									v73 = v73 + (627 - (153 + 473));
									v81 = v69[v73];
									v79[v81[2 + 0]][v79[v81[3 + 0]]] = v79[v81[4 + 0]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[5 - 3]] = v81[972 - (752 + 217)];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[5 - 3]] = v79[v81[1 + 2]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[7 - 5]] = v81[1 + 2];
									v73 = v73 + (1344 - (103 + 1240));
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[1 + 2];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v4183 = v81[1213 - (16 + 1195)];
									v79[v4183] = v79[v4183](v13(v79, v4183 + 1, v81[3]));
									v73 = v73 + (4 - 3);
									v81 = v69[v73];
									v79[v81[3 - 1]][v79[v81[1615 - (1541 + 71)]]] = v79[v81[3 + 1]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[9 - 7]] = v81[12 - 9];
									v73 = v73 + (1645 - (1359 + 285));
									v81 = v69[v73];
									v79[v81[2 - 0]] = v79[v81[3]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1 + 1]] = v81[3];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1889 - (1178 + 709)]] = v81[3 - 0];
									v73 = v73 + 1;
									v81 = v69[v73];
									v4183 = v81[2];
									v79[v4183] = v79[v4183](v13(v79, v4183 + (2 - 1), v81[1433 - (1052 + 378)]));
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1692 - (1170 + 520)]][v79[v81[720 - (689 + 28)]]] = v79[v81[4]];
									v73 = v73 + (1634 - (534 + 1099));
									v81 = v69[v73];
									v79[v81[1846 - (686 + 1158)]] = v81[4 - 1];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[3]];
									v73 = v73 + (843 - (93 + 749));
									v81 = v69[v73];
									v79[v81[1 + 1]] = v81[99 - (81 + 15)];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2 - 0]] = v81[8 - 5];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v4183 = v81[2 + 0];
									v79[v4183] = v79[v4183](v13(v79, v4183 + 1, v81[3 - 0]));
									v73 = v73 + (4 - 3);
									v81 = v69[v73];
									v79[v81[2]][v79[v81[3]]] = v79[v81[9 - 5]];
									v73 = v73 + (1369 - (1363 + 5));
									v81 = v69[v73];
									v79[v81[2]] = v81[3 + 0];
									v73 = v73 + (384 - (233 + 150));
									v81 = v69[v73];
									v79[v81[2 + 0]] = v79[v81[14 - 11]];
									v73 = v73 + (4 - 3);
									v81 = v69[v73];
									v79[v81[5 - 3]] = v81[1192 - (762 + 427)];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[2]] = v81[1270 - (273 + 994)];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v4183 = v81[1691 - (1434 + 255)];
									v79[v4183] = v79[v4183](v13(v79, v4183 + (969 - (361 + 607)), v81[38 - (30 + 5)]));
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1 + 1]][v79[v81[6 - 3]]] = v79[v81[647 - (602 + 41)]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2]] = v81[6 - 3];
									v73 = v73 + (640 - (483 + 156));
									v81 = v69[v73];
									v79[v81[2 + 0]] = v79[v81[1849 - (1633 + 213)]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2]] = v81[3];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v81[2 + 1];
									v73 = v73 + (606 - (115 + 490));
									v81 = v69[v73];
									v4183 = v81[1104 - (706 + 396)];
									v79[v4183] = v79[v4183](v13(v79, v4183 + 1, v81[2 + 1]));
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[5 - 3]][v79[v81[899 - (301 + 595)]]] = v79[v81[3 + 1]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[8 - 6]] = v81[14 - 11];
									v73 = v73 + (1624 - (610 + 1013));
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[13 - 10]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[7 - 5]] = v81[3];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[5 - 3]] = v81[11 - 8];
									v73 = v73 + (1404 - (150 + 1253));
									v81 = v69[v73];
									v4183 = v81[1121 - (74 + 1045)];
									v79[v4183] = v79[v4183](v13(v79, v4183 + 1 + 0, v81[3]));
									v73 = v73 + (526 - (435 + 90));
									v81 = v69[v73];
									v79[v81[2]][v79[v81[1402 - (259 + 1140)]]] = v79[v81[1117 - (670 + 443)]];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[2]] = v81[3];
									v73 = v73 + (4 - 3);
									v81 = v69[v73];
									v79[v81[2 + 0]] = v79[v81[68 - (38 + 27)]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[3];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1 + 1]] = v81[7 - 4];
									v73 = v73 + (836 - (341 + 494));
									v81 = v69[v73];
									v4183 = v81[2];
									v79[v4183] = v79[v4183](v13(v79, v4183 + 1 + 0, v81[2 + 1]));
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1 + 1]][v79[v81[3]]] = v79[v81[1619 - (1276 + 339)]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[8 - 5];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[3]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[7 - 5]] = v81[3 + 0];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]] = v81[11 - 8];
									v73 = v73 + 1;
									v81 = v69[v73];
									v4183 = v81[1 + 1];
									v79[v4183] = v79[v4183](v13(v79, v4183 + 1 + 0, v81[1087 - (76 + 1008)]));
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2 + 0]][v79[v81[4 - 1]]] = v79[v81[4]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1843 - (1431 + 410)]] = v81[1 + 2];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[4 - 2]] = v79[v81[10 - 7]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[80 - (46 + 32)]] = v81[3 - 0];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1 + 1]] = v81[1 + 2];
									v73 = v73 + (167 - (92 + 74));
									v81 = v69[v73];
									v4183 = v81[2 - 0];
									v79[v4183] = v79[v4183](v13(v79, v4183 + 1, v81[2 + 1]));
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[935 - (237 + 696)]][v79[v81[3]]] = v79[v81[4 + 0]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]] = v81[3 + 0];
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v79[v81[3 - 1]] = v79[v81[3 + 0]];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[8 - 6]] = v81[3];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1 + 1]] = v81[1883 - (1225 + 655)];
									v73 = v73 + (951 - (184 + 766));
									v81 = v69[v73];
									v4183 = v81[2];
									v79[v4183] = v79[v4183](v13(v79, v4183 + (1810 - (199 + 1610)), v81[1 + 2]));
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]][v79[v81[1 + 2]]] = v79[v81[4]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2 - 0]] = v81[3];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[2 - 0]] = v79[v81[5 - 2]];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[2]] = v81[3 + 0];
								end
							elseif (v82 > 254) then
								v79[v81[2]] = v63[v81[5 - 2]];
								v73 = v73 + (1558 - (1278 + 279));
								v81 = v69[v73];
								v79[v81[410 - (148 + 260)]] = v63[v81[3]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2 + 0]] = v63[v81[2 + 1]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 - 0]][v79[v81[1 + 2]]] = v79[v81[3 + 1]];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								do
									return;
								end
							else
								local v4271 = 0;
								local v4272;
								local v4273;
								while true do
									if ((8 - 4) == v4271) then
										v4272 = v79[v81[7 - 4]];
										v79[v4273 + (951 - (606 + 344))] = v4272;
										v79[v4273] = v4272[v81[3 + 1]];
										v73 = v73 + 1;
										v4271 = 14 - 9;
									end
									if ((2836 > 540) and (v4271 == 6)) then
										v79[v81[2 + 0]] = v79[v81[1 + 2]][v81[4]];
										v73 = v73 + (809 - (715 + 93));
										v81 = v69[v73];
										v4273 = v81[790 - (744 + 44)];
										v4271 = 1198 - (665 + 526);
									end
									if (3 == v4271) then
										v79[v4273] = v79[v4273](v79[v4273 + 1 + 0]);
										v73 = v73 + (1002 - (253 + 748));
										v81 = v69[v73];
										v4273 = v81[2 + 0];
										v4271 = 4;
									end
									if (v4271 == (1027 - (914 + 113))) then
										v4272 = nil;
										v4273 = nil;
										v79[v81[2]] = v79[v81[1760 - (1188 + 569)]][v81[1376 - (822 + 550)]];
										v73 = v73 + 1;
										v4271 = 1 - 0;
									end
									if (v4271 == (11 - 4)) then
										v79[v4273] = v79[v4273](v13(v79, v4273 + 1 + 0, v81[859 - (273 + 583)]));
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										if (v79[v81[1 + 1]] or (2766 > 4159)) then
											v73 = v73 + 1;
										else
											v73 = v81[3 + 0];
										end
										break;
									end
									if (v4271 == (478 - (368 + 105))) then
										v81 = v69[v73];
										v79[v81[2 + 0]] = v63[v81[3]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v4271 = 386 - (332 + 48);
									end
									if (v4271 == (1 + 0)) then
										v81 = v69[v73];
										v4273 = v81[3 - 1];
										v4272 = v79[v81[3]];
										v79[v4273 + 1 + 0] = v4272;
										v4271 = 2 + 0;
									end
									if (v4271 == (1250 - (967 + 281))) then
										v79[v4273] = v4272[v81[4]];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v4273 = v81[1 + 1];
										v4271 = 3;
									end
								end
							end
						elseif (v82 <= (1122 - 860)) then
							if (v82 <= (516 - 258)) then
								if (v82 <= (246 + 10)) then
									v79[v81[1018 - (103 + 913)]] = v79[v81[13 - 10]] + v79[v81[4]];
								elseif (v82 > (470 - 213)) then
									local v4274 = 0 - 0;
									local v4275;
									while true do
										if (v4274 == (1 + 0)) then
											for v12400 = v4275, v74 do
												local v12401 = v75[v12400 - v4275];
												v79[v12400] = v12401;
											end
											break;
										end
										if ((v4274 == (784 - (23 + 761))) or (1820 >= 4205)) then
											v4275 = v81[2];
											v74 = (v4275 + v80) - (2 - 1);
											v4274 = 1;
										end
									end
								else
									v64[v81[1774 - (179 + 1592)]] = v79[v81[1 + 1]];
								end
							elseif ((v82 <= (43 + 217)) or (4602 <= 3033)) then
								if ((v82 == (484 - 225)) or (2818 <= 1856)) then
									local v4278;
									v79[v81[2 - 0]] = v79[v81[3]][v81[4]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2 + 0]] = v64[v81[159 - (48 + 108)]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1992 - (1371 + 619)]] = v63[v81[158 - (143 + 12)]];
									v73 = v73 + (689 - (92 + 596));
									v81 = v69[v73];
									v79[v81[4 - 2]] = v79[v81[8 - 5]][v81[4]];
									v73 = v73 + (577 - (274 + 302));
									v81 = v69[v73];
									v79[v81[4 - 2]] = v79[v81[3 + 0]][v79[v81[1472 - (1060 + 408)]]];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[1703 - (180 + 1521)]] = v79[v81[11 - 8]][v81[11 - 7]];
									v73 = v73 + (1359 - (521 + 837));
									v81 = v69[v73];
									v79[v81[1131 - (889 + 240)]] = v79[v81[148 - (4 + 141)]][v81[5 - 1]];
									v73 = v73 + (1663 - (1588 + 74));
									v81 = v69[v73];
									v79[v81[2 + 0]] = v79[v81[3 + 0]][v81[9 - 5]];
									v73 = v73 + (1980 - (1612 + 367));
									v81 = v69[v73];
									v79[v81[1427 - (538 + 887)]] = v79[v81[6 - 3]] / v81[1529 - (1121 + 404)];
									v73 = v73 + (349 - (325 + 23));
									v81 = v69[v73];
									v79[v81[2]] = v64[v81[3]];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[3 - 1]] = v63[v81[6 - 3]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[288 - (145 + 141)]] = v79[v81[636 - (52 + 581)]][v81[4]];
									v73 = v73 + (1151 - (1118 + 32));
									v81 = v69[v73];
									v79[v81[2 - 0]] = v79[v81[3]][v79[v81[1189 - (647 + 538)]]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[1374 - (695 + 676)]][v81[4]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[6 - 4]] = v79[v81[3 + 0]][v81[1 + 3]];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[1 + 1]] = v79[v81[1 + 2]][v81[6 - 2]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[2 + 1]] / v81[6 - 2];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v4278 = v81[1 + 1];
									v79[v4278] = v79[v4278](v13(v79, v4278 + (1296 - (542 + 753)), v81[2 + 1]));
									v73 = v73 + (1970 - (1008 + 961));
									v81 = v69[v73];
									v79[v81[5 - 3]] = v79[v81[3]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[5 - 3]] = v64[v81[1 + 2]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[3]][v81[4 + 0]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2 - 0]] = v79[v81[3 + 0]][v81[4]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[3 + 0]][v81[37 - (18 + 15)]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v4278 = v81[2 + 0];
									v79[v4278] = v79[v4278](v13(v79, v4278 + (1879 - (1811 + 67)), v81[3]));
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[3 + 0]] - v79[v81[2 + 2]];
									v73 = v73 + (447 - (218 + 228));
									v81 = v69[v73];
									v79[v81[1569 - (471 + 1096)]] = v79[v81[1264 - (640 + 621)]][v81[4]];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[3];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v73 = v81[3 + 0];
								else
									local v4320 = 0 + 0;
									local v4321;
									local v4322;
									while true do
										if ((1464 <= 1484) and (v4320 == (22 - 16))) then
											v81 = v69[v73];
											v79[v81[2]] = v79[v81[5 - 2]][v81[4]];
											break;
										end
										if (v4320 == (9 - 6)) then
											v79[v4322] = v79[v4322](v79[v4322 + (2 - 1)]);
											v73 = v73 + (466 - (92 + 373));
											v81 = v69[v73];
											v79[v81[9 - 7]] = v79[v81[3]][v81[1 + 3]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v4320 = 972 - (868 + 100);
										end
										if (v4320 == (9 - 7)) then
											v4321 = v79[v81[3]];
											v79[v4322 + 1] = v4321;
											v79[v4322] = v4321[v81[788 - (133 + 651)]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v4322 = v81[1 + 1];
											v4320 = 3 + 0;
										end
										if ((2686 > 1593) and (v4320 == (1326 - (329 + 997)))) then
											v4321 = nil;
											v4322 = nil;
											v79[v81[2 - 0]] = v64[v81[571 - (471 + 97)]];
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v79[v81[2]] = v79[v81[3]][v81[14 - 10]];
											v4320 = 1 + 0;
										end
										if ((4882 >= 1408) and (v4320 == 1)) then
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[2 + 0]] = v63[v81[8 - 5]];
											v73 = v73 + (32 - (24 + 7));
											v81 = v69[v73];
											v4322 = v81[1139 - (204 + 933)];
											v4320 = 323 - (164 + 157);
										end
										if ((985 <= 3987) and (v4320 == (1720 - (1169 + 547)))) then
											v79[v81[2]] = v63[v81[3]];
											v73 = v73 + (1 - 0);
											v81 = v69[v73];
											v4322 = v81[911 - (619 + 290)];
											v4321 = v79[v81[6 - 3]];
											v79[v4322 + 1 + 0] = v4321;
											v4320 = 3 + 2;
										end
										if (v4320 == (5 + 0)) then
											v79[v4322] = v4321[v81[8 - 4]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v4322 = v81[2 + 0];
											v79[v4322] = v79[v4322](v79[v4322 + (184 - (107 + 76))]);
											v73 = v73 + (2 - 1);
											v4320 = 892 - (865 + 21);
										end
									end
								end
							elseif (v82 > (572 - 311)) then
								local v4323 = 0 + 0;
								local v4324;
								while true do
									if (v4323 == (0 + 0)) then
										v4324 = v81[2 + 0];
										do
											return v79[v4324](v13(v79, v4324 + 1 + 0, v81[85 - (74 + 8)]));
										end
										break;
									end
								end
							else
								local v4325;
								v4325 = v81[5 - 3];
								v79[v4325] = v79[v4325](v13(v79, v4325 + 1 + 0, v81[3 + 0]));
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v79[v81[2]][v79[v81[3]]] = v79[v81[12 - 8]];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[7 - 4];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1276 - (552 + 722)]] = v79[v81[3]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1086 - (884 + 200)]] = v81[3 + 0];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[7 - 5]] = v81[1138 - (629 + 506)];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v4325 = v81[2];
								v79[v4325] = v79[v4325](v13(v79, v4325 + 1, v81[2 + 1]));
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]][v79[v81[3]]] = v79[v81[3 + 1]];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[422 - (348 + 71)];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[1838 - (242 + 1594)]] = v79[v81[8 - 5]];
								v73 = v73 + (79 - (60 + 18));
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[8 - 5];
								v73 = v73 + (27 - (20 + 6));
								v81 = v69[v73];
								v79[v81[1229 - (1060 + 167)]] = v81[3 + 0];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v4325 = v81[1 + 1];
								v79[v4325] = v79[v4325](v13(v79, v4325 + (999 - (46 + 952)), v81[5 - 2]));
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[2]][v79[v81[3]]] = v79[v81[2 + 2]];
								v73 = v73 + (1288 - (690 + 597));
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[1 + 2];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[6 - 3]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v81[3];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[525 - (402 + 120)];
								v73 = v73 + 1;
								v81 = v69[v73];
								v4325 = v81[1968 - (1058 + 908)];
								v79[v4325] = v79[v4325](v13(v79, v4325 + (2 - 1), v81[6 - 3]));
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[3 - 1]][v79[v81[3]]] = v79[v81[1961 - (1344 + 613)]];
								v73 = v73 + (715 - (576 + 138));
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[3 - 0];
								v73 = v73 + (233 - (104 + 128));
								v81 = v69[v73];
								v79[v81[1 + 1]] = v79[v81[5 - 2]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1626 - (1424 + 200)]] = v81[3];
								v73 = v73 + (396 - (334 + 61));
								v81 = v69[v73];
								v79[v81[2]] = v81[14 - 11];
								v73 = v73 + (1827 - (1668 + 158));
								v81 = v69[v73];
								v4325 = v81[858 - (148 + 708)];
								v79[v4325] = v79[v4325](v13(v79, v4325 + (1808 - (1739 + 68)), v81[3]));
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 - 0]][v79[v81[1496 - (501 + 992)]]] = v79[v81[12 - 8]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[9 - 7]] = v81[6 - 3];
								v73 = v73 + (273 - (85 + 187));
								v81 = v69[v73];
								v79[v81[41 - (15 + 24)]] = v79[v81[3 + 0]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[44 - (7 + 34)];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 - 0]] = v81[3];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v4325 = v81[728 - (185 + 541)];
								v79[v4325] = v79[v4325](v13(v79, v4325 + (1 - 0), v81[3 + 0]));
								v73 = v73 + (1773 - (1547 + 225));
								v81 = v69[v73];
								v79[v81[3 - 1]][v79[v81[5 - 2]]] = v79[v81[12 - 8]];
								v73 = v73 + (1723 - (797 + 925));
								v81 = v69[v73];
								v79[v81[1063 - (93 + 968)]] = v81[1 + 2];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[4 - 2]] = v79[v81[7 - 4]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[517 - (209 + 306)]] = v81[872 - (21 + 848)];
								v73 = v73 + (868 - (362 + 505));
								v81 = v69[v73];
								v79[v81[2 - 0]] = v81[3 + 0];
								v73 = v73 + 1;
								v81 = v69[v73];
								v4325 = v81[3 - 1];
								v79[v4325] = v79[v4325](v13(v79, v4325 + 1, v81[27 - (6 + 18)]));
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v79[v81[1 + 1]][v79[v81[892 - (860 + 29)]]] = v79[v81[4 + 0]];
								v73 = v73 + (1357 - (60 + 1296));
								v81 = v69[v73];
								v79[v81[15 - (7 + 6)]] = v81[1 + 2];
								v73 = v73 + (1341 - (501 + 839));
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[3]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[646 - (580 + 64)]] = v81[3];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[1 + 2];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v4325 = v81[1 + 1];
								v79[v4325] = v79[v4325](v13(v79, v4325 + (1 - 0), v81[3]));
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[2]][v79[v81[1527 - (37 + 1487)]]] = v79[v81[2 + 2]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[9 - 7]] = v81[2 + 1];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2 + 0]] = v79[v81[3 + 0]];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[2]] = v81[3 + 0];
								v73 = v73 + (1307 - (885 + 421));
								v81 = v69[v73];
								v79[v81[5 - 3]] = v81[3];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v4325 = v81[7 - 5];
								v79[v4325] = v79[v4325](v13(v79, v4325 + (3 - 2), v81[1833 - (252 + 1578)]));
								v73 = v73 + (4 - 3);
								v81 = v69[v73];
								v79[v81[3 - 1]][v79[v81[3]]] = v79[v81[15 - 11]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[3 + 0];
								v73 = v73 + (4 - 3);
								v81 = v69[v73];
								v79[v81[942 - (53 + 887)]] = v79[v81[3]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[4 - 2]] = v81[797 - (339 + 455)];
								v73 = v73 + (1661 - (1458 + 202));
								v81 = v69[v73];
								v79[v81[83 - (63 + 18)]] = v81[3];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v4325 = v81[1 + 1];
								v79[v4325] = v79[v4325](v13(v79, v4325 + 1, v81[1934 - (393 + 1538)]));
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1206 - (852 + 352)]][v79[v81[191 - (137 + 51)]]] = v79[v81[17 - 13]];
								v73 = v73 + (1062 - (854 + 207));
								v81 = v69[v73];
								v79[v81[1310 - (350 + 958)]] = v81[3];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[1 + 1]] = v79[v81[3 + 0]];
								v73 = v73 + (269 - (15 + 253));
								v81 = v69[v73];
								v79[v81[2]] = v81[1053 - (232 + 818)];
								v73 = v73 + (534 - (129 + 404));
								v81 = v69[v73];
								v79[v81[2]] = v81[3];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v4325 = v81[4 - 2];
								v79[v4325] = v79[v4325](v13(v79, v4325 + (2 - 1), v81[75 - (20 + 52)]));
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[2 + 0]][v79[v81[5 - 2]]] = v79[v81[1077 - (163 + 910)]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[1552 - (1149 + 401)]] = v81[847 - (473 + 371)];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[5 - 3]] = v79[v81[2 + 1]];
								v73 = v73 + (291 - (252 + 38));
								v81 = v69[v73];
								v79[v81[2]] = v81[32 - (17 + 12)];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1301 - (939 + 360)]] = v81[3];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v4325 = v81[2 + 0];
								v79[v4325] = v79[v4325](v13(v79, v4325 + 1, v81[5 - 2]));
								v73 = v73 + (1501 - (13 + 1487));
								v81 = v69[v73];
								v79[v81[2]][v79[v81[2 + 1]]] = v79[v81[1906 - (778 + 1124)]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[3 - 1]] = v81[2 + 1];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[1 + 2]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[943 - (53 + 888)]] = v81[1784 - (651 + 1130)];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2 - 0]] = v81[3 + 0];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v4325 = v81[5 - 3];
								v79[v4325] = v79[v4325](v13(v79, v4325 + 1, v81[1621 - (1058 + 560)]));
								v73 = v73 + (374 - (264 + 109));
								v81 = v69[v73];
								v79[v81[1 + 1]][v79[v81[6 - 3]]] = v79[v81[12 - 8]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]] = v81[4 - 1];
								v73 = v73 + (953 - (864 + 88));
								v81 = v69[v73];
								v79[v81[1081 - (662 + 417)]] = v79[v81[1448 - (898 + 547)]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[4 - 2]] = v81[5 - 2];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1155 - (482 + 671)]] = v81[591 - (158 + 430)];
								v73 = v73 + 1;
								v81 = v69[v73];
								v4325 = v81[2 + 0];
								v79[v4325] = v79[v4325](v13(v79, v4325 + (1756 - (764 + 991)), v81[2 + 1]));
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]][v79[v81[1655 - (1489 + 163)]]] = v79[v81[2 + 2]];
							end
						elseif ((v82 <= (160 + 105)) or (3099 == 2731)) then
							if (v82 <= 263) then
								local v587;
								v79[v81[3 - 1]] = v79[v81[4 - 1]][v81[156 - (137 + 15)]];
								v73 = v73 + (25 - (11 + 13));
								v81 = v69[v73];
								v79[v81[8 - 6]] = v64[v81[706 - (668 + 35)]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v63[v81[1575 - (736 + 836)]];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[4 - 2]] = v79[v81[539 - (185 + 351)]][v81[224 - (21 + 199)]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[20 - (17 + 1)]] = v79[v81[3]][v79[v81[1072 - (1060 + 8)]]];
								v73 = v73 + (1855 - (762 + 1092));
								v81 = v69[v73];
								v587 = v81[2];
								v79[v587](v79[v587 + (2 - 1)]);
							elseif (v82 > (1131 - (504 + 363))) then
								v79[v81[1405 - (604 + 799)]] = v81[4 - 1];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[569 - (361 + 205)]][v79[v81[4 + 0]]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1743 - (714 + 1027)]][v79[v81[1 + 2]]] = v79[v81[9 - 5]];
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[4 - 1];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v79[v81[12 - 9]][v79[v81[2 + 2]]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[351 - (103 + 246)]] = v81[3] ~= (0 - 0);
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[2 + 0]][v79[v81[8 - 5]]] = v79[v81[3 + 1]];
								v73 = v73 + (4 - 3);
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[1365 - (1015 + 347)];
								v73 = v73 + (1880 - (409 + 1470));
								v81 = v69[v73];
								v79[v81[1482 - (898 + 582)]] = v79[v81[3]][v79[v81[32 - (18 + 10)]]];
							else
								local v4431 = 0;
								local v4432;
								local v4433;
								while true do
									if ((2591 > 244) and (v4431 == (1 + 6))) then
										v73 = v73 + (3 - 2);
										v81 = v69[v73];
										v79[v81[2 + 0]][v81[535 - (406 + 126)]] = v79[v81[18 - 14]];
										v73 = v73 + (1593 - (851 + 741));
										v81 = v69[v73];
										v79[v81[604 - (462 + 140)]] = v63[v81[803 - (136 + 664)]];
										v4431 = 1306 - (763 + 535);
									end
									if ((302 < 496) and (v4431 == 1)) then
										v73 = v73 + (3 - 2);
										v81 = v69[v73];
										v79[v81[3 - 1]] = v63[v81[2 + 1]];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v4433 = v81[1 + 1];
										v4431 = 5 - 3;
									end
									if ((v4431 == (592 - (487 + 105))) or (3353 == 1657)) then
										v4432 = nil;
										v4433 = nil;
										v79[v81[2]] = v64[v81[7 - 4]];
										v73 = v73 + (3 - 2);
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[8 - 5]][v81[4]];
										v4431 = 1 + 0;
									end
									if ((v4431 == 4) or (2139 < 1296)) then
										v79[v81[1 + 1]] = v63[v81[6 - 3]];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v4433 = v81[517 - (171 + 344)];
										v4432 = v79[v81[3 + 0]];
										v79[v4433 + 1] = v4432;
										v4431 = 5;
									end
									if ((v4431 == 2) or (4046 < 950)) then
										v4432 = v79[v81[3]];
										v79[v4433 + (450 - (188 + 261))] = v4432;
										v79[v4433] = v4432[v81[2 + 2]];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v4433 = v81[223 - (24 + 197)];
										v4431 = 12 - 9;
									end
									if ((5 + 0) == v4431) then
										v79[v4433] = v4432[v81[4]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v4433 = v81[2];
										v79[v4433] = v79[v4433](v79[v4433 + (2 - 1)]);
										v73 = v73 + (2 - 1);
										v4431 = 7 - 1;
									end
									if (v4431 == (1125 - (768 + 354))) then
										v79[v4433] = v79[v4433](v79[v4433 + 1]);
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[6 - 4]] = v79[v81[3]][v81[2 + 2]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v4431 = 4;
									end
									if (v4431 == 8) then
										v73 = v73 + 1;
										v81 = v69[v73];
										if v79[v81[2 + 0]] then
											v73 = v73 + (221 - (34 + 186));
										else
											v73 = v81[3];
										end
										break;
									end
									if ((v4431 == (10 - 4)) or (577 == 3698)) then
										v81 = v69[v73];
										v79[v81[5 - 3]] = v79[v81[3]][v81[2 + 2]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v4433 = v81[2];
										v79[v4433] = v79[v4433](v13(v79, v4433 + (2 - 1), v81[3 + 0]));
										v4431 = 238 - (53 + 178);
									end
								end
							end
						elseif (v82 <= (486 - 219)) then
							if (v82 == 266) then
								v79[v81[2]] = {};
								v73 = v73 + (4 - 3);
								v81 = v69[v73];
								v79[v81[9 - 7]] = v81[3 - 0];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v81[462 - (343 + 116)] ~= (0 + 0);
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[2 - 0]][v79[v81[1991 - (1830 + 158)]]] = v79[v81[783 - (460 + 319)]];
								v73 = v73 + (4 - 3);
								v81 = v69[v73];
								v79[v81[1263 - (1071 + 190)]] = v81[9 - 6];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1747 - (1739 + 6)]] = v81[5 - 2] ~= 0;
								v73 = v73 + (647 - (55 + 591));
								v81 = v69[v73];
								v79[v81[1504 - (1500 + 2)]][v79[v81[11 - 8]]] = v79[v81[9 - 5]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[6 - 4]] = v81[3];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[239 - (68 + 169)]] = v81[4 - 1] ~= (0 - 0);
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[721 - (381 + 338)]][v79[v81[4 - 1]]] = v79[v81[10 - 6]];
							else
								v79[v81[1796 - (1025 + 769)]] = v79[v81[3]][v81[1219 - (789 + 426)]];
								v73 = v73 + (1024 - (895 + 128));
								v81 = v69[v73];
								v79[v81[2 + 0]] = v79[v81[102 - (37 + 62)]] - v79[v81[3 + 1]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[8 - 5]][v81[12 - 8]];
								v73 = v73 + (67 - (24 + 42));
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[3 - 0]] ^ v81[8 - 4];
								v73 = v73 + (1442 - (1310 + 131));
								v81 = v69[v73];
								v79[v81[1206 - (1195 + 9)]] = v81[2 + 1] * v79[v81[85 - (22 + 59)]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v79[v81[1546 - (1488 + 55)]] ^ v81[1 + 3];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[5 - 2]] * v79[v81[4]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[475 - (204 + 269)]] = v79[v81[3 + 0]] - v79[v81[4]];
								v73 = v73 + (1152 - (963 + 188));
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[7 - 4];
							end
						elseif (v82 == (1908 - (1560 + 80))) then
							if ((v79[v81[2]] <= v79[v81[16 - 12]]) or (4860 < 4549)) then
								v73 = v73 + 1 + 0;
							else
								v73 = v81[507 - (444 + 60)];
							end
						else
							v79[v81[1 + 1]] = v79[v81[3]][v79[v81[4]]];
							v73 = v73 + (2 - 1);
							v81 = v69[v73];
							v79[v81[3 - 1]] = v81[877 - (674 + 200)] ~= (1818 - (1288 + 530));
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[1801 - (626 + 1173)]][v79[v81[505 - (83 + 419)]]] = v79[v81[6 - 2]];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[1 + 1]] = v81[3 + 0];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[3 - 1]] = v79[v81[6 - 3]][v79[v81[12 - 8]]];
							v73 = v73 + (1 - 0);
							v81 = v69[v73];
							v79[v81[1 + 1]] = v64[v81[4 - 1]];
							v73 = v73 + (3 - 2);
							v81 = v69[v73];
							v79[v81[1 + 1]] = v81[8 - 5];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[781 - (347 + 432)]] = v79[v81[4 - 1]][v79[v81[416 - (335 + 77)]]];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[883 - (211 + 670)]] = v81[3];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[2]] = v81[3];
						end
					elseif ((885 < 1472) and (v82 <= (629 - 333))) then
						if (v82 <= 282) then
							if (v82 <= (907 - 632)) then
								if (v82 <= 272) then
									if ((1262 == 1262) and (v82 <= 270)) then
										local v600 = 0 + 0;
										local v601;
										local v602;
										while true do
											if ((635 <= 2174) and (v600 == (1 + 0))) then
												v79[v602] = v79[v602](v13(v79, v602 + 1, v81[1670 - (350 + 1317)]));
												v73 = v73 + (4 - 3);
												v81 = v69[v73];
												v79[v81[2]][v79[v81[2 + 1]]] = v79[v81[1602 - (828 + 770)]];
												v73 = v73 + (4 - 3);
												v81 = v69[v73];
												v600 = 4 - 2;
											end
											if (v600 == (6 - 3)) then
												v79[v81[1392 - (1265 + 125)]] = v81[1 + 2];
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v602 = v81[2 + 0];
												v601 = v79[v81[1 + 2]];
												v79[v602 + 1] = v601;
												v600 = 1991 - (250 + 1737);
											end
											if (v600 == (24 - 19)) then
												v79[v81[7 - 5]] = v81[3];
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v79[v81[4 - 2]] = v79[v81[3 + 0]][v79[v81[2 + 2]]];
												break;
											end
											if ((1436 <= 4080) and (v600 == 4)) then
												v79[v602] = v601[v79[v81[1797 - (711 + 1082)]]];
												v73 = v73 + (390 - (155 + 234));
												v81 = v69[v73];
												v79[v81[1 + 1]] = {};
												v73 = v73 + (521 - (222 + 298));
												v81 = v69[v73];
												v600 = 1649 - (612 + 1032);
											end
											if (((3 - 1) == v600) or (3725 < 1210)) then
												v79[v81[3 - 1]] = v81[3];
												v73 = v73 + (3 - 2);
												v81 = v69[v73];
												v79[v81[1 + 1]] = v79[v81[8 - 5]][v79[v81[442 - (76 + 362)]]];
												v73 = v73 + (1461 - (1053 + 407));
												v81 = v69[v73];
												v600 = 3 + 0;
											end
											if (v600 == (0 + 0)) then
												v601 = nil;
												v602 = nil;
												v79[v81[688 - (355 + 331)]][v79[v81[676 - (287 + 386)]]] = v79[v81[4]];
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v602 = v81[2 + 0];
												v600 = 1551 - (1382 + 168);
											end
										end
									elseif (v82 > (756 - 485)) then
										local v4475;
										local v4476;
										v79[v81[1 + 1]][v79[v81[3]]] = v79[v81[391 - (370 + 17)]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[892 - (175 + 715)]] = v81[3 + 0];
										v73 = v73 + (3 - 2);
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[4 - 1]][v79[v81[1 + 3]]];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v4476 = v81[2];
										v79[v4476](v13(v79, v4476 + 1 + 0, v81[6 - 3]));
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2]] = v81[1837 - (1262 + 572)];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[3 + 0]][v79[v81[4]]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[157 - (24 + 131)]] = v81[4 - 1];
										v73 = v73 + (1285 - (795 + 489));
										v81 = v69[v73];
										v4476 = v81[1 + 1];
										v4475 = v79[v81[3 - 0]];
										v79[v4476 + (1196 - (989 + 206))] = v4475;
										v79[v4476] = v4475[v79[v81[4]]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[5 - 3]] = {};
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[988 - (449 + 537)]] = v81[1810 - (632 + 1175)];
									else
										local v4497 = 0 - 0;
										local v4498;
										while true do
											if ((21 - 11) == v4497) then
												v79[v81[2 + 0]] = v81[1565 - (626 + 936)];
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v79[v81[1 + 1]] = v81[1525 - (855 + 667)];
												v73 = v73 + (2 - 1);
												v81 = v69[v73];
												v4498 = v81[2];
												v79[v4498] = v79[v4498](v13(v79, v4498 + (898 - (269 + 628)), v81[1 + 2]));
												v4497 = 11;
											end
											if ((v4497 == 2) or (777 >= 2482)) then
												v81 = v69[v73];
												v79[v81[2]] = v81[6 - 3];
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v79[v81[3 - 1]] = v79[v81[3 + 0]];
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v79[v81[2]] = v81[3];
												v4497 = 3;
											end
											if ((3593 < 4143) and (v4497 == (13 - 10))) then
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v79[v81[6 - 4]] = v81[2 + 1];
												v73 = v73 + (1 - 0);
												v81 = v69[v73];
												v4498 = v81[1345 - (102 + 1241)];
												v79[v4498] = v79[v4498](v13(v79, v4498 + (1095 - (118 + 976)), v81[6 - 3]));
												v73 = v73 + 1 + 0;
												v4497 = 4;
											end
											if (v4497 == (3 + 8)) then
												v73 = v73 + (823 - (331 + 491));
												v81 = v69[v73];
												v79[v81[421 - (260 + 159)]][v79[v81[3]]] = v79[v81[4]];
												v73 = v73 + (1132 - (930 + 201));
												v81 = v69[v73];
												v79[v81[5 - 3]] = v81[3];
												v73 = v73 + (1 - 0);
												v81 = v69[v73];
												v4497 = 1 + 11;
											end
											if ((4947 >= 4687) and ((45 - 15) == v4497)) then
												v73 = v73 + (788 - (604 + 183));
												v81 = v69[v73];
												v79[v81[2]][v79[v81[3]]] = v79[v81[4 - 0]];
												v73 = v73 + 1;
												v81 = v69[v73];
												v79[v81[1 + 1]] = v81[2 + 1];
												v73 = v73 + 1;
												v81 = v69[v73];
												v4497 = 3 + 28;
											end
											if (v4497 == (1749 - (1466 + 262))) then
												v81 = v69[v73];
												v79[v81[2]] = v81[10 - 7];
												v73 = v73 + 1;
												v81 = v69[v73];
												v79[v81[87 - (41 + 44)]] = v79[v81[83 - (77 + 3)]];
												v73 = v73 + (1 - 0);
												v81 = v69[v73];
												v79[v81[1 + 1]] = v81[3];
												v4497 = 22;
											end
											if (v4497 == (692 - (84 + 581))) then
												v79[v81[2]] = v81[2 + 1];
												v73 = v73 + (2 - 1);
												v81 = v69[v73];
												v4498 = v81[2];
												v79[v4498] = v79[v4498](v13(v79, v4498 + 1 + 0, v81[3]));
												v73 = v73 + (1 - 0);
												v81 = v69[v73];
												v79[v81[575 - (441 + 132)]][v79[v81[3]]] = v79[v81[4]];
												v4497 = 1114 - (424 + 662);
											end
											if ((3064 > 588) and (20 == v4497)) then
												v73 = v73 + (1600 - (386 + 1213));
												v81 = v69[v73];
												v4498 = v81[7 - 5];
												v79[v4498] = v79[v4498](v13(v79, v4498 + 1 + 0, v81[3]));
												v73 = v73 + 1;
												v81 = v69[v73];
												v79[v81[2]][v79[v81[3]]] = v79[v81[2 + 2]];
												v73 = v73 + 1;
												v4497 = 73 - 52;
											end
											if (v4497 == (13 - 4)) then
												v73 = v73 + (364 - (29 + 334));
												v81 = v69[v73];
												v79[v81[7 - 5]] = v81[11 - 8];
												v73 = v73 + (1823 - (1552 + 270));
												v81 = v69[v73];
												v79[v81[2 + 0]] = v79[v81[3]];
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v4497 = 18 - 8;
											end
											if (v4497 == (42 - (30 + 4))) then
												v79[v81[2 - 0]] = v81[5 - 2];
												v73 = v73 + (477 - (103 + 373));
												v81 = v69[v73];
												v4498 = v81[1891 - (1215 + 674)];
												v79[v4498] = v79[v4498](v13(v79, v4498 + (1152 - (185 + 966)), v81[1516 - (1156 + 357)]));
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v79[v81[951 - (190 + 759)]][v79[v81[92 - (51 + 38)]]] = v79[v81[3 + 1]];
												v4497 = 88 - (8 + 71);
											end
											if ((1903 <= 4324) and (v4497 == (14 - 9))) then
												v73 = v73 + 1;
												v81 = v69[v73];
												v79[v81[9 - 7]] = v81[3];
												v73 = v73 + 1;
												v81 = v69[v73];
												v79[v81[3 - 1]] = v81[1179 - (285 + 891)];
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v4497 = 6;
											end
											if (v4497 == (0 + 0)) then
												v4498 = nil;
												v79[v81[2]] = v79[v81[3 + 0]];
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v79[v81[2 + 0]] = v81[3];
												v73 = v73 + (2 - 1);
												v81 = v69[v73];
												v79[v81[3 - 1]] = v81[4 - 1];
												v4497 = 939 - (342 + 596);
											end
											if (v4497 == 17) then
												v81 = v69[v73];
												v79[v81[1605 - (1278 + 325)]] = v81[4 - 1];
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v79[v81[274 - (194 + 78)]] = v81[2 + 1];
												v73 = v73 + (2 - 1);
												v81 = v69[v73];
												v4498 = v81[1 + 1];
												v4497 = 13 + 5;
											end
											if (v4497 == 13) then
												v81 = v69[v73];
												v4498 = v81[1 + 1];
												v79[v4498] = v79[v4498](v13(v79, v4498 + (1151 - (1094 + 56)), v81[1240 - (547 + 690)]));
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v79[v81[867 - (69 + 796)]][v79[v81[3]]] = v79[v81[2 + 2]];
												v73 = v73 + (40 - (28 + 11));
												v81 = v69[v73];
												v4497 = 28 - 14;
											end
											if (v4497 == (3 - 2)) then
												v73 = v73 + 1;
												v81 = v69[v73];
												v4498 = v81[774 - (720 + 52)];
												v79[v4498] = v79[v4498](v13(v79, v4498 + 1 + 0, v81[3 + 0]));
												v73 = v73 + (2 - 1);
												v81 = v69[v73];
												v79[v81[7 - 5]][v79[v81[2 + 1]]] = v79[v81[11 - 7]];
												v73 = v73 + 1 + 0;
												v4497 = 3 - 1;
											end
											if ((v4497 == (2010 - (41 + 1953))) or (3234 <= 2665)) then
												v79[v81[629 - (581 + 46)]][v79[v81[1 + 2]]] = v79[v81[1023 - (971 + 48)]];
												v73 = v73 + 1;
												v81 = v69[v73];
												v79[v81[2]] = v81[2 + 1];
												v73 = v73 + 1;
												v81 = v69[v73];
												v79[v81[2 + 0]] = v79[v81[1235 - (607 + 625)]];
												v73 = v73 + (596 - (325 + 270));
												v4497 = 17;
											end
											if (v4497 == (1943 - (1785 + 143))) then
												v81 = v69[v73];
												v79[v81[2]] = v81[11 - 8];
												v73 = v73 + 1;
												v81 = v69[v73];
												v4498 = v81[7 - 5];
												v79[v4498] = v79[v4498](v13(v79, v4498 + (897 - (738 + 158)), v81[5 - 2]));
												v73 = v73 + (1941 - (489 + 1451));
												v81 = v69[v73];
												v4497 = 3 + 13;
											end
											if (v4497 == (11 + 7)) then
												v79[v4498] = v79[v4498](v13(v79, v4498 + (1 - 0), v81[3]));
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v79[v81[2 + 0]][v79[v81[1 + 2]]] = v79[v81[4]];
												v73 = v73 + (196 - (52 + 143));
												v81 = v69[v73];
												v79[v81[2 - 0]] = v81[3];
												v73 = v73 + 1;
												v4497 = 40 - 21;
											end
											if (v4497 == (1174 - (109 + 1058))) then
												v73 = v73 + (1 - 0);
												v81 = v69[v73];
												v79[v81[594 - (374 + 218)]] = v79[v81[690 - (266 + 421)]];
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v79[v81[1 + 1]] = v81[3];
												v73 = v73 + (1823 - (964 + 858));
												v81 = v69[v73];
												v4497 = 2 + 6;
											end
											if (v4497 == (95 - 69)) then
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v79[v81[2 + 0]] = v79[v81[11 - 8]];
												v73 = v73 + 1;
												v81 = v69[v73];
												v79[v81[5 - 3]] = v81[3 - 0];
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v4497 = 27;
											end
											if (4 == v4497) then
												v81 = v69[v73];
												v79[v81[5 - 3]][v79[v81[2001 - (1007 + 991)]]] = v79[v81[14 - 10]];
												v73 = v73 + (1387 - (183 + 1203));
												v81 = v69[v73];
												v79[v81[2 + 0]] = v81[3];
												v73 = v73 + 1;
												v81 = v69[v73];
												v79[v81[2 - 0]] = v79[v81[7 - 4]];
												v4497 = 5 + 0;
											end
											if ((1997 == 1997) and (v4497 == (376 - (120 + 227)))) then
												v79[v81[3 - 1]] = v81[3 + 0];
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v79[v81[6 - 4]] = v81[3 - 0];
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v4498 = v81[1552 - (935 + 615)];
												v79[v4498] = v79[v4498](v13(v79, v4498 + (389 - (109 + 279)), v81[943 - (311 + 629)]));
												v4497 = 975 - (917 + 28);
											end
											if (v4497 == (1861 - (622 + 1233))) then
												v4498 = v81[1 + 1];
												v79[v4498] = v79[v4498](v13(v79, v4498 + 1 + 0, v81[4 - 1]));
												v73 = v73 + 1;
												v81 = v69[v73];
												v79[v81[1778 - (1073 + 703)]][v79[v81[894 - (785 + 106)]]] = v79[v81[2 + 2]];
												v73 = v73 + 1;
												v81 = v69[v73];
												v79[v81[1870 - (1578 + 290)]] = v81[8 - 5];
												v4497 = 7;
											end
											if (v4497 == (39 - 11)) then
												v73 = v73 + (3 - 2);
												v81 = v69[v73];
												v79[v81[1 + 1]] = v81[3];
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v79[v81[1 + 1]] = v79[v81[5 - 2]];
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v4497 = 12 + 17;
											end
											if ((v4497 == (61 - 47)) or (2143 <= 1158)) then
												v79[v81[2 + 0]] = v81[322 - (42 + 277)];
												v73 = v73 + (2 - 1);
												v81 = v69[v73];
												v79[v81[1129 - (1113 + 14)]] = v79[v81[1 + 2]];
												v73 = v73 + (3 - 2);
												v81 = v69[v73];
												v79[v81[2]] = v81[850 - (833 + 14)];
												v73 = v73 + 1 + 0;
												v4497 = 1340 - (832 + 493);
											end
											if (19 == v4497) then
												v81 = v69[v73];
												v79[v81[3 - 1]] = v79[v81[3]];
												v73 = v73 + (955 - (508 + 446));
												v81 = v69[v73];
												v79[v81[9 - 7]] = v81[2 + 1];
												v73 = v73 + 1;
												v81 = v69[v73];
												v79[v81[2]] = v81[1 + 2];
												v4497 = 12 + 8;
											end
											if (v4497 == 22) then
												v73 = v73 + (2 - 1);
												v81 = v69[v73];
												v79[v81[5 - 3]] = v81[1357 - (227 + 1127)];
												v73 = v73 + (4 - 3);
												v81 = v69[v73];
												v4498 = v81[2 + 0];
												v79[v4498] = v79[v4498](v13(v79, v4498 + 1, v81[686 - (629 + 54)]));
												v73 = v73 + (1680 - (149 + 1530));
												v4497 = 12 + 11;
											end
											if (v4497 == (35 - 23)) then
												v79[v81[1410 - (1012 + 396)]] = v79[v81[3 + 0]];
												v73 = v73 + (4 - 3);
												v81 = v69[v73];
												v79[v81[4 - 2]] = v81[3];
												v73 = v73 + (1601 - (587 + 1013));
												v81 = v69[v73];
												v79[v81[25 - (11 + 12)]] = v81[3];
												v73 = v73 + (1993 - (1909 + 83));
												v4497 = 13;
											end
											if (v4497 == (758 - (394 + 341))) then
												v81 = v69[v73];
												v79[v81[2]][v79[v81[3]]] = v79[v81[1664 - (217 + 1443)]];
												v73 = v73 + 1;
												v81 = v69[v73];
												v79[v81[2]] = v81[6 - 3];
												v73 = v73 + 1;
												v81 = v69[v73];
												v79[v81[2 + 0]] = v79[v81[6 - 3]];
												v4497 = 24;
											end
											if ((964 < 4527) and (v4497 == (3 + 22))) then
												v4498 = v81[2];
												v79[v4498] = v79[v4498](v13(v79, v4498 + (1 - 0), v81[484 - (217 + 264)]));
												v73 = v73 + (1 - 0);
												v81 = v69[v73];
												v79[v81[2]][v79[v81[3]]] = v79[v81[9 - 5]];
												v73 = v73 + (896 - (318 + 577));
												v81 = v69[v73];
												v79[v81[8 - 6]] = v81[3];
												v4497 = 26;
											end
											if (v4497 == (88 - 57)) then
												v79[v81[1046 - (156 + 888)]] = v79[v81[8 - 5]];
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v79[v81[2 - 0]] = v81[3];
												break;
											end
											if (v4497 == 24) then
												v73 = v73 + 1;
												v81 = v69[v73];
												v79[v81[1681 - (99 + 1580)]] = v81[3];
												v73 = v73 + 1;
												v81 = v69[v73];
												v79[v81[2 - 0]] = v81[6 - 3];
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v4497 = 25;
											end
										end
									end
								elseif ((1372 > 771) and (v82 <= 273)) then
									local v603 = 1386 - (1282 + 104);
									local v604;
									local v605;
									local v606;
									local v607;
									while true do
										if ((3536 < 3662) and (v603 == 0)) then
											v604 = nil;
											v605, v606 = nil;
											v607 = nil;
											v79[v81[2]] = v63[v81[615 - (92 + 520)]];
											v603 = 1352 - (1259 + 92);
										end
										if (v603 == 3) then
											v604 = 0 - 0;
											for v8317 = v607, v74 do
												v604 = v604 + (3 - 2);
												v79[v8317] = v605[v604];
											end
											v73 = v73 + 1;
											v81 = v69[v73];
											v603 = 4 + 0;
										end
										if (v603 == 4) then
											v607 = v81[2];
											v79[v607](v13(v79, v607 + 1 + 0, v74));
											v73 = v73 + 1;
											v81 = v69[v73];
											v603 = 14 - 9;
										end
										if (v603 == (1398 - (1298 + 98))) then
											v81 = v69[v73];
											v607 = v81[1 + 1];
											v605, v606 = v72(v79[v607]());
											v74 = (v606 + v607) - 1;
											v603 = 10 - 7;
										end
										if (v603 == (2 + 3)) then
											v79[v81[1 + 1]] = v81[3 + 0];
											v73 = v73 + (3 - 2);
											v81 = v69[v73];
											v73 = v81[2 + 1];
											break;
										end
										if ((3771 <= 4932) and (v603 == 1)) then
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[2]] = v64[v81[3]];
											v73 = v73 + 1;
											v603 = 2;
										end
									end
								elseif (v82 > (3 + 271)) then
									local v4499 = 0 + 0;
									local v4500;
									local v4501;
									while true do
										if ((922 == 922) and (v4499 == (0 + 0))) then
											v4500 = nil;
											v4501 = nil;
											v79[v81[7 - 5]] = v79[v81[460 - (206 + 251)]][v81[4]];
											v73 = v73 + (171 - (162 + 8));
											v4499 = 144 - (26 + 117);
										end
										if ((v4499 == (2 + 1)) or (3752 == 2135)) then
											v73 = v73 + (3 - 2);
											v81 = v69[v73];
											v79[v81[3 - 1]] = v79[v81[999 - (591 + 405)]][v81[2 + 2]];
											v73 = v73 + 1 + 0;
											v4499 = 2 + 2;
										end
										if ((289 - (279 + 5)) == v4499) then
											v81 = v69[v73];
											if v79[v81[5 - 3]] then
												v73 = v73 + 1 + 0;
											else
												v73 = v81[2 + 1];
											end
											break;
										end
										if (1 == v4499) then
											v81 = v69[v73];
											v4501 = v81[1 + 1];
											v4500 = v79[v81[3 + 0]];
											v79[v4501 + 1] = v4500;
											v4499 = 1302 - (960 + 340);
										end
										if (v4499 == (3 + 1)) then
											v81 = v69[v73];
											v4501 = v81[1 + 1];
											v79[v4501] = v79[v4501](v13(v79, v4501 + 1, v81[5 - 2]));
											v73 = v73 + 1 + 0;
											v4499 = 1 + 4;
										end
										if (((4 - 2) == v4499) or (263 > 2405)) then
											v79[v4501] = v4500[v81[65 - (24 + 37)]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[2]] = v63[v81[3]];
											v4499 = 4 - 1;
										end
									end
								else
									v79[v81[4 - 2]] = v79[v81[764 - (363 + 398)]] % v81[7 - 3];
								end
							elseif (v82 <= 278) then
								if (v82 <= (1012 - (328 + 408))) then
									v79[v81[2 - 0]] = v79[v81[1639 - (1462 + 174)]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2]] = v64[v81[389 - (295 + 91)]];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[5 - 3]] = v63[v81[3]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2 + 0]] = v79[v81[3]][v81[1620 - (423 + 1193)]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1382 - (806 + 574)]] = v79[v81[3 + 0]][v79[v81[1726 - (16 + 1706)]]];
								elseif ((v82 == (193 + 84)) or (3041 <= 626)) then
									local v4503 = 1243 - (1032 + 211);
									local v4504;
									local v4505;
									while true do
										if (v4503 == (1650 - (312 + 1334))) then
											v81 = v69[v73];
											v79[v81[2]] = v81[5 - 2];
											v73 = v73 + (703 - (644 + 58));
											v81 = v69[v73];
											v4505 = v81[2];
											v4503 = 3 + 2;
										end
										if ((605 < 1432) and ((1425 - (966 + 457)) == v4503)) then
											v81 = v69[v73];
											v4505 = v81[1345 - (120 + 1223)];
											v79[v4505](v13(v79, v4505 + 1 + 0, v81[3]));
											v73 = v73 + (401 - (249 + 151));
											v81 = v69[v73];
											v4503 = 3;
										end
										if (v4503 == (0 + 0)) then
											v4504 = nil;
											v4505 = nil;
											v79[v81[2]][v79[v81[4 - 1]]] = v79[v81[4 + 0]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v4503 = 1;
										end
										if ((v4503 == 1) or (4698 <= 4017)) then
											v79[v81[2]] = v81[14 - 11];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[1 + 1]] = v79[v81[3]][v79[v81[1 + 3]]];
											v73 = v73 + 1 + 0;
											v4503 = 2 - 0;
										end
										if (v4503 == 5) then
											v4504 = v79[v81[3]];
											v79[v4505 + 1] = v4504;
											v79[v4505] = v4504[v79[v81[5 - 1]]];
											v73 = v73 + (3 - 2);
											v81 = v69[v73];
											v4503 = 1490 - (1237 + 247);
										end
										if (v4503 == (1173 - (400 + 767))) then
											v79[v81[2]] = {};
											v73 = v73 + (1314 - (908 + 405));
											v81 = v69[v73];
											v79[v81[1967 - (1526 + 439)]] = v81[3];
											break;
										end
										if ((1406 < 4907) and (v4503 == (9 - 6))) then
											v79[v81[113 - (29 + 82)]] = v81[1765 - (902 + 860)];
											v73 = v73 + (775 - (658 + 116));
											v81 = v69[v73];
											v79[v81[2 + 0]] = v79[v81[3]][v79[v81[2 + 2]]];
											v73 = v73 + 1 + 0;
											v4503 = 1 + 3;
										end
									end
								else
									local v4506 = 0 + 0;
									local v4507;
									local v4508;
									local v4509;
									while true do
										if (v4506 == (0 - 0)) then
											v4507 = v81[2];
											v4508 = v79[v4507 + (1079 - (1057 + 20))];
											v4506 = 1166 - (966 + 199);
										end
										if ((1766 < 3797) and ((2 - 1) == v4506)) then
											v4509 = v79[v4507] + v4508;
											v79[v4507] = v4509;
											v4506 = 2 + 0;
										end
										if (v4506 == 2) then
											if (v4508 > (0 - 0)) then
												if (v4509 <= v79[v4507 + 1 + 0]) then
													v73 = v81[2 + 1];
													v79[v4507 + (1818 - (1214 + 601))] = v4509;
												end
											elseif (v4509 >= v79[v4507 + (235 - (20 + 214))]) then
												v73 = v81[1 + 2];
												v79[v4507 + 3] = v4509;
											end
											break;
										end
									end
								end
							elseif (v82 <= 280) then
								if (v82 > 279) then
									local v4510;
									v79[v81[1 + 1]] = v64[v81[9 - 6]];
									v73 = v73 + (1516 - (1362 + 153));
									v81 = v69[v73];
									v79[v81[1505 - (835 + 668)]] = v79[v81[8 - 5]][v81[1061 - (212 + 845)]];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[2]] = v81[1 + 2];
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v79[v81[2]] = v81[4 - 1];
									v73 = v73 + (23 - (14 + 8));
									v81 = v69[v73];
									v79[v81[4 - 2]] = v81[3];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[7 - 5]] = v81[1 + 2];
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v4510 = v81[6 - 4];
									v79[v4510] = v79[v4510](v13(v79, v4510 + (2 - 1), v81[1921 - (1705 + 213)]));
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]][v81[4 - 1]] = v79[v81[4]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[524 - (483 + 39)]] = v64[v81[3]];
									v73 = v73 + (1653 - (1644 + 8));
									v81 = v69[v73];
									v79[v81[5 - 3]] = v79[v81[3 + 0]][v81[4]];
									v73 = v73 + (94 - (53 + 40));
									v81 = v69[v73];
									v79[v81[1 + 1]] = v81[802 - (708 + 91)];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[3];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[4 - 2]] = v81[9 - 6];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[4 - 2]] = v81[1235 - (1226 + 6)];
									v73 = v73 + 1;
									v81 = v69[v73];
									v4510 = v81[2 + 0];
									v79[v4510] = v79[v4510](v13(v79, v4510 + (1186 - (755 + 430)), v81[3]));
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[6 - 4]][v81[8 - 5]] = v79[v81[4]];
									v73 = v73 + (97 - (75 + 21));
									v81 = v69[v73];
									v79[v81[3 - 1]][v81[3 + 0]] = v81[4];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1436 - (138 + 1296)]] = v63[v81[3]];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[7 - 4]][v81[6 - 2]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[1 + 2]][v81[10 - 6]];
									v73 = v73 + (4 - 3);
									v81 = v69[v73];
									v79[v81[2 + 0]][v81[8 - 5]] = v79[v81[1950 - (1117 + 829)]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]][v81[1 + 2]] = v81[2 + 2];
									v73 = v73 + (1815 - (1194 + 620));
									v81 = v69[v73];
									v79[v81[110 - (74 + 34)]] = v64[v81[240 - (140 + 97)]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1 + 1]] = v79[v81[3]][v81[534 - (353 + 177)]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2 + 0]] = v79[v81[2 + 1]][v81[1896 - (783 + 1109)]];
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v79[v81[2 + 0]][v81[3]] = v79[v81[19 - 15]];
									v73 = v73 + (291 - (76 + 214));
									v81 = v69[v73];
									v79[v81[2]] = v81[1 + 2];
								else
									local v4552 = 327 - (217 + 110);
									local v4553;
									local v4554;
									while true do
										if ((4372 > 876) and (v4552 == (384 - (259 + 121)))) then
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											if v79[v81[1837 - (1361 + 474)]] then
												v73 = v73 + (2 - 1);
											else
												v73 = v81[3 + 0];
											end
											break;
										end
										if (v4552 == 3) then
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v4554 = v81[2 + 0];
											v79[v4554] = v79[v4554](v13(v79, v4554 + (1 - 0), v81[10 - 7]));
											v4552 = 460 - (270 + 186);
										end
										if (v4552 == (5 - 3)) then
											v79[v81[9 - 7]] = v63[v81[3]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[582 - (114 + 466)]] = v79[v81[3 + 0]][v81[4]];
											v4552 = 833 - (700 + 130);
										end
										if (v4552 == (1 + 0)) then
											v79[v4554 + 1] = v4553;
											v79[v4554] = v4553[v81[17 - 13]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v4552 = 8 - 6;
										end
										if (v4552 == (0 + 0)) then
											v4553 = nil;
											v4554 = nil;
											v4554 = v81[1132 - (667 + 463)];
											v4553 = v79[v81[1391 - (213 + 1175)]];
											v4552 = 1;
										end
									end
								end
							elseif (v82 == (1104 - 823)) then
								local v4555;
								v79[v81[3 - 1]][v79[v81[304 - (153 + 148)]]] = v79[v81[8 - 4]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v81[49 - (21 + 25)];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[1946 - (418 + 1526)]] = v79[v81[11 - 8]][v79[v81[1403 - (1330 + 69)]]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v64[v81[935 - (833 + 99)]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[3];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[1 + 1]] = v79[v81[3 + 0]][v79[v81[4]]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]] = v81[401 - (286 + 112)];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[1 + 2];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[415 - (189 + 224)]] = v81[5 - 2];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v4555 = v81[364 - (33 + 329)];
								v79[v4555] = v79[v4555](v13(v79, v4555 + (1114 - (581 + 532)), v81[2 + 1]));
							else
								local v4574;
								local v4575;
								v79[v81[3 - 1]][v79[v81[3 + 0]]] = v79[v81[1911 - (540 + 1367)]];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[4 - 2]] = v81[1387 - (1245 + 139)];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[1971 - (602 + 1367)]] = v79[v81[2 + 1]][v79[v81[4]]];
								v73 = v73 + (1171 - (887 + 283));
								v81 = v69[v73];
								v4575 = v81[2 + 0];
								v79[v4575](v13(v79, v4575 + 1 + 0, v81[457 - (301 + 153)]));
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2 - 0]] = v81[1 + 2];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v4575 = v81[743 - (581 + 160)];
								v4574 = v79[v81[9 - 6]];
								v79[v4575 + (4 - 3)] = v4574;
								v79[v4575] = v4574[v79[v81[2 + 2]]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[2]] = {};
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1328 - (221 + 1105)]] = v81[3];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[3 + 0]][v79[v81[988 - (745 + 239)]]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[3 - 1]] = v81[2 + 1];
							end
						elseif (v82 <= (428 - (137 + 2))) then
							if (v82 <= (1082 - 797)) then
								if (v82 <= (446 - 163)) then
									v79[v81[1 + 1]][v79[v81[7 - 4]]] = v79[v81[519 - (107 + 408)]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[11 - 8];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[8 - 6]] = v79[v81[1 + 2]][v79[v81[7 - 3]]];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[2]] = v81[1 + 2];
									v73 = v73 + (999 - (785 + 213));
									v81 = v69[v73];
									v79[v81[1 + 1]][v79[v81[3 - 0]]] = v79[v81[4 - 0]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2]] = v81[3];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[447 - (52 + 393)]] = v79[v81[3]][v79[v81[4 + 0]]];
								elseif (v82 > 284) then
									local v4597 = 1380 - (811 + 569);
									while true do
										if (v4597 == (945 - (143 + 800))) then
											v81 = v69[v73];
											v79[v81[1027 - (543 + 482)]][v81[1025 - (428 + 594)]] = v79[v81[4]];
											v73 = v73 + (900 - (113 + 786));
											v81 = v69[v73];
											v4597 = 11 - 8;
										end
										if (v4597 == 1) then
											v73 = v73 + (3 - 2);
											v81 = v69[v73];
											v79[v81[4 - 2]] = v79[v81[2 + 1]][v81[4]];
											v73 = v73 + (936 - (100 + 835));
											v4597 = 1435 - (340 + 1093);
										end
										if (v4597 == (0 - 0)) then
											v79[v81[5 - 3]] = v63[v81[3]];
											v73 = v73 + (440 - (372 + 67));
											v81 = v69[v73];
											v79[v81[2 + 0]] = v79[v81[3 + 0]][v81[3 + 1]];
											v4597 = 1 + 0;
										end
										if ((4307 < 4323) and (v4597 == (843 - (49 + 791)))) then
											do
												return;
											end
											break;
										end
									end
								else
									local v4598;
									local v4599;
									v4599 = v81[2];
									v4598 = v79[v81[7 - 4]];
									v79[v4599 + (2 - 1)] = v4598;
									v79[v4599] = v4598[v81[3 + 1]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v63[v81[3]];
									v73 = v73 + (1557 - (965 + 591));
									v81 = v69[v73];
									v79[v81[3 - 1]] = v79[v81[1239 - (776 + 460)]][v81[630 - (549 + 77)]];
									v73 = v73 + (751 - (478 + 272));
									v81 = v69[v73];
									v4599 = v81[4 - 2];
									v79[v4599] = v79[v4599](v13(v79, v4599 + (4 - 3), v81[3 + 0]));
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									if v79[v81[3 - 1]] then
										v73 = v73 + (527 - (482 + 44));
									else
										v73 = v81[5 - 2];
									end
								end
							elseif ((v82 <= (1169 - (107 + 775))) or (2998 <= 2314)) then
								if (v82 == (854 - (521 + 47))) then
									local v4611 = 0 - 0;
									local v4612;
									local v4613;
									local v4614;
									while true do
										if ((21 - 13) == v4611) then
											v73 = v73 + (606 - (489 + 116));
											v81 = v69[v73];
											v79[v81[2]] = v81[3];
											break;
										end
										if ((3 + 1) == v4611) then
											v4613 = v79[v4614];
											for v12403 = v4614 + 1, v81[6 - 2] do
												v4613 = v4613 .. v79[v12403];
											end
											v79[v81[5 - 3]] = v4613;
											v73 = v73 + (1 - 0);
											v4611 = 5;
										end
										if ((9 - 6) == v4611) then
											v79[v81[2 + 0]] = v79[v81[3]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v4614 = v81[3 + 0];
											v4611 = 1997 - (1534 + 459);
										end
										if (v4611 == 1) then
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[1680 - (1441 + 237)]] = v63[v81[4 - 1]];
											v73 = v73 + 1;
											v4611 = 2;
										end
										if (v4611 == (0 + 0)) then
											v4612 = nil;
											v4613 = nil;
											v4614 = nil;
											v79[v81[2]] = v79[v81[827 - (810 + 14)]];
											v4611 = 609 - (444 + 164);
										end
										if (((14 - 8) == v4611) or (4350 <= 2730)) then
											v79[v81[2]] = v81[750 - (686 + 61)] ~= 0;
											v73 = v73 + (1608 - (1092 + 515));
											v81 = v69[v73];
											v79[v81[3 - 1]] = v81[1663 - (1524 + 136)] ~= 0;
											v4611 = 7;
										end
										if ((v4611 == (4 + 1)) or (2498 <= 1731)) then
											v81 = v69[v73];
											v79[v81[6 - 4]] = v81[3] ~= (0 - 0);
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v4611 = 8 - 2;
										end
										if (v4611 == (9 - 2)) then
											v73 = v73 + (944 - (473 + 470));
											v81 = v69[v73];
											v4612 = v81[2];
											v79[v4612](v13(v79, v4612 + (1617 - (93 + 1523)), v81[511 - (14 + 494)]));
											v4611 = 13 - 5;
										end
										if (((2 + 0) == v4611) or (1390 >= 3653)) then
											v81 = v69[v73];
											v79[v81[5 - 3]] = v79[v81[3 + 0]][v81[4]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v4611 = 3;
										end
									end
								else
									local v4615;
									v79[v81[2 + 0]] = v79[v81[1 + 2]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[485 - (385 + 98)]] = v81[7 - 4];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2]] = v81[3];
									v73 = v73 + (1441 - (945 + 495));
									v81 = v69[v73];
									v4615 = v81[2 + 0];
									v79[v4615] = v79[v4615](v13(v79, v4615 + 1, v81[2 + 1]));
									v73 = v73 + (1063 - (835 + 227));
									v81 = v69[v73];
									v79[v81[2 + 0]][v79[v81[14 - 11]]] = v79[v81[4]];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[3];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2 + 0]] = v79[v81[5 - 2]];
									v73 = v73 + (1778 - (404 + 1373));
									v81 = v69[v73];
									v79[v81[46 - (38 + 6)]] = v81[1353 - (1213 + 137)];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[4 - 2]] = v81[3];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v4615 = v81[2 + 0];
									v79[v4615] = v79[v4615](v13(v79, v4615 + (1 - 0), v81[5 - 2]));
									v73 = v73 + (1583 - (1566 + 16));
									v81 = v69[v73];
									v79[v81[1194 - (635 + 557)]][v79[v81[14 - 11]]] = v79[v81[4]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v81[3];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2 - 0]] = v79[v81[11 - 8]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1586 - (1521 + 63)]] = v81[3 + 0];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[747 - (729 + 16)]] = v81[4 - 1];
									v73 = v73 + 1;
									v81 = v69[v73];
									v4615 = v81[2 + 0];
									v79[v4615] = v79[v4615](v13(v79, v4615 + (914 - (550 + 363)), v81[3]));
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[1917 - (865 + 1050)]][v79[v81[1452 - (1014 + 435)]]] = v79[v81[4]];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[1 + 1]] = v81[460 - (5 + 452)];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[383 - (233 + 148)]] = v79[v81[3]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1 + 1]] = v81[3];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[805 - (11 + 792)]] = v81[1 + 2];
									v73 = v73 + (1895 - (1202 + 692));
									v81 = v69[v73];
									v4615 = v81[2];
									v79[v4615] = v79[v4615](v13(v79, v4615 + 1 + 0, v81[10 - 7]));
									v73 = v73 + (841 - (90 + 750));
									v81 = v69[v73];
									v79[v81[2 + 0]][v79[v81[3]]] = v79[v81[615 - (589 + 22)]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1702 - (85 + 1615)]] = v81[3];
									v73 = v73 + (690 - (538 + 151));
									v81 = v69[v73];
									v79[v81[1 + 1]] = v79[v81[4 - 1]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[5 - 2];
									v73 = v73 + (4 - 3);
									v81 = v69[v73];
									v79[v81[1690 - (1281 + 407)]] = v81[3];
									v73 = v73 + (1138 - (338 + 799));
									v81 = v69[v73];
									v4615 = v81[2];
									v79[v4615] = v79[v4615](v13(v79, v4615 + (1 - 0), v81[693 - (177 + 513)]));
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]][v79[v81[5 - 2]]] = v79[v81[4]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]] = v81[9 - 6];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[1 + 2]];
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v79[v81[2]] = v81[1973 - (1839 + 131)];
									v73 = v73 + (792 - (420 + 371));
									v81 = v69[v73];
									v79[v81[1643 - (339 + 1302)]] = v81[3 + 0];
									v73 = v73 + (233 - (196 + 36));
									v81 = v69[v73];
									v4615 = v81[1220 - (655 + 563)];
									v79[v4615] = v79[v4615](v13(v79, v4615 + (266 - (259 + 6)), v81[3 - 0]));
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[224 - (205 + 17)]][v79[v81[1009 - (897 + 109)]]] = v79[v81[4]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[4 - 2]] = v81[6 - 3];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1 + 1]] = v79[v81[6 - 3]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1199 - (899 + 298)]] = v81[2 + 1];
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v79[v81[5 - 3]] = v81[10 - 7];
									v73 = v73 + (645 - (204 + 440));
									v81 = v69[v73];
									v4615 = v81[1 + 1];
									v79[v4615] = v79[v4615](v13(v79, v4615 + 1 + 0, v81[939 - (97 + 839)]));
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[949 - (301 + 646)]][v79[v81[1816 - (466 + 1347)]]] = v79[v81[1855 - (909 + 942)]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1 + 1]] = v81[11 - 8];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1 + 1]] = v79[v81[3]];
									v73 = v73 + (1800 - (259 + 1540));
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[3 + 0];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]] = v81[13 - 10];
									v73 = v73 + 1;
									v81 = v69[v73];
									v4615 = v81[164 - (52 + 110)];
									v79[v4615] = v79[v4615](v13(v79, v4615 + 1, v81[1 + 2]));
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[6 - 4]][v79[v81[3]]] = v79[v81[5 - 1]];
									v73 = v73 + (1484 - (1242 + 241));
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[5 - 2];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[220 - (22 + 195)]];
									v73 = v73 + (1484 - (235 + 1248));
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[393 - (334 + 56)];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[4 - 2]] = v81[4 - 1];
									v73 = v73 + 1;
									v81 = v69[v73];
									v4615 = v81[2 - 0];
									v79[v4615] = v79[v4615](v13(v79, v4615 + 1, v81[6 - 3]));
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]][v79[v81[3]]] = v79[v81[558 - (223 + 331)]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[161 - (140 + 19)]] = v81[8 - 5];
									v73 = v73 + (1064 - (844 + 219));
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[1786 - (1230 + 553)]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2]] = v81[3 + 0];
									v73 = v73 + (1916 - (1658 + 257));
									v81 = v69[v73];
									v79[v81[352 - (325 + 25)]] = v81[779 - (141 + 635)];
									v73 = v73 + (1064 - (152 + 911));
									v81 = v69[v73];
									v4615 = v81[2];
									v79[v4615] = v79[v4615](v13(v79, v4615 + (1 - 0), v81[6 - 3]));
									v73 = v73 + (354 - (31 + 322));
									v81 = v69[v73];
									v79[v81[1134 - (811 + 321)]][v79[v81[1 + 2]]] = v79[v81[4]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[2 + 1];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[6 - 4]] = v79[v81[1713 - (1709 + 1)]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[949 - (134 + 812)];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1783 - (1565 + 216)]] = v81[2 + 1];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v4615 = v81[2];
									v79[v4615] = v79[v4615](v13(v79, v4615 + (1497 - (325 + 1171)), v81[5 - 2]));
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1409 - (1179 + 228)]][v79[v81[3]]] = v79[v81[4 + 0]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]] = v81[1 + 2];
									v73 = v73 + (552 - (502 + 49));
									v81 = v69[v73];
									v79[v81[1496 - (824 + 670)]] = v79[v81[2 + 1]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[8 - 5];
									v73 = v73 + (742 - (661 + 80));
									v81 = v69[v73];
									v79[v81[2]] = v81[8 - 5];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v4615 = v81[1540 - (464 + 1074)];
									v79[v4615] = v79[v4615](v13(v79, v4615 + (1486 - (1044 + 441)), v81[3]));
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1314 - (425 + 887)]][v79[v81[3 + 0]]] = v79[v81[15 - 11]];
									v73 = v73 + (471 - (130 + 340));
									v81 = v69[v73];
									v79[v81[2]] = v81[5 - 2];
									v73 = v73 + (1172 - (27 + 1144));
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[3]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[5 - 3]] = v81[3];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[4 - 2]] = v81[1 + 2];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v4615 = v81[2];
									v79[v4615] = v79[v4615](v13(v79, v4615 + 1 + 0, v81[2 + 1]));
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[4 - 2]][v79[v81[3 - 0]]] = v79[v81[1221 - (1195 + 22)]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[3];
									v73 = v73 + (1344 - (364 + 979));
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[6 - 3]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[882 - (447 + 433)]] = v81[5 - 2];
								end
							elseif ((3578 < 4810) and (v82 > (524 - (84 + 152)))) then
								local v4697 = 1283 - (399 + 884);
								local v4698;
								local v4699;
								while true do
									if ((6 - 2) == v4697) then
										v4699 = v81[873 - (336 + 535)];
										v4698 = v79[v81[967 - (619 + 345)]];
										v79[v4699 + (1009 - (345 + 663))] = v4698;
										v79[v4699] = v4698[v79[v81[6 - 2]]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v4697 = 5;
									end
									if ((1 + 2) == v4697) then
										v79[v81[200 - (197 + 1)]] = v79[v81[2 + 1]][v79[v81[4]]];
										v73 = v73 + (736 - (122 + 613));
										v81 = v69[v73];
										v79[v81[5 - 3]] = v81[2 + 1];
										v73 = v73 + (1142 - (757 + 384));
										v81 = v69[v73];
										v4697 = 9 - 5;
									end
									if (v4697 == 2) then
										v79[v4699](v13(v79, v4699 + (533 - (447 + 85)), v81[8 - 5]));
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[2 - 0]] = v81[3];
										v73 = v73 + 1;
										v81 = v69[v73];
										v4697 = 8 - 5;
									end
									if ((431 == 431) and (v4697 == (6 - 1))) then
										v79[v81[2]] = {};
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[1 + 1]] = v81[4 - 1];
										break;
									end
									if ((v4697 == 1) or (584 >= 3171)) then
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[1045 - (239 + 804)]] = v79[v81[10 - 7]][v79[v81[4]]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v4699 = v81[2 + 0];
										v4697 = 1 + 1;
									end
									if (v4697 == (15 - (7 + 8))) then
										v4698 = nil;
										v4699 = nil;
										v79[v81[3 - 1]][v79[v81[3 + 0]]] = v79[v81[759 - (468 + 287)]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[759 - (92 + 665)]] = v81[3 + 0];
										v4697 = 3 - 2;
									end
								end
							else
								local v4700 = 0 - 0;
								local v4701;
								local v4702;
								while true do
									if (v4700 == (2 + 1)) then
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2 - 0]] = v63[v81[2 + 1]];
										v73 = v73 + (3 - 2);
										v4700 = 315 - (53 + 258);
									end
									if (v4700 == 9) then
										v79[v81[2]] = v79[v81[5 - 2]][v81[4]];
										break;
									end
									if (v4700 == (2 + 6)) then
										v81 = v69[v73];
										v79[v81[1 + 1]] = v79[v81[11 - 8]][v81[6 - 2]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v4700 = 1415 - (532 + 874);
									end
									if (v4700 == 2) then
										v4702 = v81[8 - 6];
										v4701 = v79[v81[2 + 1]];
										v79[v4702 + (1 - 0)] = v4701;
										v79[v4702] = v4701[v81[4]];
										v4700 = 8 - 5;
									end
									if ((1554 >= 554) and (v4700 == 1)) then
										v81 = v69[v73];
										v79[v81[2 - 0]] = v79[v81[1 + 2]][v81[5 - 1]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v4700 = 2 + 0;
									end
									if (v4700 == (1492 - (229 + 1258))) then
										v4702 = v81[376 - (140 + 234)];
										v79[v4702] = v79[v4702](v13(v79, v4702 + (1901 - (614 + 1286)), v81[2 + 1]));
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v4700 = 9 - 3;
									end
									if (v4700 == (16 - 9)) then
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2]] = v63[v81[1085 - (148 + 934)]];
										v73 = v73 + 1 + 0;
										v4700 = 3 + 5;
									end
									if ((v4700 == (12 - 6)) or (3831 <= 505)) then
										v4702 = v81[1 + 1];
										v4701 = v79[v81[3]];
										v79[v4702 + (1 - 0)] = v4701;
										v79[v4702] = v4701[v81[3 + 1]];
										v4700 = 646 - (322 + 317);
									end
									if (v4700 == (1 + 3)) then
										v81 = v69[v73];
										v79[v81[2 - 0]] = v79[v81[1817 - (1658 + 156)]][v81[2 + 2]];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v4700 = 5;
									end
									if (v4700 == (0 - 0)) then
										v4701 = nil;
										v4702 = nil;
										v79[v81[2 + 0]] = v63[v81[1 + 2]];
										v73 = v73 + 1;
										v4700 = 1;
									end
								end
							end
						elseif (v82 <= 292) then
							if ((v82 <= 290) or (3117 < 2546)) then
								local v633 = 0;
								local v634;
								local v635;
								while true do
									if (v633 == (1798 - (1667 + 129))) then
										v81 = v69[v73];
										v79[v81[2]] = v81[5 - 2];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v635 = v81[2];
										v633 = 1 + 2;
									end
									if ((681 - (405 + 270)) == v633) then
										v73 = v73 + (1362 - (944 + 417));
										v81 = v69[v73];
										v79[v81[2 - 0]] = v79[v81[3 + 0]][v79[v81[4]]];
										break;
									end
									if ((11 - 7) == v633) then
										v79[v81[1910 - (1074 + 834)]] = {};
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[5 - 3]] = v81[1 + 2];
										v73 = v73 + (601 - (60 + 540));
										v633 = 1602 - (1591 + 6);
									end
									if ((1 + 0) == v633) then
										v79[v81[920 - (657 + 261)]] = v81[3];
										v73 = v73 + (392 - (248 + 143));
										v81 = v69[v73];
										v79[v81[3 - 1]] = v79[v81[4 - 1]][v79[v81[4]]];
										v73 = v73 + (2 - 1);
										v633 = 2;
									end
									if (v633 == (0 + 0)) then
										v634 = nil;
										v635 = nil;
										v79[v81[4 - 2]] = v79[v81[326 - (210 + 113)]][v79[v81[2 + 2]]];
										v73 = v73 + (890 - (110 + 779));
										v81 = v69[v73];
										v633 = 238 - (141 + 96);
									end
									if (v633 == (195 - (30 + 162))) then
										v634 = v79[v81[653 - (431 + 219)]];
										v79[v635 + 1] = v634;
										v79[v635] = v634[v79[v81[6 - 2]]];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v633 = 13 - 9;
									end
									if (v633 == (9 - 4)) then
										v81 = v69[v73];
										v79[v81[495 - (20 + 473)]] = v79[v81[3]][v79[v81[13 - 9]]];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[2]] = v81[1 + 2];
										v633 = 494 - (319 + 169);
									end
								end
							elseif ((3299 <= 3877) and (v82 == (407 - (26 + 90)))) then
								local v4703 = v81[783 - (155 + 626)];
								do
									return v79[v4703], v79[v4703 + (1752 - (1167 + 584))];
								end
							else
								local v4704 = 1415 - (744 + 671);
								while true do
									if ((v4704 == (0 + 0)) or (4603 <= 2101)) then
										v79[v81[1 + 1]] = v63[v81[13 - 10]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[684 - (111 + 571)]] = v79[v81[2 + 1]][v81[4]];
										v4704 = 3 - 2;
									end
									if (v4704 == (2 + 1)) then
										do
											return;
										end
										break;
									end
									if (v4704 == (2 - 1)) then
										v73 = v73 + (4 - 3);
										v81 = v69[v73];
										v79[v81[1977 - (317 + 1658)]] = v79[v81[840 - (505 + 332)]][v81[4]];
										v73 = v73 + (678 - (54 + 623));
										v4704 = 1180 - (787 + 391);
									end
									if ((3546 <= 4588) and (v4704 == (4 - 2))) then
										v81 = v69[v73];
										v79[v81[9 - 7]][v81[3]] = v79[v81[4]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v4704 = 307 - (47 + 257);
									end
								end
							end
						elseif ((1184 <= 3027) and (v82 <= (31 + 263))) then
							if (v82 > 293) then
								local v4705;
								v79[v81[162 - (15 + 145)]] = v79[v81[3 + 0]];
								v73 = v73 + (139 - (90 + 48));
								v81 = v69[v73];
								v79[v81[7 - 5]] = v81[6 - 3];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[3];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v4705 = v81[1 + 1];
								v79[v4705] = v79[v4705](v13(v79, v4705 + 1 + 0, v81[3]));
								v73 = v73 + (354 - (333 + 20));
								v81 = v69[v73];
								v79[v81[2]][v79[v81[3]]] = v79[v81[4]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[2]] = v81[2 + 1];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[9 - 6]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1771 - (1338 + 431)]] = v81[3 - 0];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1139 - (475 + 662)]] = v81[3];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v4705 = v81[3 - 1];
								v79[v4705] = v79[v4705](v13(v79, v4705 + 1, v81[3]));
								v73 = v73 + (4 - 3);
								v81 = v69[v73];
								v79[v81[2]][v79[v81[1934 - (768 + 1163)]]] = v79[v81[4]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]] = v81[3];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v79[v81[3]];
								v73 = v73 + (1600 - (1098 + 501));
								v81 = v69[v73];
								v79[v81[1939 - (1272 + 665)]] = v81[3];
								v73 = v73 + (1624 - (1278 + 345));
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[3];
								v73 = v73 + (1765 - (666 + 1098));
								v81 = v69[v73];
								v4705 = v81[508 - (501 + 5)];
								v79[v4705] = v79[v4705](v13(v79, v4705 + 1, v81[1 + 2]));
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[1 + 1]][v79[v81[10 - 7]]] = v79[v81[4]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]] = v81[2 + 1];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[3 - 1]] = v79[v81[3 + 0]];
								v73 = v73 + (793 - (159 + 633));
								v81 = v69[v73];
								v79[v81[2]] = v81[1 + 2];
								v73 = v73 + (4 - 3);
								v81 = v69[v73];
								v79[v81[6 - 4]] = v81[1 + 2];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v4705 = v81[2 - 0];
								v79[v4705] = v79[v4705](v13(v79, v4705 + 1, v81[3 + 0]));
								v73 = v73 + (1185 - (27 + 1157));
								v81 = v69[v73];
								v79[v81[1 + 1]][v79[v81[3 - 0]]] = v79[v81[4]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[2]] = v81[3 + 0];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[3]];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[2]] = v81[14 - 11];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[736 - (11 + 723)]] = v81[3 + 0];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v4705 = v81[5 - 3];
								v79[v4705] = v79[v4705](v13(v79, v4705 + 1 + 0, v81[3 - 0]));
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[6 - 4]][v79[v81[754 - (542 + 209)]]] = v79[v81[13 - 9]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[2]] = v81[9 - 6];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v79[v81[1640 - (44 + 1593)]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[2 + 1];
								v73 = v73 + (206 - (14 + 191));
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[4 - 1];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v4705 = v81[5 - 3];
								v79[v4705] = v79[v4705](v13(v79, v4705 + 1 + 0, v81[1 + 2]));
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[2]][v79[v81[3]]] = v79[v81[979 - (738 + 237)]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[3 - 0];
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v79[v81[2 + 0]] = v79[v81[4 - 1]];
								v73 = v73 + (1554 - (392 + 1161));
								v81 = v69[v73];
								v79[v81[4 - 2]] = v81[1594 - (987 + 604)];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[1177 - (320 + 854)];
								v73 = v73 + (788 - (72 + 715));
								v81 = v69[v73];
								v4705 = v81[4 - 2];
								v79[v4705] = v79[v4705](v13(v79, v4705 + (1330 - (656 + 673)), v81[1680 - (812 + 865)]));
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[1423 - (720 + 701)]][v79[v81[9 - 6]]] = v79[v81[4 + 0]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[754 - (751 + 1)]] = v81[1930 - (410 + 1517)];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[797 - (406 + 389)]] = v79[v81[6 - 3]];
								v73 = v73 + (631 - (547 + 83));
								v81 = v69[v73];
								v79[v81[6 - 4]] = v81[3 + 0];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[782 - (78 + 702)]] = v81[9 - 6];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v4705 = v81[8 - 6];
								v79[v4705] = v79[v4705](v13(v79, v4705 + 1, v81[544 - (499 + 42)]));
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[1 + 1]][v79[v81[3 + 0]]] = v79[v81[11 - 7]];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[566 - (168 + 395)];
								v73 = v73 + (1971 - (939 + 1031));
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[751 - (50 + 698)]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[3 - 1]] = v81[3];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v81[177 - (76 + 98)];
								v73 = v73 + (234 - (221 + 12));
								v81 = v69[v73];
								v4705 = v81[3 - 1];
								v79[v4705] = v79[v4705](v13(v79, v4705 + (4 - 3), v81[3]));
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[3 - 1]][v79[v81[3 + 0]]] = v79[v81[1658 - (1529 + 125)]];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[1 + 2];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[3]];
								v73 = v73 + (1029 - (212 + 816));
								v81 = v69[v73];
								v79[v81[2]] = v81[3];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[4 - 2]] = v81[3];
								v73 = v73 + 1;
								v81 = v69[v73];
								v4705 = v81[2 + 0];
								v79[v4705] = v79[v4705](v13(v79, v4705 + (1600 - (62 + 1537)), v81[5 - 2]));
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[63 - (58 + 3)]][v79[v81[3]]] = v79[v81[6 - 2]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[171 - (82 + 87)]] = v81[1 + 2];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v79[v81[1760 - (922 + 835)]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[4 - 2]] = v81[1 + 2];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[971 - (320 + 649)]] = v81[7 - 4];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v4705 = v81[2 + 0];
								v79[v4705] = v79[v4705](v13(v79, v4705 + (3 - 2), v81[1 + 2]));
								v73 = v73 + (954 - (588 + 365));
								v81 = v69[v73];
								v79[v81[4 - 2]][v79[v81[1 + 2]]] = v79[v81[1553 - (1058 + 491)]];
								v73 = v73 + (1676 - (1633 + 42));
								v81 = v69[v73];
								v79[v81[2 - 0]] = v81[3];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[3]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v81[3 + 0];
								v73 = v73 + (4 - 3);
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[3];
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v4705 = v81[9 - 7];
								v79[v4705] = v79[v4705](v13(v79, v4705 + 1 + 0, v81[3]));
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]][v79[v81[3]]] = v79[v81[12 - 8]];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[2]] = v81[4 - 1];
								v73 = v73 + (261 - (11 + 249));
								v81 = v69[v73];
								v79[v81[2 - 0]] = v79[v81[241 - (214 + 24)]];
								v73 = v73 + (938 - (550 + 387));
								v81 = v69[v73];
								v79[v81[667 - (411 + 254)]] = v81[1 + 2];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1807 - (1208 + 597)]] = v81[3];
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v4705 = v81[62 - (55 + 5)];
								v79[v4705] = v79[v4705](v13(v79, v4705 + 1 + 0, v81[1601 - (187 + 1411)]));
								v73 = v73 + (899 - (607 + 291));
								v81 = v69[v73];
								v79[v81[8 - 6]][v79[v81[3]]] = v79[v81[11 - 7]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[8 - 6]] = v81[3];
								v73 = v73 + (1597 - (1347 + 249));
								v81 = v69[v73];
								v79[v81[1 + 1]] = v79[v81[2 + 1]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v81[2 + 1];
							elseif ((v79[v81[1614 - (1474 + 138)]] < v79[v81[10 - 6]]) or (4395 >= 4904)) then
								v73 = v73 + (2 - 1);
							else
								v73 = v81[3];
							end
						elseif (v82 == (150 + 145)) then
							v79[v81[2]] = v81[975 - (407 + 565)];
							v73 = v73 + (2 - 1);
							v81 = v69[v73];
							v79[v81[1041 - (688 + 351)]] = v79[v81[623 - (592 + 28)]][v79[v81[4]]];
							v73 = v73 + (1 - 0);
							v81 = v69[v73];
							v79[v81[1247 - (1150 + 95)]][v79[v81[1216 - (463 + 750)]]] = v79[v81[4 + 0]];
							v73 = v73 + (1493 - (624 + 868));
							v81 = v69[v73];
							v79[v81[6 - 4]] = v81[710 - (179 + 528)];
							v73 = v73 + (30 - (22 + 7));
							v81 = v69[v73];
							v79[v81[3 - 1]] = v79[v81[3]][v79[v81[8 - 4]]];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[2]] = v81[1553 - (666 + 884)] ~= 0;
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[1 + 1]][v79[v81[3 + 0]]] = v79[v81[4 + 0]];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[2]] = v81[10 - 7];
							v73 = v73 + (2 - 1);
							v81 = v69[v73];
							v79[v81[2 + 0]] = v79[v81[2 + 1]][v79[v81[35 - (16 + 15)]]];
						else
							local v4799 = 0 + 0;
							local v4800;
							local v4801;
							while true do
								if (v4799 == (2 - 0)) then
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[2 + 0]] = v63[v81[3]];
									v4799 = 1279 - (895 + 381);
								end
								if (v4799 == (0 + 0)) then
									v4800 = nil;
									v4801 = nil;
									v4801 = v81[2 - 0];
									v4799 = 1598 - (238 + 1359);
								end
								if ((4836 > 471) and (v4799 == (6 - 3))) then
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1445 - (1102 + 341)]] = v79[v81[7 - 4]][v81[1149 - (993 + 152)]];
									v4799 = 1626 - (1611 + 11);
								end
								if (v4799 == (12 - 7)) then
									v79[v4801] = v79[v4801](v13(v79, v4801 + (2 - 1), v81[5 - 2]));
									v73 = v73 + (368 - (265 + 102));
									v81 = v69[v73];
									v4799 = 53 - (31 + 16);
								end
								if (v4799 == (1 + 0)) then
									v4800 = v79[v81[3 + 0]];
									v79[v4801 + 1 + 0] = v4800;
									v79[v4801] = v4800[v81[2 + 2]];
									v4799 = 3 - 1;
								end
								if (v4799 == (1736 - (754 + 976))) then
									v79[v81[2]] = v79[v81[228 - (141 + 84)]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v4799 = 4 + 3;
								end
								if (v4799 == (18 - 11)) then
									if ((4305 > 2066) and not v79[v81[905 - (763 + 140)]]) then
										v73 = v73 + (1 - 0);
									else
										v73 = v81[10 - 7];
									end
									break;
								end
								if (v4799 == (3 + 1)) then
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v4801 = v81[2 - 0];
									v4799 = 7 - 2;
								end
							end
						end
					elseif ((v82 <= 309) or (3140 == 1043)) then
						if (v82 <= (1886 - (1292 + 292))) then
							if (v82 <= (505 - (158 + 48))) then
								if (v82 <= (16 + 281)) then
									local v636 = v81[2];
									local v637 = v81[13 - 9];
									local v638 = v636 + (1080 - (685 + 393));
									local v639 = {v79[v636](v79[v636 + 1], v79[v638])};
									for v956 = 3 - 2, v637 do
										v79[v638 + v956] = v639[v956];
									end
									local v640 = v639[1847 - (1736 + 110)];
									if ((46 < 3181) and v640) then
										local v4802 = 0;
										while true do
											if (v4802 == (0 + 0)) then
												v79[v638] = v640;
												v73 = v81[7 - 4];
												break;
											end
										end
									else
										v73 = v73 + (338 - (247 + 90));
									end
								elseif (v82 > (62 + 236)) then
									local v4803;
									local v4804;
									v79[v81[5 - 3]][v79[v81[14 - 11]]] = v79[v81[441 - (370 + 67)]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1 + 1]] = v81[8 - 5];
									v73 = v73 + (57 - (49 + 7));
									v81 = v69[v73];
									v79[v81[2 - 0]] = v79[v81[3]][v79[v81[1254 - (569 + 681)]]];
									v73 = v73 + (1938 - (68 + 1869));
									v81 = v69[v73];
									v4804 = v81[5 - 3];
									v79[v4804](v13(v79, v4804 + 1, v81[1 + 2]));
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[4 - 1];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1 + 1]] = v79[v81[2 + 1]][v79[v81[327 - (251 + 72)]]];
									v73 = v73 + (1540 - (113 + 1426));
									v81 = v69[v73];
									v79[v81[179 - (112 + 65)]] = v81[8 - 5];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v4804 = v81[1 + 1];
									v4803 = v79[v81[2 + 1]];
									v79[v4804 + (1308 - (430 + 877))] = v4803;
									v79[v4804] = v4803[v79[v81[1 + 3]]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[309 - (284 + 23)]] = {};
									v73 = v73 + (1445 - (314 + 1130));
									v81 = v69[v73];
									v79[v81[2]] = v81[3];
								else
									local v4825;
									v79[v81[2]] = v81[1917 - (342 + 1572)];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[249 - (112 + 134)];
									v73 = v73 + 1;
									v81 = v69[v73];
									v4825 = v81[2 - 0];
									v79[v4825] = v79[v4825](v13(v79, v4825 + 1 + 0, v81[1557 - (311 + 1243)]));
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1880 - (1548 + 330)]][v81[2 + 1]] = v79[v81[6 - 2]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]] = v81[810 - (152 + 655)];
									v73 = v73 + 1;
									v81 = v69[v73];
									v73 = v81[3];
								end
							elseif ((v82 <= (136 + 164)) or (1965 < 1834)) then
								local v641 = v81[2];
								local v642, v643 = v72(v79[v641](v13(v79, v641 + 1 + 0, v81[3])));
								v74 = (v643 + v641) - 1;
								local v644 = 0;
								for v959 = v641, v74 do
									v644 = v644 + 1 + 0;
									v79[v959] = v642[v644];
								end
							elseif (v82 == (1517 - (155 + 1061))) then
								local v4837 = 0 + 0;
								local v4838;
								while true do
									if (v4837 == (413 - (223 + 190))) then
										v4838 = v81[2 + 0];
										v79[v4838] = v79[v4838](v13(v79, v4838 + (1345 - (122 + 1222)), v74));
										break;
									end
								end
							else
								local v4839 = 0 - 0;
								while true do
									if (v4839 == 3) then
										if (v79[v81[713 - (220 + 491)]] == v79[v81[4]]) then
											v73 = v73 + (3 - 2);
										else
											v73 = v81[5 - 2];
										end
										break;
									end
									if ((3175 == 3175) and (v4839 == 2)) then
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[3]][v81[917 - (119 + 794)]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v4839 = 405 - (71 + 331);
									end
									if ((2938 <= 4188) and (v4839 == 0)) then
										v63[v81[1441 - (1006 + 432)]] = v79[v81[2 + 0]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2 - 0]] = v63[v81[3]];
										v4839 = 1 + 0;
									end
									if ((1 + 0) == v4839) then
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2 + 0]] = v63[v81[1494 - (270 + 1221)]];
										v73 = v73 + 1 + 0;
										v4839 = 2 + 0;
									end
								end
							end
						elseif (v82 <= (20 + 285)) then
							if (v82 <= (293 + 10)) then
								if ((1275 >= 493) and (v79[v81[1267 - (794 + 471)]] < v81[4])) then
									v73 = v73 + (4 - 3);
								else
									v73 = v81[648 - (447 + 198)];
								end
							elseif (v82 == (2104 - (1307 + 493))) then
								v79[v81[1 + 1]] = v79[v81[3 + 0]] + v81[64 - (35 + 25)];
							else
								v79[v81[7 - 5]] = v79[v81[3 + 0]] % v79[v81[11 - 7]];
							end
						elseif (v82 <= (1043 - (402 + 334))) then
							if (v82 == (1165 - (331 + 528))) then
								local v4843;
								v79[v81[3 - 1]] = v79[v81[3 + 0]][v81[1185 - (153 + 1028)]];
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v79[v81[2]] = v81[13 - 10];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[2 - 0]] = v81[3 + 0];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[1209 - (995 + 211)];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v4843 = v81[2];
								v79[v4843] = v79[v4843](v13(v79, v4843 + (3 - 2), v81[12 - 9]));
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]][v81[3 + 0]] = v79[v81[1 + 3]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1825 - (1567 + 256)]][v81[3]] = v81[1985 - (211 + 1770)];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]] = v64[v81[3 + 0]];
								v73 = v73 + (952 - (111 + 840));
								v81 = v69[v73];
								v79[v81[2 + 0]] = v79[v81[8 - 5]][v81[1602 - (564 + 1034)]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2 - 0]] = v79[v81[6 - 3]][v81[4]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[5 - 3]][v81[1231 - (541 + 687)]] = v79[v81[677 - (313 + 360)]];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[1 + 1]] = v64[v81[3]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[1307 - (1223 + 81)]][v81[7 - 3]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1689 - (1304 + 383)]] = v81[3];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[5 - 3]] = v81[3];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[3];
								v73 = v73 + (1757 - (836 + 920));
								v81 = v69[v73];
								v79[v81[2]] = v81[2 + 1];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v4843 = v81[2];
								v79[v4843] = v79[v4843](v13(v79, v4843 + (1447 - (104 + 1342)), v81[2 + 1]));
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 + 0]][v81[3 - 0]] = v79[v81[10 - 6]];
								v73 = v73 + (856 - (292 + 563));
								v81 = v69[v73];
								v79[v81[435 - (71 + 362)]] = v81[1 + 2];
							else
								local v4875 = 0 - 0;
								while true do
									if (v4875 == (2 + 0)) then
										v81 = v69[v73];
										v79[v81[2]] = v81[1439 - (1339 + 97)];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v4875 = 3 - 0;
									end
									if (v4875 == (2 + 2)) then
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2 - 0]][v79[v81[7 - 4]]] = v79[v81[4 - 0]];
										v73 = v73 + 1 + 0;
										v4875 = 10 - 5;
									end
									if ((v4875 == (1258 - (906 + 351))) or (3037 <= 1422)) then
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2]][v79[v81[2 + 1]]] = v79[v81[4]];
										v73 = v73 + (370 - (228 + 141));
										v4875 = 2 + 0;
									end
									if ((v4875 == (4 + 2)) or (4799 < 2982)) then
										v79[v81[4 - 2]] = v79[v81[5 - 2]][v79[v81[4 + 0]]];
										break;
									end
									if ((v4875 == (4 + 1)) or (2561 == 4876)) then
										v81 = v69[v73];
										v79[v81[1167 - (1056 + 109)]] = v81[2 + 1];
										v73 = v73 + (874 - (832 + 41));
										v81 = v69[v73];
										v4875 = 6;
									end
									if (v4875 == (0 - 0)) then
										v79[v81[2 - 0]] = v81[7 - 4];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[204 - (135 + 67)]] = v79[v81[1 + 2]][v79[v81[7 - 3]]];
										v4875 = 1 + 0;
									end
									if (v4875 == (3 - 0)) then
										v79[v81[1578 - (1123 + 453)]] = v79[v81[2 + 1]][v79[v81[4]]];
										v73 = v73 + (3 - 2);
										v81 = v69[v73];
										v79[v81[3 - 1]] = v81[1 + 2] ~= (0 + 0);
										v4875 = 770 - (230 + 536);
									end
								end
							end
						elseif (v82 == (110 + 198)) then
							v79[v81[213 - (31 + 180)]] = v79[v81[1203 - (719 + 481)]][v81[1 + 3]];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[2]] = v64[v81[3 - 0]];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[191 - (132 + 57)]] = v79[v81[3 + 0]][v81[4]];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[5 - 3]] = v79[v81[2 + 1]][v81[14 - 10]];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							if (v79[v81[2]] == v79[v81[2 + 2]]) then
								v73 = v73 + 1;
							else
								v73 = v81[3];
							end
						else
							local v4885 = 0 + 0;
							local v4886;
							while true do
								if (v4885 == 6) then
									v81 = v69[v73];
									v4886 = v81[653 - (259 + 392)];
									v79[v4886] = v79[v4886](v13(v79, v4886 + (3 - 2), v81[7 - 4]));
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1214 - (705 + 507)]] = v79[v81[6 - 3]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1 + 1]] = v64[v81[203 - (137 + 63)]];
									v4885 = 7 + 0;
								end
								if ((3462 < 4280) and (v4885 == (8 - 6))) then
									v81 = v69[v73];
									v79[v81[2]][v81[1345 - (1069 + 273)]] = v79[v81[4]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[8 - 6]] = v79[v81[3]][v81[1126 - (724 + 398)]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2 - 0]] = v63[v81[3]];
									v73 = v73 + (1901 - (183 + 1717));
									v4885 = 2 + 1;
								end
								if (v4885 == (23 - 13)) then
									v79[v81[2]] = v79[v81[385 - (325 + 57)]];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[2 + 1]][v81[4]];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[2]] = v64[v81[1954 - (1021 + 930)]];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v4885 = 2 + 9;
								end
								if (v4885 == (1 + 7)) then
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v79[v81[4 - 2]] = v81[6 - 3];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2 + 0]] = v79[v81[3 + 0]][v81[14 - 10]];
									v73 = v73 + (1764 - (1651 + 112));
									v81 = v69[v73];
									v79[v81[9 - 7]] = v79[v81[1 + 2]][v81[7 - 3]];
									v4885 = 3 + 6;
								end
								if ((v4885 == (4 + 8)) or (2969 > 4418)) then
									v4886 = v81[1 + 1];
									v79[v4886] = v79[v4886](v13(v79, v4886 + 1 + 0, v81[2 + 1]));
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[94 - (15 + 77)]][v81[3 + 0]] = v79[v81[4]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[3 - 1]] = v81[1 + 2];
									break;
								end
								if ((4073 >= 2445) and (v4885 == (773 - (490 + 282)))) then
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[1216 - (225 + 988)]][v81[4 + 0]];
									v73 = v73 + (320 - (137 + 182));
									v81 = v69[v73];
									v79[v81[4 - 2]] = v63[v81[3]];
									v73 = v73 + (198 - (100 + 97));
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[2 + 1]][v81[1083 - (222 + 857)]];
									v73 = v73 + (4 - 3);
									v4885 = 1 + 1;
								end
								if (v4885 == (42 - 33)) then
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[2 + 0]] = v79[v81[3]] - v81[4 + 0];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v4886 = v81[1 + 1];
									v79[v4886] = v79[v4886](v13(v79, v4886 + (1323 - (613 + 709)), v81[3 - 0]));
									v73 = v73 + (160 - (97 + 62));
									v81 = v69[v73];
									v4885 = 9 + 1;
								end
								if (v4885 == (6 - 2)) then
									v81 = v69[v73];
									v79[v81[3 - 1]] = v79[v81[3]][v81[1 + 3]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[458 - (324 + 132)]] = v79[v81[3]][v81[1 + 3]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v81[3];
									v73 = v73 + 1 + 0;
									v4885 = 5;
								end
								if (v4885 == (1373 - (229 + 1137))) then
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[1272 - (977 + 292)]][v81[16 - 12]];
									v73 = v73 + (581 - (55 + 525));
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[166 - (18 + 145)]][v81[4]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[250 - (40 + 207)]] - v81[1640 - (1030 + 606)];
									v4885 = 8;
								end
								if ((3 + 2) == v4885) then
									v81 = v69[v73];
									v79[v81[2 + 0]] = v79[v81[1 + 2]][v81[640 - (295 + 341)]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1 + 1]] = v79[v81[8 - 5]][v81[4]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[890 - (760 + 127)]] - v81[8 - 4];
									v73 = v73 + (3 - 2);
									v4885 = 6;
								end
								if (v4885 == (0 - 0)) then
									v4886 = nil;
									v79[v81[2 + 0]] = v63[v81[6 - 3]];
									v73 = v73 + (794 - (496 + 297));
									v81 = v69[v73];
									v79[v81[6 - 4]] = v79[v81[3]][v81[1971 - (1178 + 789)]];
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v79[v81[1 + 1]][v81[6 - 3]] = v79[v81[517 - (260 + 253)]];
									v73 = v73 + 1 + 0;
									v4885 = 182 - (84 + 97);
								end
								if ((11 == v4885) or (2216 <= 55)) then
									v79[v81[1755 - (297 + 1456)]] = v79[v81[3]][v81[4]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[2 + 1]];
									v73 = v73 + (1874 - (92 + 1781));
									v81 = v69[v73];
									v79[v81[209 - (26 + 181)]] = v79[v81[1279 - (853 + 423)]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v4885 = 32 - 20;
								end
								if (3 == v4885) then
									v81 = v69[v73];
									v79[v81[1 + 1]] = v79[v81[3]][v81[4]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1794 - (713 + 1079)]][v81[7 - 4]] = v79[v81[3 + 1]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[94 - (13 + 79)]] = v64[v81[3 + 0]];
									v73 = v73 + (737 - (49 + 687));
									v4885 = 4;
								end
							end
						end
					elseif (v82 <= (86 + 230)) then
						if ((1890 > 1799) and (v82 <= (168 + 144))) then
							if (v82 <= (1400 - 1090)) then
								if ((190 <= 4505) and (v79[v81[6 - 4]] < v79[v81[1 + 3]])) then
									v73 = v81[3 + 0];
								else
									v73 = v73 + 1;
								end
							elseif (v82 == (941 - (295 + 335))) then
								local v4888 = 0 + 0;
								while true do
									if (v4888 == (220 - (152 + 63))) then
										v81 = v69[v73];
										v79[v81[1 + 1]] = v79[v81[2 + 1]][v79[v81[587 - (288 + 295)]]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v4888 = 6;
									end
									if ((6 + 0) == v4888) then
										v79[v81[7 - 5]] = v81[1651 - (158 + 1490)];
										v73 = v73 + (792 - (294 + 497));
										v81 = v69[v73];
										v79[v81[6 - 4]][v79[v81[8 - 5]]] = v79[v81[4]];
										break;
									end
									if (v4888 == (4 - 2)) then
										v81 = v69[v73];
										v79[v81[3 - 1]] = v81[5 - 2];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v4888 = 2 + 1;
									end
									if (v4888 == 0) then
										v79[v81[1 + 1]][v79[v81[1679 - (1473 + 203)]]] = v79[v81[1427 - (476 + 947)]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[256 - (127 + 127)]] = v81[9 - 6];
										v4888 = 1;
									end
									if ((2 + 2) == v4888) then
										v73 = v73 + (189 - (148 + 40));
										v81 = v69[v73];
										v79[v81[2]] = v81[6 - 3];
										v73 = v73 + 1;
										v4888 = 5;
									end
									if (v4888 == 1) then
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[6 - 4]] = v79[v81[5 - 2]][v79[v81[1 + 3]]];
										v73 = v73 + (619 - (566 + 52));
										v4888 = 2 + 0;
									end
									if (v4888 == 3) then
										v79[v81[83 - (67 + 14)]] = v79[v81[1195 - (849 + 343)]][v79[v81[5 - 1]]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[547 - (328 + 217)]][v79[v81[5 - 2]]] = v79[v81[2 + 2]];
										v4888 = 1 + 3;
									end
								end
							else
								local v4889 = v81[2];
								local v4890 = {};
								for v7960 = 1, #v78 do
									local v7961 = v78[v7960];
									for v8323 = 0, #v7961 do
										local v8324 = 1267 - (282 + 985);
										local v8325;
										local v8326;
										local v8327;
										while true do
											if ((v8324 == (1803 - (468 + 1334))) or (4598 < 3458)) then
												v8327 = v8325[1 + 1];
												if ((v8326 == v79) and (v8327 >= v4889)) then
													local v12454 = 0;
													while true do
														if ((v12454 == (839 - (332 + 507))) or (2546 >= 3864)) then
															v4890[v8327] = v8326[v8327];
															v8325[1] = v4890;
															break;
														end
													end
												end
												break;
											end
											if (((0 + 0) == v8324) or (1928 <= 617)) then
												v8325 = v7961[v8323];
												v8326 = v8325[2 - 1];
												v8324 = 877 - (654 + 222);
											end
										end
									end
								end
							end
						elseif (v82 <= (391 - (39 + 38))) then
							if (v82 == (266 + 47)) then
								local v4891;
								v79[v81[2]] = v79[v81[3]][v81[4]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v81[3];
								v73 = v73 + (1812 - (1509 + 302));
								v81 = v69[v73];
								v79[v81[4 - 2]] = v81[3 - 0];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[6 - 4]] = v81[3];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[4 - 2]] = v81[1820 - (1775 + 42)];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v4891 = v81[2 - 0];
								v79[v4891] = v79[v4891](v13(v79, v4891 + 1 + 0, v81[1 + 2]));
								v73 = v73 + (1800 - (602 + 1197));
								v81 = v69[v73];
								v79[v81[2 + 0]][v81[3 + 0]] = v79[v81[9 - 5]];
								v73 = v73 + (1964 - (335 + 1628));
								v81 = v69[v73];
								v79[v81[2 + 0]] = v63[v81[6 - 3]];
								v73 = v73 + (4 - 3);
								v81 = v69[v73];
								v79[v81[2 + 0]] = v79[v81[1763 - (1191 + 569)]][v81[4]];
								v73 = v73 + (1987 - (217 + 1769));
								v81 = v69[v73];
								v79[v81[960 - (344 + 614)]] = v79[v81[8 - 5]][v81[1976 - (908 + 1064)]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 + 0]][v81[1462 - (1436 + 23)]] = v79[v81[3 + 1]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[1807 - (864 + 941)]][v81[1632 - (1037 + 592)]] = v81[367 - (122 + 241)];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1017 - (824 + 191)]] = v81[3];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v73 = v81[3];
							else
								v79[v81[2 + 0]] = v79[v81[3]][v79[v81[3 + 1]]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v81[174 - (50 + 121)];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[2]][v79[v81[3 + 0]]] = v79[v81[4]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v81[4 - 1];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[659 - (6 + 651)]] = v79[v81[1 + 2]][v79[v81[1 + 3]]];
								v73 = v73 + (765 - (412 + 352));
								v81 = v69[v73];
								v79[v81[2]] = v81[3] ~= (302 - (251 + 51));
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2 + 0]][v79[v81[3]]] = v79[v81[4]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[4 - 2]] = v81[770 - (278 + 489)];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1528 - (1307 + 219)]] = v79[v81[1 + 2]][v79[v81[4]]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[2]] = v64[v81[6 - 3]];
							end
						elseif ((2810 < 3832) and (v82 > 315)) then
							local v4930;
							v79[v81[2 + 0]] = v63[v81[3 - 0]];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[6 - 4]] = v79[v81[632 - (59 + 570)]][v81[4]];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[7 - 5]][v79[v81[3 + 0]]] = v79[v81[4]];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[3 - 1]] = v63[v81[246 - (202 + 41)]];
							v73 = v73 + (960 - (282 + 677));
							v81 = v69[v73];
							v79[v81[7 - 5]] = v79[v81[3]][v81[373 - (335 + 34)]];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[2]][v79[v81[1529 - (486 + 1040)]]] = v79[v81[1355 - (676 + 675)]];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[5 - 3]] = v63[v81[8 - 5]];
							v73 = v73 + (618 - (497 + 120));
							v81 = v69[v73];
							v79[v81[9 - 7]] = v79[v81[3]][v81[7 - 3]];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[2]][v79[v81[1634 - (973 + 658)]]] = v81[4];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[7 - 5]] = v63[v81[2 + 1]];
							v73 = v73 + (1585 - (79 + 1505));
							v81 = v69[v73];
							v79[v81[2 - 0]] = v79[v81[1884 - (149 + 1732)]][v81[4]];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[2]][v79[v81[918 - (728 + 187)]]] = v81[2 + 2];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[978 - (939 + 37)]] = v63[v81[8 - 5]];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[4 - 2]] = v79[v81[3]][v81[1030 - (17 + 1009)]];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[1 + 1]] = v64[v81[3 + 0]];
							v73 = v73 + (2 - 1);
							v81 = v69[v73];
							v4930 = v81[1550 - (1185 + 363)];
							v79[v4930] = v79[v4930]();
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[2]][v79[v81[6 - 3]]] = v79[v81[960 - (839 + 117)]];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[2]][v79[v81[14 - 11]]] = v79[v81[1034 - (457 + 573)]];
							v73 = v73 + (2 - 1);
							v81 = v69[v73];
							v73 = v81[6 - 3];
						else
							local v4967;
							local v4968;
							v4968 = v81[1 + 1];
							v4967 = v79[v81[3]];
							v79[v4968 + (1966 - (167 + 1798))] = v4967;
							v79[v4968] = v4967[v81[4]];
							v73 = v73 + (1 - 0);
							v81 = v69[v73];
							v79[v81[1681 - (217 + 1462)]] = v63[v81[13 - 10]];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[1 + 1]] = v79[v81[3]][v81[3 + 1]];
							v73 = v73 + (1 - 0);
							v81 = v69[v73];
							v4968 = v81[1631 - (106 + 1523)];
							v79[v4968] = v79[v4968](v13(v79, v4968 + 1 + 0, v81[1794 - (1572 + 219)]));
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							if v79[v81[3 - 1]] then
								v73 = v73 + 1 + 0;
							else
								v73 = v81[915 - (325 + 587)];
							end
						end
					elseif (v82 <= (741 - 422)) then
						if (v82 <= (1648 - (454 + 877))) then
							local v645 = v81[120 - (6 + 112)];
							local v646, v647 = v72(v79[v645]());
							v74 = (v647 + v645) - (1 - 0);
							local v648 = 1369 - (372 + 997);
							for v962 = v645, v74 do
								v648 = v648 + 1 + 0;
								v79[v962] = v646[v648];
							end
						elseif ((4215 >= 3477) and (v82 > (273 + 45))) then
							local v4980;
							v79[v81[2]] = v63[v81[1925 - (948 + 974)]];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[1 + 1]] = v79[v81[1014 - (117 + 894)]][v81[3 + 1]];
							v73 = v73 + (506 - (418 + 87));
							v81 = v69[v73];
							v79[v81[3 - 1]] = v79[v81[11 - 8]][v79[v81[15 - 11]]];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[1 + 1]] = v79[v81[2 + 1]][v81[1071 - (19 + 1048)]];
							v73 = v73 + (1 - 0);
							v81 = v69[v73];
							v79[v81[3 - 1]] = v81[6 - 3];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[2 + 0]] = v81[1542 - (94 + 1445)];
							v73 = v73 + (1 - 0);
							v81 = v69[v73];
							v79[v81[2]] = v81[3 + 0];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v4980 = v81[2 + 0];
							v79[v4980] = v79[v4980](v13(v79, v4980 + (974 - (294 + 679)), v81[6 - 3]));
							v73 = v73 + (896 - (23 + 872));
							v81 = v69[v73];
							v79[v81[1097 - (630 + 465)]] = v79[v81[2 + 1]] + v79[v81[4]];
						else
							local v4996 = 599 - (186 + 413);
							while true do
								if ((v4996 == 0) or (2509 > 4016)) then
									v79[v81[516 - (315 + 199)]] = v81[1723 - (113 + 1607)];
									v73 = v73 + (4 - 3);
									v81 = v69[v73];
									v79[v81[3 - 1]] = v79[v81[7 - 4]][v79[v81[1270 - (355 + 911)]]];
									v4996 = 1456 - (197 + 1258);
								end
								if ((v4996 == (6 - 3)) or (3280 == 203)) then
									v79[v81[2 + 0]] = v81[3];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[2 + 0]] = v79[v81[5 - 2]][v79[v81[683 - (368 + 311)]]];
									break;
								end
								if (v4996 == (5 - 3)) then
									v81 = v69[v73];
									v79[v81[2]][v79[v81[3]]] = v79[v81[4]];
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v4996 = 3 - 0;
								end
								if (v4996 == 1) then
									v73 = v73 + (1059 - (507 + 551));
									v81 = v69[v73];
									v79[v81[2]] = v81[3 + 0] ~= (914 - (358 + 556));
									v73 = v73 + 1;
									v4996 = 1 + 1;
								end
							end
						end
					elseif (v82 <= (1188 - 867)) then
						if ((1076 < 2635) and (v82 == (515 - 195))) then
							local v4997;
							v79[v81[851 - (799 + 50)]] = v79[v81[1 + 2]][v81[8 - 4]];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[2 + 0]] = v79[v81[3 + 0]][v81[4]];
							v73 = v73 + (640 - (366 + 273));
							v81 = v69[v73];
							v79[v81[2]] = v79[v81[999 - (512 + 484)]][v81[1516 - (1432 + 80)]];
							v73 = v73 + (1703 - (991 + 711));
							v81 = v69[v73];
							v79[v81[2]] = v64[v81[3]];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[8 - 6]] = v63[v81[264 - (200 + 61)]];
							v73 = v73 + (2 - 1);
							v81 = v69[v73];
							v79[v81[1 + 1]] = v79[v81[8 - 5]][v81[1 + 3]];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[4 - 2]] = v79[v81[3 + 0]][v79[v81[4]]];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[2]] = v79[v81[3]][v81[630 - (357 + 269)]];
							v73 = v73 + (2 - 1);
							v81 = v69[v73];
							v79[v81[556 - (468 + 86)]] = v81[1046 - (915 + 128)];
							v73 = v73 + (2 - 1);
							v81 = v69[v73];
							v79[v81[2]] = v81[8 - 5];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[2 + 0]] = v81[11 - 8];
							v73 = v73 + (855 - (283 + 571));
							v81 = v69[v73];
							v4997 = v81[1030 - (14 + 1014)];
							v79[v4997] = v79[v4997](v13(v79, v4997 + (2 - 1), v81[3]));
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[489 - (266 + 221)]] = v79[v81[3 + 0]] * v79[v81[483 - (442 + 37)]];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[2]] = v79[v81[7 - 4]][v81[9 - 5]];
							v73 = v73 + (1042 - (743 + 298));
							v81 = v69[v73];
							v79[v81[2 + 0]] = v79[v81[1984 - (833 + 1148)]] - v79[v81[10 - 6]];
						else
							local v5021 = 0 + 0;
							local v5022;
							local v5023;
							while true do
								if (v5021 == 6) then
									v5023 = v81[3 - 1];
									v5022 = v79[v81[3 + 0]];
									v79[v5023 + 1] = v5022;
									v79[v5023] = v5022[v79[v81[4]]];
									v5021 = 7;
								end
								if ((v5021 == (0 + 0)) or (2988 <= 1605)) then
									v5022 = nil;
									v5023 = nil;
									v79[v81[72 - (6 + 64)]][v79[v81[3 + 0]]] = v79[v81[4 + 0]];
									v73 = v73 + 1;
									v5021 = 1 - 0;
								end
								if (v5021 == 3) then
									v79[v5023](v13(v79, v5023 + (1975 - (660 + 1314)), v81[6 - 3]));
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1 + 1]] = v81[1 + 2];
									v5021 = 2 + 2;
								end
								if (v5021 == (1338 - (1224 + 112))) then
									v79[v81[390 - (184 + 204)]] = v79[v81[3]][v79[v81[11 - 7]]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v5023 = v81[1 + 1];
									v5021 = 9 - 6;
								end
								if ((3588 >= 32) and (v5021 == 5)) then
									v81 = v69[v73];
									v79[v81[2]] = v81[5 - 2];
									v73 = v73 + (871 - (404 + 466));
									v81 = v69[v73];
									v5021 = 4 + 2;
								end
								if ((2042 < 3299) and (v5021 == (1784 - (108 + 1669)))) then
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[2]] = {};
									v73 = v73 + 1;
									v5021 = 4 + 4;
								end
								if (v5021 == (35 - 27)) then
									v81 = v69[v73];
									v79[v81[328 - (47 + 279)]] = v81[1981 - (358 + 1620)];
									break;
								end
								if (v5021 == (901 - (350 + 547))) then
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2 + 0]] = v79[v81[2 + 1]][v79[v81[2 + 2]]];
									v73 = v73 + (1 - 0);
									v5021 = 7 - 2;
								end
								if (v5021 == (25 - (13 + 11))) then
									v81 = v69[v73];
									v79[v81[2 - 0]] = v81[3 - 0];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v5021 = 1905 - (1250 + 653);
								end
							end
						end
					elseif (v82 == 322) then
						local v5024;
						v79[v81[2]] = v79[v81[6 - 3]][v81[150 - (134 + 12)]];
						v73 = v73 + (1 - 0);
						v81 = v69[v73];
						v79[v81[3 - 1]] = v79[v81[1759 - (1701 + 55)]][v81[886 - (810 + 72)]];
						v73 = v73 + (1430 - (955 + 474));
						v81 = v69[v73];
						v79[v81[4 - 2]] = v63[v81[3 + 0]];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[2]] = v79[v81[382 - (189 + 190)]][v81[1368 - (1167 + 197)]];
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[1910 - (174 + 1734)]] = v79[v81[2 + 1]];
						v73 = v73 + (1689 - (545 + 1143));
						v81 = v69[v73];
						v5024 = v81[2];
						v79[v5024] = v79[v5024](v79[v5024 + 1 + 0]);
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[1903 - (1076 + 825)]] = v63[v81[1899 - (974 + 922)]];
						v73 = v73 + (2 - 1);
						v81 = v69[v73];
						v79[v81[1 + 1]] = v79[v81[4 - 1]][v81[4]];
						v73 = v73 + (1 - 0);
						v81 = v69[v73];
						v5024 = v81[198 - (75 + 121)];
						v79[v5024] = v79[v5024](v13(v79, v5024 + (1657 - (501 + 1155)), v81[2 + 1]));
					else
						local v5042 = 0 - 0;
						local v5043;
						local v5044;
						local v5045;
						while true do
							if (v5042 == 2) then
								v73 = v73 + (1184 - (410 + 773));
								v81 = v69[v73];
								v79[v81[2 + 0]] = v79[v81[3]];
								v73 = v73 + (1123 - (682 + 440));
								v81 = v69[v73];
								v5042 = 1 + 2;
							end
							if (((2 - 1) == v5042) or (4964 < 4691)) then
								v81 = v69[v73];
								v79[v81[4 - 2]] = v63[v81[3]];
								v73 = v73 + (521 - (341 + 179));
								v81 = v69[v73];
								v79[v81[469 - (456 + 11)]] = v79[v81[2 + 1]][v81[4]];
								v5042 = 1 + 1;
							end
							if (v5042 == (767 - (676 + 86))) then
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 - 0]] = v81[1 + 2] ~= (0 - 0);
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v5042 = 3 + 3;
							end
							if (v5042 == (700 - (533 + 164))) then
								v5045 = v81[860 - (331 + 526)];
								v5044 = v79[v5045];
								for v12404 = v5045 + 1 + 0, v81[4] do
									v5044 = v5044 .. v79[v12404];
								end
								v79[v81[728 - (269 + 457)]] = v5044;
								v73 = v73 + (1865 - (1000 + 864));
								v5042 = 4;
							end
							if (v5042 == (23 - 17)) then
								v5043 = v81[400 - (249 + 149)];
								v79[v5043](v13(v79, v5043 + 1 + 0, v81[2 + 1]));
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1193 - (254 + 937)]] = v63[v81[14 - 11]];
								break;
							end
							if (v5042 == (610 - (246 + 364))) then
								v5043 = nil;
								v5044 = nil;
								v5045 = nil;
								v79[v81[929 - (208 + 719)]] = v63[v81[3]];
								v73 = v73 + (1906 - (249 + 1656));
								v5042 = 1584 - (913 + 670);
							end
							if (v5042 == (11 - 7)) then
								v81 = v69[v73];
								v79[v81[2 - 0]] = v81[7 - 4] ~= (0 + 0);
								v73 = v73 + (686 - (206 + 479));
								v81 = v69[v73];
								v79[v81[7 - 5]] = v81[3 - 0] ~= (0 - 0);
								v5042 = 11 - 6;
							end
						end
					end
				elseif ((2917 < 3420) and (v82 <= (2176 - (1440 + 359)))) then
					if ((v82 <= (2302 - (850 + 1102))) or (3984 <= 3792)) then
						if (v82 <= (22 + 314)) then
							if ((2578 <= 4981) and (v82 <= (450 - (58 + 63)))) then
								if (v82 <= (306 + 20)) then
									if (v82 <= (1525 - 1201)) then
										local v649 = 0 + 0;
										local v650;
										local v651;
										while true do
											if (v649 == (3 + 0)) then
												v73 = v73 + (3 - 2);
												v81 = v69[v73];
												v79[v81[1 + 1]] = v79[v81[6 - 3]][v81[3 + 1]];
												v73 = v73 + (2 - 1);
												v649 = 652 - (333 + 315);
											end
											if (v649 == (1271 - (969 + 297))) then
												v81 = v69[v73];
												if v79[v81[9 - 7]] then
													v73 = v73 + (1614 - (57 + 1556));
												else
													v73 = v81[44 - (5 + 36)];
												end
												break;
											end
											if (0 == v649) then
												v650 = nil;
												v651 = nil;
												v79[v81[2 - 0]] = v63[v81[3]];
												v73 = v73 + 1 + 0;
												v649 = 1 + 0;
											end
											if (v649 == (2 + 0)) then
												v79[v651] = v650[v81[4]];
												v73 = v73 + 1;
												v81 = v69[v73];
												v79[v81[3 - 1]] = v63[v81[3 + 0]];
												v649 = 3;
											end
											if (v649 == (10 - 6)) then
												v81 = v69[v73];
												v651 = v81[7 - 5];
												v79[v651] = v79[v651](v13(v79, v651 + (2 - 1), v81[5 - 2]));
												v73 = v73 + (1140 - (358 + 781));
												v649 = 383 - (297 + 81);
											end
											if (v649 == (1 - 0)) then
												v81 = v69[v73];
												v651 = v81[2];
												v650 = v79[v81[3]];
												v79[v651 + (1 - 0)] = v650;
												v649 = 7 - 5;
											end
										end
									elseif (v82 == (1010 - 685)) then
										v79[v81[1 + 1]] = v64[v81[4 - 1]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[1613 - (818 + 793)]] = v79[v81[858 - (557 + 298)]][v81[3 + 1]];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v79[v81[4 - 2]] = v79[v81[3 + 0]][v81[1664 - (823 + 837)]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[332 - (134 + 196)]][v81[9 - 6]] = v79[v81[1 + 3]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2 + 0]] = v81[2 + 1];
									else
										local v5057 = 517 - (283 + 234);
										while true do
											if (v5057 == (3 + 0)) then
												v79[v81[2]][v81[3]] = v79[v81[2 + 2]];
												break;
											end
											if (v5057 == 2) then
												v81 = v69[v73];
												v79[v81[2]] = v79[v81[5 - 2]][v81[4]];
												v73 = v73 + (1 - 0);
												v81 = v69[v73];
												v5057 = 1 + 2;
											end
											if ((2426 < 4918) and (v5057 == (1 - 0))) then
												v73 = v73 + (1506 - (1483 + 22));
												v81 = v69[v73];
												v79[v81[452 - (276 + 174)]] = v79[v81[840 - (341 + 496)]][v81[4]];
												v73 = v73 + (1 - 0);
												v5057 = 2;
											end
											if (v5057 == 0) then
												v79[v81[1615 - (463 + 1150)]] = v79[v81[3]][v81[11 - 7]];
												v73 = v73 + (25 - (17 + 7));
												v81 = v69[v73];
												v79[v81[894 - (554 + 338)]] = v64[v81[10 - 7]];
												v5057 = 1;
											end
										end
									end
								elseif (v82 <= (617 - 290)) then
									local v652 = 1011 - (566 + 445);
									local v653;
									while true do
										if (v652 == (2 + 3)) then
											v81 = v69[v73];
											v79[v81[7 - 5]] = v79[v81[1 + 2]];
											v73 = v73 + 1;
											v652 = 17 - 11;
										end
										if (v652 == (1689 - (400 + 1289))) then
											v653 = nil;
											v79[v81[1 + 1]] = v79[v81[3]][v81[9 - 5]];
											v73 = v73 + 1;
											v652 = 1;
										end
										if ((v652 == (2 + 1)) or (2944 == 2802)) then
											v81 = v69[v73];
											v79[v81[5 - 3]] = v79[v81[7 - 4]][v81[615 - (445 + 166)]];
											v73 = v73 + (1380 - (712 + 667));
											v652 = 1337 - (31 + 1302);
										end
										if (v652 == 6) then
											v81 = v69[v73];
											v653 = v81[2];
											v79[v653](v13(v79, v653 + (661 - (500 + 160)), v81[4 - 1]));
											break;
										end
										if (v652 == (5 - 3)) then
											v81 = v69[v73];
											v79[v81[1 + 1]] = v79[v81[1 + 2]][v81[9 - 5]];
											v73 = v73 + 1 + 0;
											v652 = 1 + 2;
										end
										if (v652 == 4) then
											v81 = v69[v73];
											v79[v81[2 - 0]] = v79[v81[1041 - (569 + 469)]][v81[15 - 11]];
											v73 = v73 + (3 - 2);
											v652 = 14 - 9;
										end
										if ((v652 == (1 + 0)) or (1505 > 4229)) then
											v81 = v69[v73];
											v79[v81[491 - (36 + 453)]] = v79[v81[8 - 5]][v81[4]];
											v73 = v73 + 1 + 0;
											v652 = 1222 - (627 + 593);
										end
									end
								elseif (v82 > (38 + 290)) then
									local v5058;
									local v5059;
									v79[v81[1 + 1]][v79[v81[13 - 10]]] = v79[v81[1966 - (492 + 1470)]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]] = v81[869 - (440 + 426)];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[542 - (218 + 321)]][v79[v81[4]]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v5059 = v81[1009 - (831 + 176)];
									v79[v5059](v13(v79, v5059 + 1, v81[1739 - (1005 + 731)]));
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2]] = v81[111 - (49 + 59)];
									v73 = v73 + 1;
									v81 = v69[v73];
									v5059 = v81[1951 - (759 + 1190)];
									v5058 = v79[v81[1 + 2]];
									v79[v5059 + (937 - (78 + 858))] = v5058;
									v79[v5059] = v5058[v79[v81[1 + 3]]];
									v73 = v73 + (1222 - (61 + 1160));
									v81 = v69[v73];
									v79[v81[2]] = {};
									v73 = v73 + (1983 - (131 + 1851));
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[3 + 0];
									v73 = v73 + (509 - (386 + 122));
									v81 = v69[v73];
									v79[v81[3 - 1]] = v79[v81[3 + 0]][v79[v81[4]]];
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v79[v81[1 + 1]] = v81[1232 - (1175 + 54)];
								else
									local v5079;
									v79[v81[1 + 1]] = v79[v81[6 - 3]];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[2 - 0]] = v81[1 + 2];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1216 - (39 + 1175)]] = v81[1 + 2];
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v5079 = v81[2];
									v79[v5079] = v79[v5079](v13(v79, v5079 + (2 - 1), v81[10 - 7]));
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2 - 0]][v79[v81[8 - 5]]] = v79[v81[15 - 11]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[407 - (23 + 382)]] = v81[28 - (23 + 2)];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[612 - (499 + 111)]] = v79[v81[1 + 2]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[3 - 1]] = v81[427 - (166 + 258)];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[1650 - (1079 + 569)]] = v81[3];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v5079 = v81[4 - 2];
									v79[v5079] = v79[v5079](v13(v79, v5079 + (752 - (495 + 256)), v81[2 + 1]));
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[3 - 1]][v79[v81[3]]] = v79[v81[402 - (93 + 305)]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[8 - 5];
									v73 = v73 + (1300 - (431 + 868));
									v81 = v69[v73];
									v79[v81[1562 - (1111 + 449)]] = v79[v81[3]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[3 - 1]] = v81[2 + 1];
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v79[v81[2]] = v81[3];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v5079 = v81[2 + 0];
									v79[v5079] = v79[v5079](v13(v79, v5079 + (1 - 0), v81[2 + 1]));
									v73 = v73 + (900 - (49 + 850));
									v81 = v69[v73];
									v79[v81[7 - 5]][v79[v81[5 - 2]]] = v79[v81[4]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[134 - (80 + 52)]] = v81[3];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[544 - (85 + 456)]];
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[5 - 2];
									v73 = v73 + (226 - (149 + 76));
									v81 = v69[v73];
									v79[v81[154 - (91 + 61)]] = v81[2 + 1];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v5079 = v81[1 + 1];
									v79[v5079] = v79[v5079](v13(v79, v5079 + (1119 - (67 + 1051)), v81[4 - 1]));
									v73 = v73 + (116 - (42 + 73));
									v81 = v69[v73];
									v79[v81[2 + 0]][v79[v81[8 - 5]]] = v79[v81[1 + 3]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1234 - (155 + 1077)]] = v81[1856 - (1081 + 772)];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[4 - 1]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[7 - 5]] = v81[8 - 5];
									v73 = v73 + (216 - (86 + 129));
									v81 = v69[v73];
									v79[v81[2]] = v81[7 - 4];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v5079 = v81[8 - 6];
									v79[v5079] = v79[v5079](v13(v79, v5079 + (3 - 2), v81[1 + 2]));
									v73 = v73 + (563 - (273 + 289));
									v81 = v69[v73];
									v79[v81[1 + 1]][v79[v81[8 - 5]]] = v79[v81[1306 - (1138 + 164)]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[1454 - (336 + 1116)]] = v81[12 - 9];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1952 - (1028 + 922)]] = v79[v81[3]];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[2]] = v81[59 - (34 + 22)];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1044 - (517 + 525)]] = v81[1 + 2];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v5079 = v81[2 + 0];
									v79[v5079] = v79[v5079](v13(v79, v5079 + 1 + 0, v81[3]));
									v73 = v73 + (929 - (13 + 915));
									v81 = v69[v73];
									v79[v81[2]][v79[v81[3]]] = v79[v81[1558 - (323 + 1231)]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[3];
									v73 = v73 + (889 - (442 + 446));
									v81 = v69[v73];
									v79[v81[1221 - (1082 + 137)]] = v79[v81[14 - 11]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1 + 1]] = v81[2 + 1];
									v73 = v73 + (1056 - (339 + 716));
									v81 = v69[v73];
									v79[v81[1148 - (67 + 1079)]] = v81[857 - (619 + 235)];
									v73 = v73 + (1749 - (899 + 849));
									v81 = v69[v73];
									v5079 = v81[1 + 1];
									v79[v5079] = v79[v5079](v13(v79, v5079 + (870 - (543 + 326)), v81[3]));
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v79[v81[2]][v79[v81[1 + 2]]] = v79[v81[4 + 0]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[5 - 3]] = v81[3];
									v73 = v73 + (504 - (256 + 247));
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[5 - 2]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2 - 0]] = v81[154 - (62 + 89)];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[314 - (267 + 44)];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v5079 = v81[6 - 4];
									v79[v5079] = v79[v5079](v13(v79, v5079 + 1 + 0, v81[3]));
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]][v79[v81[1663 - (94 + 1566)]]] = v79[v81[15 - 11]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1443 - (1411 + 30)]] = v81[2 + 1];
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[9 - 6]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[5 - 3]] = v81[3];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[5 - 2];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v5079 = v81[1 + 1];
									v79[v5079] = v79[v5079](v13(v79, v5079 + 1, v81[11 - 8]));
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[5 - 3]][v79[v81[5 - 2]]] = v79[v81[1825 - (1530 + 291)]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1 + 1]] = v81[7 - 4];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[9 - 7]] = v79[v81[3]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1795 - (1539 + 254)]] = v81[1215 - (12 + 1200)];
									v73 = v73 + (932 - (526 + 405));
									v81 = v69[v73];
									v79[v81[1 + 1]] = v81[1637 - (1107 + 527)];
									v73 = v73 + 1;
									v81 = v69[v73];
									v5079 = v81[1 + 1];
									v79[v5079] = v79[v5079](v13(v79, v5079 + 1, v81[1713 - (121 + 1589)]));
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]][v79[v81[7 - 4]]] = v79[v81[1602 - (562 + 1036)]];
									v73 = v73 + (4 - 3);
									v81 = v69[v73];
									v79[v81[2]] = v81[5 - 2];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1 + 1]] = v79[v81[3 + 0]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1970 - (1586 + 382)]] = v81[8 - 5];
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v79[v81[2]] = v81[3];
									v73 = v73 + (1983 - (652 + 1330));
									v81 = v69[v73];
									v5079 = v81[5 - 3];
									v79[v5079] = v79[v5079](v13(v79, v5079 + (1654 - (770 + 883)), v81[6 - 3]));
									v73 = v73 + (573 - (62 + 510));
									v81 = v69[v73];
									v79[v81[1 + 1]][v79[v81[341 - (296 + 42)]]] = v79[v81[7 - 3]];
									v73 = v73 + (189 - (29 + 159));
									v81 = v69[v73];
									v79[v81[2]] = v81[3 + 0];
									v73 = v73 + (542 - (63 + 478));
									v81 = v69[v73];
									v79[v81[1 + 1]] = v79[v81[965 - (561 + 401)]];
									v73 = v73 + (329 - (229 + 99));
									v81 = v69[v73];
									v79[v81[6 - 4]] = v81[5 - 2];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[3 - 1]] = v81[6 - 3];
									v73 = v73 + (874 - (123 + 750));
									v81 = v69[v73];
									v5079 = v81[2];
									v79[v5079] = v79[v5079](v13(v79, v5079 + 1, v81[3 + 0]));
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[2]][v79[v81[1 + 2]]] = v79[v81[4 + 0]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1129 - (460 + 667)]] = v81[1782 - (629 + 1150)];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[2 + 1]];
									v73 = v73 + (809 - (469 + 339));
									v81 = v69[v73];
									v79[v81[8 - 6]] = v81[2 + 1];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1 + 1]] = v81[3 + 0];
									v73 = v73 + (1916 - (315 + 1600));
									v81 = v69[v73];
									v5079 = v81[1104 - (21 + 1081)];
									v79[v5079] = v79[v5079](v13(v79, v5079 + 1 + 0, v81[1815 - (1677 + 135)]));
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]][v79[v81[77 - (26 + 48)]]] = v79[v81[8 - 4]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v81[2 + 1];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[3]];
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v79[v81[3 - 1]] = v81[3];
								end
							elseif ((2530 < 4578) and (v82 <= (231 + 101))) then
								if ((1172 <= 3455) and (v82 <= (119 + 211))) then
									local v654 = 0 - 0;
									local v655;
									while true do
										if (v654 == 17) then
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[2 + 0]] = v79[v81[1 + 2]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[3 - 1]] = v81[6 - 3];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[2]] = v81[2 + 1];
											v73 = v73 + 1 + 0;
											v654 = 12 + 6;
										end
										if (v654 == (5 + 5)) then
											v73 = v73 + (100 - (57 + 42));
											v81 = v69[v73];
											v79[v81[1138 - (725 + 411)]] = v81[6 - 3];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v655 = v81[1 + 1];
											v79[v655] = v79[v655](v13(v79, v655 + (3 - 2), v81[2 + 1]));
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[628 - (92 + 534)]][v79[v81[3 + 0]]] = v79[v81[1638 - (114 + 1520)]];
											v654 = 11;
										end
										if (v654 == 21) then
											v79[v81[6 - 4]] = v79[v81[8 - 5]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[2 - 0]] = v81[1 + 2];
											v73 = v73 + (3 - 2);
											v81 = v69[v73];
											v79[v81[8 - 6]] = v81[2 + 1];
											v73 = v73 + (4 - 3);
											v81 = v69[v73];
											v655 = v81[3 - 1];
											v654 = 82 - 60;
										end
										if (v654 == 1) then
											v655 = v81[1865 - (577 + 1286)];
											v79[v655] = v79[v655](v13(v79, v655 + (2 - 1), v81[1535 - (672 + 860)]));
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v79[v81[2 - 0]][v81[3 + 0]] = v79[v81[2 + 2]];
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v79[v81[9 - 7]] = v81[1872 - (544 + 1325)];
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v654 = 2;
										end
										if ((843 < 4021) and ((7 - 2) == v654)) then
											v73 = v73 + (1572 - (579 + 992));
											v81 = v69[v73];
											v79[v81[2 - 0]][v79[v81[812 - (638 + 171)]]] = v79[v81[8 - 4]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[2 + 0]] = v81[1738 - (356 + 1379)];
											v73 = v73 + (4 - 3);
											v81 = v69[v73];
											v79[v81[41 - (36 + 3)]] = v79[v81[5 - 2]];
											v73 = v73 + 1 + 0;
											v654 = 1 + 5;
										end
										if (v654 == (1760 - (734 + 1001))) then
											v81 = v69[v73];
											v79[v81[1817 - (153 + 1662)]] = v81[3];
											break;
										end
										if (v654 == 8) then
											v79[v81[2]] = v81[3];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[5 - 3]] = v81[6 - 3];
											v73 = v73 + (24 - (21 + 2));
											v81 = v69[v73];
											v655 = v81[2];
											v79[v655] = v79[v655](v13(v79, v655 + 1 + 0, v81[3]));
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v654 = 9;
										end
										if (v654 == (1746 - (528 + 1215))) then
											v79[v655] = v79[v655](v13(v79, v655 + 1 + 0, v81[7 - 4]));
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v79[v81[2 - 0]][v79[v81[1908 - (15 + 1890)]]] = v79[v81[4]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[2 - 0]] = v81[2 + 1];
											v73 = v73 + (1 - 0);
											v81 = v69[v73];
											v79[v81[7 - 5]] = v79[v81[488 - (295 + 190)]];
											v654 = 2 + 2;
										end
										if (v654 == (1338 - (1176 + 155))) then
											v81 = v69[v73];
											v79[v81[2]][v79[v81[7 - 4]]] = v79[v81[1705 - (1456 + 245)]];
											v73 = v73 + (1554 - (523 + 1030));
											v81 = v69[v73];
											v79[v81[2]] = v81[3];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[2]] = v79[v81[3]];
											v73 = v73 + (1291 - (857 + 433));
											v81 = v69[v73];
											v654 = 8;
										end
										if ((1796 == 1796) and (v654 == (99 - (35 + 64)))) then
											v655 = nil;
											v79[v81[1996 - (1272 + 722)]] = v79[v81[1 + 2]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[1741 - (1074 + 665)]] = v81[3];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[1 + 1]] = v81[1 + 2];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v654 = 1 + 0;
										end
										if ((4520 >= 4243) and (v654 == (103 - 79))) then
											v73 = v73 + (1057 - (371 + 685));
											v81 = v69[v73];
											v79[v81[2]][v79[v81[3]]] = v79[v81[4 + 0]];
											v73 = v73 + (1709 - (966 + 742));
											v81 = v69[v73];
											v79[v81[2 + 0]] = v81[2 + 1];
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v79[v81[407 - (383 + 22)]] = v79[v81[9 - 6]];
											v73 = v73 + (1722 - (955 + 766));
											v654 = 445 - (411 + 9);
										end
										if (v654 == (18 + 5)) then
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[1365 - (155 + 1208)]] = v81[760 - (670 + 87)];
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v79[v81[5 - 3]] = v81[3 - 0];
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v655 = v81[1 + 1];
											v79[v655] = v79[v655](v13(v79, v655 + (1341 - (771 + 569)), v81[1301 - (762 + 536)]));
											v654 = 24;
										end
										if (v654 == (436 - (59 + 358))) then
											v81 = v69[v73];
											v79[v81[1408 - (1387 + 19)]] = v79[v81[304 - (229 + 72)]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[433 - (397 + 34)]] = v81[2 + 1];
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v79[v81[1 + 1]] = v81[2 + 1];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v654 = 20;
										end
										if ((1157 <= 1701) and (v654 == 11)) then
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[564 - (35 + 527)]] = v81[4 - 1];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[3 - 1]] = v79[v81[5 - 2]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[2]] = v81[3 + 0];
											v73 = v73 + (2 - 1);
											v654 = 45 - 33;
										end
										if ((4908 > 2999) and ((6 + 12) == v654)) then
											v81 = v69[v73];
											v655 = v81[1 + 1];
											v79[v655] = v79[v655](v13(v79, v655 + (1 - 0), v81[19 - (9 + 7)]));
											v73 = v73 + (1 - 0);
											v81 = v69[v73];
											v79[v81[2]][v79[v81[1626 - (764 + 859)]]] = v79[v81[6 - 2]];
											v73 = v73 + (247 - (20 + 226));
											v81 = v69[v73];
											v79[v81[2 - 0]] = v81[3];
											v73 = v73 + (1 - 0);
											v654 = 6 + 13;
										end
										if ((13 == v654) or (942 >= 2806)) then
											v81 = v69[v73];
											v79[v81[896 - (334 + 560)]] = v81[1918 - (1277 + 638)];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[448 - (185 + 261)]] = v79[v81[1551 - (107 + 1441)]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[2]] = v81[5 - 2];
											v73 = v73 + 1;
											v81 = v69[v73];
											v654 = 3 + 11;
										end
										if ((748 > 284) and ((876 - (365 + 489)) == v654)) then
											v79[v655] = v79[v655](v13(v79, v655 + 1 + 0, v81[3 + 0]));
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[1 + 1]][v79[v81[3]]] = v79[v81[571 - (344 + 223)]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[2]] = v81[3];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[2]] = v79[v81[1492 - (655 + 834)]];
											v654 = 1623 - (573 + 1027);
										end
										if ((836 > 209) and (v654 == (1 + 3))) then
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v79[v81[2 + 0]] = v81[1307 - (1243 + 61)];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[544 - (227 + 315)]] = v81[1781 - (140 + 1638)];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v655 = v81[1880 - (1512 + 366)];
											v79[v655] = v79[v655](v13(v79, v655 + 1, v81[5 - 2]));
											v654 = 9 - 4;
										end
										if ((1460 - (9 + 1435)) == v654) then
											v73 = v73 + 1;
											v81 = v69[v73];
											v655 = v81[1 + 1];
											v79[v655] = v79[v655](v13(v79, v655 + (382 - (220 + 161)), v81[9 - 6]));
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[2 + 0]][v79[v81[8 - 5]]] = v79[v81[4]];
											v73 = v73 + (1 - 0);
											v81 = v69[v73];
											v79[v81[808 - (30 + 776)]] = v81[4 - 1];
											v654 = 17;
										end
										if ((4880 > 4215) and (v654 == (9 + 3))) then
											v81 = v69[v73];
											v79[v81[1935 - (1345 + 588)]] = v81[445 - (9 + 433)];
											v73 = v73 + 1;
											v81 = v69[v73];
											v655 = v81[6 - 4];
											v79[v655] = v79[v655](v13(v79, v655 + 1 + 0, v81[3 + 0]));
											v73 = v73 + (315 - (215 + 99));
											v81 = v69[v73];
											v79[v81[1822 - (1807 + 13)]][v79[v81[3]]] = v79[v81[839 - (115 + 720)]];
											v73 = v73 + (1551 - (615 + 935));
											v654 = 8 + 5;
										end
										if (v654 == (1768 - (1530 + 223))) then
											v79[v81[2 + 0]] = v81[1494 - (990 + 501)];
											v73 = v73 + (3 - 2);
											v81 = v69[v73];
											v79[v81[2 + 0]] = v79[v81[8 - 5]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[4 - 2]] = v81[5 - 2];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[2]] = v81[3];
											v654 = 1411 - (1162 + 233);
										end
										if (v654 == (1 + 1)) then
											v79[v81[4 - 2]] = v79[v81[7 - 4]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[2 + 0]] = v81[3];
											v73 = v73 + (996 - (352 + 643));
											v81 = v69[v73];
											v79[v81[2 + 0]] = v81[3 + 0];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v655 = v81[2];
											v654 = 6 - 3;
										end
										if (v654 == 14) then
											v79[v81[1384 - (249 + 1133)]] = v81[117 - (9 + 105)];
											v73 = v73 + (3 - 2);
											v81 = v69[v73];
											v655 = v81[2];
											v79[v655] = v79[v655](v13(v79, v655 + (61 - (41 + 19)), v81[3 - 0]));
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[1633 - (128 + 1503)]][v79[v81[1 + 2]]] = v79[v81[18 - 14]];
											v73 = v73 + (1099 - (6 + 1092));
											v81 = v69[v73];
											v654 = 257 - (13 + 229);
										end
										if (v654 == (9 - 3)) then
											v81 = v69[v73];
											v79[v81[4 - 2]] = v81[3];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[2]] = v81[3];
											v73 = v73 + (3 - 2);
											v81 = v69[v73];
											v655 = v81[1105 - (530 + 573)];
											v79[v655] = v79[v655](v13(v79, v655 + 1, v81[3 + 0]));
											v73 = v73 + (408 - (232 + 175));
											v654 = 3 + 4;
										end
										if ((328 <= 2120) and ((40 - 20) == v654)) then
											v655 = v81[2];
											v79[v655] = v79[v655](v13(v79, v655 + 1, v81[342 - (297 + 42)]));
											v73 = v73 + (822 - (725 + 96));
											v81 = v69[v73];
											v79[v81[2]][v79[v81[3]]] = v79[v81[7 - 3]];
											v73 = v73 + (1760 - (1096 + 663));
											v81 = v69[v73];
											v79[v81[2]] = v81[5 - 2];
											v73 = v73 + (3 - 2);
											v81 = v69[v73];
											v654 = 21;
										end
										if (v654 == (830 - (519 + 302))) then
											v79[v81[1970 - (92 + 1876)]][v79[v81[2 + 1]]] = v79[v81[819 - (275 + 540)]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[2]] = v81[1240 - (164 + 1073)];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[2]] = v79[v81[2 + 1]];
											v73 = v73 + (1 - 0);
											v81 = v69[v73];
											v79[v81[3 - 1]] = v81[3];
											v654 = 1 + 9;
										end
									end
								elseif ((877 <= 3296) and (v82 == (1057 - (21 + 705)))) then
									v79[v81[1 + 1]] = v81[1 + 2];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[3 - 1]][v79[v81[1780 - (1318 + 459)]]] = v79[v81[4]];
									v73 = v73 + (1279 - (393 + 885));
									v81 = v69[v73];
									v79[v81[8 - 6]] = v81[1196 - (55 + 1138)];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[5 - 3]] = v79[v81[1 + 2]][v79[v81[1 + 3]]];
									v73 = v73 + (50 - (12 + 37));
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[1 + 2];
									v73 = v73 + (1685 - (801 + 883));
									v81 = v69[v73];
									v79[v81[7 - 5]][v79[v81[3]]] = v79[v81[1 + 3]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[2 + 1];
									v73 = v73 + (4 - 3);
									v81 = v69[v73];
									v79[v81[1 + 1]] = v79[v81[1674 - (379 + 1292)]][v79[v81[4 + 0]]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1 + 1]] = v81[1207 - (1187 + 17)];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]][v79[v81[1 + 2]]] = v79[v81[9 - 5]];
								else
									local v5187;
									local v5188;
									v5188 = v81[251 - (22 + 227)];
									v5187 = v79[v81[3]];
									v79[v5188 + 1] = v5187;
									v79[v5188] = v5187[v81[1 + 3]];
									v73 = v73 + (405 - (330 + 74));
									v81 = v69[v73];
									v79[v81[434 - (39 + 393)]] = v64[v81[3 - 0]];
									v73 = v73 + (485 - (157 + 327));
									v81 = v69[v73];
									v79[v81[2 + 0]] = v79[v81[5 - 2]][v81[4]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[612 - (31 + 578)]][v81[4]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v5188 = v81[2];
									v79[v5188] = v79[v5188](v13(v79, v5188 + (1 - 0), v81[1603 - (1411 + 189)]));
									v73 = v73 + 1;
									v81 = v69[v73];
									if v79[v81[2]] then
										v73 = v73 + 1;
									else
										v73 = v81[13 - 10];
									end
								end
							elseif (v82 <= (198 + 136)) then
								if (v82 == (323 + 10)) then
									if (v79[v81[2]] ~= v81[1 + 3]) then
										v73 = v73 + (877 - (848 + 28));
									else
										v73 = v81[990 - (370 + 617)];
									end
								else
									local v5202 = 0 - 0;
									local v5203;
									local v5204;
									while true do
										if ((v5202 == (16 - 10)) or (213 > 698)) then
											v79[v81[1591 - (757 + 832)]] = {};
											v73 = v73 + (1485 - (969 + 515));
											v81 = v69[v73];
											v79[v81[2 + 0]] = v81[3];
											break;
										end
										if (((2 + 0) == v5202) or (2613 == 382)) then
											v81 = v69[v73];
											v5204 = v81[2 + 0];
											v79[v5204](v13(v79, v5204 + (1111 - (539 + 571)), v81[1 + 2]));
											v73 = v73 + (1946 - (424 + 1521));
											v81 = v69[v73];
											v5202 = 1227 - (536 + 688);
										end
										if ((865 > 769) and (v5202 == (808 - (82 + 722)))) then
											v81 = v69[v73];
											v79[v81[1 + 1]] = v81[1889 - (1873 + 13)];
											v73 = v73 + (1006 - (469 + 536));
											v81 = v69[v73];
											v5204 = v81[2];
											v5202 = 5;
										end
										if (v5202 == (1 + 2)) then
											v79[v81[6 - 4]] = v81[3 + 0];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[1667 - (1191 + 474)]] = v79[v81[211 - (50 + 158)]][v79[v81[9 - 5]]];
											v73 = v73 + (2 - 1);
											v5202 = 3 + 1;
										end
										if (v5202 == (0 - 0)) then
											v5203 = nil;
											v5204 = nil;
											v79[v81[3 - 1]][v79[v81[11 - 8]]] = v79[v81[3 + 1]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v5202 = 1 - 0;
										end
										if ((2204 < 4144) and (v5202 == 1)) then
											v79[v81[1 + 1]] = v81[3 + 0];
											v73 = v73 + (3 - 2);
											v81 = v69[v73];
											v79[v81[3 - 1]] = v79[v81[159 - (77 + 79)]][v79[v81[4]]];
											v73 = v73 + 1 + 0;
											v5202 = 1 + 1;
										end
										if ((12 - 7) == v5202) then
											v5203 = v79[v81[3 + 0]];
											v79[v5204 + (687 - (114 + 572))] = v5203;
											v79[v5204] = v5203[v79[v81[2 + 2]]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v5202 = 10 - 4;
										end
									end
								end
							elseif (v82 > (1843 - (1281 + 227))) then
								local v5205 = 0 + 0;
								while true do
									if (v5205 == (2 + 1)) then
										v79[v81[6 - 4]][v81[3]] = v79[v81[2 + 2]];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v5205 = 750 - (540 + 206);
									end
									if (v5205 == 4) then
										do
											return;
										end
										break;
									end
									if (v5205 == 0) then
										v79[v81[2]] = v63[v81[3]];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v5205 = 1419 - (117 + 1301);
									end
									if (v5205 == 2) then
										v79[v81[4 - 2]] = v79[v81[4 - 1]][v81[4 - 0]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v5205 = 1259 - (594 + 662);
									end
									if (v5205 == (1708 - (1111 + 596))) then
										v79[v81[1 + 1]] = v79[v81[3 + 0]][v81[7 - 3]];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v5205 = 4 - 2;
									end
								end
							else
								v79[v81[2 + 0]][v79[v81[619 - (488 + 128)]]] = v79[v81[1 + 3]];
							end
						elseif (v82 <= (814 - 471)) then
							if (v82 <= (652 - (33 + 280))) then
								if ((v82 <= 337) or (3977 < 614)) then
									v79[v81[1 + 1]] = v81[752 - (401 + 348)];
									v73 = v73 + (1117 - (1100 + 16));
									v81 = v69[v73];
									v79[v81[2 + 0]] = v79[v81[3]][v79[v81[1712 - (576 + 1132)]]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2 - 0]][v79[v81[8 - 5]]] = v79[v81[1 + 3]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]] = v81[3];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[1528 - (1118 + 407)]][v79[v81[4]]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[7 - 4] ~= (0 - 0);
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v79[v81[1880 - (340 + 1538)]][v79[v81[3]]] = v79[v81[1860 - (981 + 875)]];
									v73 = v73 + (688 - (135 + 552));
									v81 = v69[v73];
									v79[v81[1 + 1]] = v81[1 + 2];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[2 + 1]][v79[v81[13 - 9]]];
								elseif (v82 > (1281 - 943)) then
									local v5208;
									v79[v81[2 + 0]] = v79[v81[3]][v81[4]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1545 - (1347 + 196)]] = v79[v81[1775 - (472 + 1300)]][v81[17 - 13]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[582 - (99 + 481)]] = v79[v81[1105 - (808 + 294)]][v81[3 + 1]];
									v73 = v73 + (1886 - (516 + 1369));
									v81 = v69[v73];
									v79[v81[2 + 0]] = v64[v81[9 - 6]];
									v73 = v73 + (839 - (493 + 345));
									v81 = v69[v73];
									v79[v81[2 + 0]] = v63[v81[3]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[7 - 5]] = v79[v81[4 - 1]][v81[3 + 1]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[1 + 1]] = v79[v81[74 - (15 + 56)]][v79[v81[4]]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[1722 - (950 + 769)]][v81[1632 - (1056 + 572)]];
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v79[v81[2]] = v81[6 - 3];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[254 - (223 + 29)]] = v81[3 - 0];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v81[3 + 0];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v5208 = v81[2];
									v79[v5208] = v79[v5208](v13(v79, v5208 + 1 + 0, v81[3]));
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[4 - 2]] = v79[v81[3]] * v79[v81[4 + 0]];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[4 - 2]] = v79[v81[11 - 8]][v81[873 - (517 + 352)]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[3 - 1]] = v79[v81[3]] + v79[v81[457 - (247 + 206)]];
								else
									local v5233 = 930 - (245 + 685);
									while true do
										if ((0 - 0) == v5233) then
											v79[v81[3 - 1]] = v81[1736 - (1197 + 536)];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[1 + 1]] = v79[v81[3]][v79[v81[15 - 11]]];
											v5233 = 1;
										end
										if (v5233 == (2 + 0)) then
											v81 = v69[v73];
											v79[v81[2]] = v81[641 - (79 + 559)];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v5233 = 13 - 10;
										end
										if ((1 + 4) == v5233) then
											v81 = v69[v73];
											v79[v81[2 + 0]] = v81[3];
											v73 = v73 + 1;
											v81 = v69[v73];
											v5233 = 6;
										end
										if ((4406 >= 3334) and (v5233 == (2 + 2))) then
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v79[v81[4 - 2]][v79[v81[2 + 1]]] = v79[v81[3 + 1]];
											v73 = v73 + 1 + 0;
											v5233 = 5;
										end
										if (v5233 == (3 + 0)) then
											v79[v81[1599 - (332 + 1265)]] = v79[v81[3 - 0]][v79[v81[804 - (306 + 494)]]];
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v79[v81[5 - 3]] = v81[3] ~= (498 - (350 + 148));
											v5233 = 1 + 3;
										end
										if (v5233 == (1225 - (914 + 310))) then
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[751 - (287 + 462)]][v79[v81[682 - (255 + 424)]]] = v79[v81[2 + 2]];
											v73 = v73 + (4 - 3);
											v5233 = 2;
										end
										if (v5233 == 6) then
											v79[v81[1 + 1]] = v79[v81[1061 - (158 + 900)]][v79[v81[4 + 0]]];
											break;
										end
									end
								end
							elseif ((v82 <= (886 - 545)) or (4022 == 2992)) then
								if ((v82 > (197 + 143)) or (1368 >= 4666)) then
									local v5234;
									local v5235;
									v5235 = v81[809 - (798 + 9)];
									v5234 = v79[v81[3]];
									v79[v5235 + (386 - (58 + 327))] = v5234;
									v79[v5235] = v5234[v81[959 - (256 + 699)]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[3 - 1]] = v63[v81[399 - (36 + 360)]];
									v73 = v73 + (1814 - (111 + 1702));
									v81 = v69[v73];
									v79[v81[473 - (410 + 61)]] = v79[v81[1142 - (961 + 178)]][v81[1847 - (40 + 1803)]];
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v5235 = v81[1 + 1];
									v79[v5235] = v79[v5235](v13(v79, v5235 + 1, v81[2 + 1]));
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									if v79[v81[1062 - (314 + 746)]] then
										v73 = v73 + (1 - 0);
									else
										v73 = v81[326 - (184 + 139)];
									end
								else
									v79[v81[829 - (284 + 543)]] = v81[3 - 0];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[1695 - (13 + 1679)]][v79[v81[4]]];
									v73 = v73 + (484 - (361 + 122));
									v81 = v69[v73];
									v79[v81[1755 - (1270 + 483)]] = v81[3];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]][v79[v81[2 + 1]]] = v79[v81[1891 - (1569 + 318)]];
									v73 = v73 + (1904 - (1340 + 563));
									v81 = v69[v73];
									v79[v81[2]] = v81[2 + 1];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[3 - 1]] = v79[v81[2 + 1]][v79[v81[2 + 2]]];
								end
							elseif (v82 > (656 - 314)) then
								local v5259;
								v79[v81[3 - 1]] = v81[3];
								v73 = v73 + (122 - (118 + 3));
								v81 = v69[v73];
								v79[v81[898 - (616 + 280)]] = v81[2 + 1];
								v73 = v73 + (451 - (262 + 188));
								v81 = v69[v73];
								v5259 = v81[2];
								v79[v5259] = v79[v5259](v13(v79, v5259 + (1819 - (191 + 1627)), v81[3 - 0]));
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[218 - (170 + 46)]][v81[837 - (196 + 638)]] = v79[v81[11 - 7]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1853 - (292 + 1559)]] = v79[v81[3]];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[162 - (159 + 1)]] = v81[3];
								v73 = v73 + (525 - (445 + 79));
								v81 = v69[v73];
								v79[v81[69 - (33 + 34)]] = v81[3];
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v5259 = v81[1149 - (487 + 660)];
								v79[v5259] = v79[v5259](v13(v79, v5259 + 1, v81[3]));
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[7 - 5]][v81[3]] = v79[v81[4]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1335 - (577 + 756)]] = v79[v81[5 - 2]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[1542 - (56 + 1483)];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 - 0]] = v81[3];
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v5259 = v81[5 - 3];
								v79[v5259] = v79[v5259](v13(v79, v5259 + (1502 - (436 + 1065)), v81[1141 - (674 + 464)]));
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[2 + 0]][v81[3]] = v79[v81[3 + 1]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2 + 0]] = v79[v81[1 + 2]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v81[8 - 5];
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[4 - 1];
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v5259 = v81[2 + 0];
								v79[v5259] = v79[v5259](v13(v79, v5259 + 1, v81[3]));
								v73 = v73 + (442 - (406 + 35));
								v81 = v69[v73];
								v79[v81[1679 - (487 + 1190)]][v81[6 - 3]] = v79[v81[4]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[316 - (178 + 136)]] = v79[v81[3]];
								v73 = v73 + (1213 - (473 + 739));
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[5 - 2];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[3 - 1]] = v81[5 - 2];
								v73 = v73 + (726 - (267 + 458));
								v81 = v69[v73];
								v5259 = v81[2 - 0];
								v79[v5259] = v79[v5259](v13(v79, v5259 + 1 + 0, v81[1652 - (275 + 1374)]));
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]][v81[3]] = v79[v81[1026 - (828 + 194)]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[1186 - (772 + 411)]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[8 - 6]] = v81[3 + 0];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[1027 - (795 + 229)];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v5259 = v81[9 - 7];
								v79[v5259] = v79[v5259](v13(v79, v5259 + (2 - 1), v81[3 + 0]));
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1 + 1]][v81[7 - 4]] = v79[v81[1 + 3]];
								v73 = v73 + (34 - (13 + 20));
								v81 = v69[v73];
								v79[v81[1251 - (562 + 687)]] = v79[v81[3]];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[1052 - (277 + 773)]] = v81[3];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v81[3];
								v73 = v73 + (1504 - (1001 + 502));
								v81 = v69[v73];
								v5259 = v81[1314 - (402 + 910)];
								v79[v5259] = v79[v5259](v13(v79, v5259 + (3 - 2), v81[3 + 0]));
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[9 - 7]][v81[8 - 5]] = v79[v81[4]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1079 - (1066 + 11)]] = v79[v81[3]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[279 - (254 + 22)];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[7 - 5]] = v81[3];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v5259 = v81[1328 - (375 + 951)];
								v79[v5259] = v79[v5259](v13(v79, v5259 + (1279 - (755 + 523)), v81[848 - (232 + 613)]));
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v79[v81[2]][v81[3 + 0]] = v79[v81[3 + 1]];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[639 - (420 + 216)]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[4 - 2]] = v81[1785 - (1513 + 269)];
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v79[v81[1085 - (519 + 564)]] = v81[13 - 10];
								v73 = v73 + (535 - (385 + 149));
								v81 = v69[v73];
								v5259 = v81[464 - (277 + 185)];
								v79[v5259] = v79[v5259](v13(v79, v5259 + 1 + 0, v81[1357 - (872 + 482)]));
								v73 = v73 + (1402 - (1238 + 163));
								v81 = v69[v73];
								v79[v81[2]][v81[3]] = v79[v81[2 + 2]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[5 - 3]] = v79[v81[3]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2 - 0]] = v81[1 + 2];
								v73 = v73 + (1958 - (139 + 1818));
								v81 = v69[v73];
								v79[v81[2]] = v81[3];
								v73 = v73 + (437 - (367 + 69));
								v81 = v69[v73];
								v5259 = v81[4 - 2];
								v79[v5259] = v79[v5259](v13(v79, v5259 + (27 - (21 + 5)), v81[7 - 4]));
								v73 = v73 + (201 - (23 + 177));
								v81 = v69[v73];
								v79[v81[2]][v81[11 - 8]] = v79[v81[4]];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[2 + 0]] = v79[v81[3]];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[395 - (239 + 154)]] = v81[1710 - (1464 + 243)];
								v73 = v73 + (597 - (408 + 188));
								v81 = v69[v73];
								v79[v81[2 - 0]] = v81[3];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v5259 = v81[107 - (50 + 55)];
								v79[v5259] = v79[v5259](v13(v79, v5259 + (1 - 0), v81[1 + 2]));
								v73 = v73 + (1939 - (1291 + 647));
								v81 = v69[v73];
								v79[v81[9 - 7]][v81[734 - (387 + 344)]] = v79[v81[4 + 0]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[1370 - (321 + 1046)]];
								v73 = v73 + (1838 - (1762 + 75));
								v81 = v69[v73];
								v79[v81[1715 - (385 + 1328)]] = v81[4 - 1];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[630 - (157 + 471)]] = v81[3 - 0];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v5259 = v81[1138 - (14 + 1122)];
								v79[v5259] = v79[v5259](v13(v79, v5259 + (1 - 0), v81[1315 - (1063 + 249)]));
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[4 - 2]][v81[11 - 8]] = v79[v81[139 - (28 + 107)]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[443 - (144 + 297)]] = v79[v81[1154 - (803 + 348)]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]] = v81[118 - (47 + 68)];
								v73 = v73 + (711 - (674 + 36));
								v81 = v69[v73];
								v79[v81[1105 - (102 + 1001)]] = v81[3];
								v73 = v73 + 1;
								v81 = v69[v73];
								v5259 = v81[1 + 1];
								v79[v5259] = v79[v5259](v13(v79, v5259 + (460 - (93 + 366)), v81[3 + 0]));
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2 - 0]][v81[641 - (413 + 225)]] = v79[v81[14 - 10]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[3 - 0]];
								v73 = v73 + (771 - (188 + 582));
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[955 - (576 + 376)];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[1929 - (362 + 1565)]] = v81[9 - 6];
								v73 = v73 + 1;
								v81 = v69[v73];
								v5259 = v81[2 + 0];
								v79[v5259] = v79[v5259](v13(v79, v5259 + 1 + 0, v81[2 + 1]));
								v73 = v73 + (1952 - (632 + 1319));
								v81 = v69[v73];
								v79[v81[2]][v81[2 + 1]] = v79[v81[1470 - (591 + 875)]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[2 - 0]] = v79[v81[3 + 0]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[2 + 1];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[2 + 1];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v5259 = v81[2];
								v79[v5259] = v79[v5259](v13(v79, v5259 + 1, v81[3]));
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[2]][v81[20 - (10 + 7)]] = v79[v81[2 + 2]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[81 - (67 + 12)]] = v79[v81[1 + 2]];
								v73 = v73 + (120 - (96 + 23));
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[3 + 0];
								v73 = v73 + (411 - (154 + 256));
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[6 - 3];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v5259 = v81[1 + 1];
								v79[v5259] = v79[v5259](v13(v79, v5259 + 1 + 0, v81[5 - 2]));
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[7 - 5]][v81[761 - (379 + 379)]] = v79[v81[1116 - (59 + 1053)]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[3 - 1]] = v79[v81[684 - (505 + 176)]];
							else
								v79[v81[515 - (331 + 182)]] = v63[v81[509 - (217 + 289)]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[3]][v81[4]];
								v73 = v73 + (1211 - (242 + 968));
								v81 = v69[v73];
								v79[v81[1 + 1]][v81[13 - 10]] = v79[v81[1 + 3]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[6 - 4]] = v63[v81[1 + 2]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1688 - (90 + 1596)]] = v79[v81[3]][v81[3 + 1]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								if ((822 == 822) and v79[v81[147 - (42 + 103)]]) then
									v73 = v73 + (1641 - (736 + 904));
								else
									v73 = v81[8 - 5];
								end
							end
						elseif (v82 <= (1006 - 660)) then
							if (v82 <= (713 - 369)) then
								local v670 = 0 - 0;
								local v671;
								while true do
									if ((v670 == 8) or (4768 < 1256)) then
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v63[v81[5 - 2]] = v79[v81[2 - 0]];
										break;
									end
									if (v670 == (5 + 2)) then
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[1350 - (1339 + 8)]][v81[4 + 0]];
										v670 = 8;
									end
									if ((3 + 3) == v670) then
										v81 = v69[v73];
										v671 = v81[2];
										v79[v671] = v79[v671](v79[v671 + 1]);
										v670 = 1697 - (495 + 1195);
									end
									if (v670 == (1 + 3)) then
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[3]][v81[1381 - (689 + 688)]];
										v73 = v73 + 1;
										v670 = 923 - (7 + 911);
									end
									if (v670 == (1796 - (936 + 857))) then
										v81 = v69[v73];
										v79[v81[1 + 1]] = v79[v81[1476 - (1101 + 372)]][v81[4]];
										v73 = v73 + (319 - (150 + 168));
										v670 = 12 - 8;
									end
									if ((1092 < 3645) and ((1954 - (1715 + 234)) == v670)) then
										v81 = v69[v73];
										v79[v81[2 + 0]] = v79[v81[3]][v81[1573 - (1103 + 466)]];
										v73 = v73 + (1921 - (726 + 1194));
										v670 = 6;
									end
									if (v670 == 1) then
										v81 = v69[v73];
										v79[v81[2]] = v64[v81[1888 - (1698 + 187)]];
										v73 = v73 + (1297 - (1075 + 221));
										v670 = 5 - 3;
									end
									if ((1427 - (22 + 1405)) == v670) then
										v671 = nil;
										v79[v81[6 - 4]] = v64[v81[1 + 2]];
										v73 = v73 + (1 - 0);
										v670 = 1;
									end
									if (v670 == (1430 - (886 + 542))) then
										v81 = v69[v73];
										v79[v81[3 - 1]] = v79[v81[3]][v81[4]];
										v73 = v73 + (438 - (224 + 213));
										v670 = 1794 - (1420 + 371);
									end
								end
							elseif ((v82 > (1263 - 918)) or (4902 == 3574)) then
								v79[v81[805 - (32 + 771)]][v79[v81[13 - 10]]] = v79[v81[4]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]] = v81[2 + 1];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[7 - 5]] = v79[v81[4 - 1]][v79[v81[4]]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[750 - (60 + 688)]] = v81[1466 - (103 + 1360)] ~= (1033 - (662 + 371));
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[2]][v79[v81[749 - (339 + 407)]]] = v79[v81[4]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1413 - (1293 + 118)]] = v81[1943 - (1323 + 617)];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2 + 0]] = v79[v81[3]][v79[v81[4]]];
								v73 = v73 + (284 - (46 + 237));
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[3] ~= 0;
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[7 - 5]][v79[v81[285 - (123 + 159)]]] = v79[v81[708 - (399 + 305)]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[805 - (120 + 683)]] = v81[5 - 2];
							else
								local v5383 = 0 - 0;
								local v5384;
								local v5385;
								local v5386;
								local v5387;
								local v5388;
								while true do
									if ((7 - 3) == v5383) then
										v79[v81[2 + 0]] = v79[v81[1945 - (707 + 1235)]];
										v73 = v73 + (985 - (609 + 375));
										v81 = v69[v73];
										v5388 = v81[640 - (175 + 463)];
										v5383 = 17 - 12;
									end
									if (((23 - 14) == v5383) or (3690 == 1721)) then
										if (v79[v81[2]] or (4830 == 4278)) then
											v73 = v73 + (1 - 0);
										else
											v73 = v81[1 + 2];
										end
										break;
									end
									if (v5383 == (10 - 7)) then
										v81 = v69[v73];
										v79[v81[2 - 0]] = v79[v81[798 - (611 + 184)]][v81[4]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v5383 = 13 - 9;
									end
									if ((1064 > 837) and (v5383 == (17 - 10))) then
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2 + 0]] = v79[v81[3 + 0]];
										v73 = v73 + 1;
										v5383 = 3 + 5;
									end
									if (v5383 == (546 - (475 + 71))) then
										v5384 = nil;
										v5385, v5386 = nil;
										v5387 = nil;
										v5388 = nil;
										v5383 = 1 - 0;
									end
									if (6 == v5383) then
										v73 = v73 + (41 - (19 + 21));
										v81 = v69[v73];
										v5388 = v81[2];
										v79[v5388] = v79[v5388](v13(v79, v5388 + (656 - (445 + 210)), v74));
										v5383 = 1 + 6;
									end
									if (v5383 == (2 - 1)) then
										v5388 = v81[1914 - (961 + 951)];
										v5387 = v79[v81[1 + 2]];
										v79[v5388 + 1] = v5387;
										v79[v5388] = v5387[v81[6 - 2]];
										v5383 = 2;
									end
									if ((v5383 == 5) or (2120 >= 4044)) then
										v5385, v5386 = v72(v79[v5388](v79[v5388 + 1]));
										v74 = (v5386 + v5388) - (1 + 0);
										v5384 = 1657 - (739 + 918);
										for v12405 = v5388, v74 do
											local v12406 = 0 + 0;
											while true do
												if ((1324 <= 4259) and (v12406 == (1798 - (1267 + 531)))) then
													v5384 = v5384 + (1065 - (122 + 942));
													v79[v12405] = v5385[v5384];
													break;
												end
											end
										end
										v5383 = 2 + 4;
									end
									if (v5383 == (2 + 0)) then
										v73 = v73 + (1571 - (1537 + 33));
										v81 = v69[v73];
										v79[v81[1 + 1]] = v64[v81[7 - 4]];
										v73 = v73 + (3 - 2);
										v5383 = 5 - 2;
									end
									if (v5383 == 8) then
										v81 = v69[v73];
										v79[v81[4 - 2]] = v63[v81[3]];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v5383 = 13 - 4;
									end
								end
							end
						elseif (v82 <= (1356 - 1008)) then
							if ((4145 == 4145) and (v82 > 347)) then
								v79[v81[2]] = v79[v81[8 - 5]][v81[2 + 2]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[9 - 7]][v81[11 - 8]] = v81[1005 - (514 + 487)];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[2]] = v63[v81[6 - 3]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1223 - (661 + 560)]] = v79[v81[3 + 0]][v81[16 - 12]];
								v73 = v73 + (1122 - (686 + 435));
								v81 = v69[v73];
								v79[v81[4 - 2]] = v63[v81[8 - 5]];
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v79[v81[1464 - (760 + 702)]] = v79[v81[3]][v81[1 + 3]];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[7 - 5]][v81[2 + 1]] = v79[v81[7 - 3]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v81[1509 - (601 + 905)];
							else
								local v5404;
								v5404 = v81[997 - (245 + 750)];
								v79[v5404] = v79[v5404](v13(v79, v5404 + 1, v81[1812 - (166 + 1643)]));
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[1 + 1]][v79[v81[3]]] = v79[v81[4 + 0]];
								v73 = v73 + (1980 - (172 + 1807));
								v81 = v69[v73];
								v79[v81[2]] = v81[4 - 1];
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v79[v81[207 - (41 + 164)]] = v79[v81[1 + 2]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[3 - 1]] = v81[1 + 2];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[9 - 7]] = v81[3];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v5404 = v81[2];
								v79[v5404] = v79[v5404](v13(v79, v5404 + 1 + 0, v81[398 - (250 + 145)]));
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1883 - (1235 + 646)]][v79[v81[1679 - (1662 + 14)]]] = v79[v81[11 - 7]];
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v79[v81[2]] = v81[10 - 7];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[4 - 1]];
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v79[v81[2]] = v81[3];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]] = v81[8 - 5];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v5404 = v81[2];
								v79[v5404] = v79[v5404](v13(v79, v5404 + 1, v81[1 + 2]));
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[9 - 7]][v79[v81[3]]] = v79[v81[682 - (424 + 254)]];
								v73 = v73 + (1882 - (795 + 1086));
								v81 = v69[v73];
								v79[v81[975 - (781 + 192)]] = v81[8 - 5];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[172 - (141 + 29)]] = v79[v81[224 - (27 + 194)]];
								v73 = v73 + (1678 - (1181 + 496));
								v81 = v69[v73];
								v79[v81[1381 - (279 + 1100)]] = v81[3 + 0];
								v73 = v73 + (1227 - (352 + 874));
								v81 = v69[v73];
								v79[v81[6 - 4]] = v81[2 + 1];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v5404 = v81[2 - 0];
								v79[v5404] = v79[v5404](v13(v79, v5404 + (1683 - (753 + 929)), v81[920 - (32 + 885)]));
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[1 + 1]][v79[v81[515 - (116 + 396)]]] = v79[v81[4]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[5 - 3]] = v81[14 - 11];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[3]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]] = v81[3];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 - 0]] = v81[11 - 8];
								v73 = v73 + (1518 - (881 + 636));
								v81 = v69[v73];
								v5404 = v81[1 + 1];
								v79[v5404] = v79[v5404](v13(v79, v5404 + (1292 - (9 + 1282)), v81[3 + 0]));
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 - 0]][v79[v81[2 + 1]]] = v79[v81[394 - (208 + 182)]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[664 - (314 + 348)]] = v81[3];
								v73 = v73 + (1944 - (1914 + 29));
								v81 = v69[v73];
								v79[v81[5 - 3]] = v79[v81[7 - 4]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[21 - (17 + 2)]] = v81[357 - (112 + 242)];
								v73 = v73 + (1179 - (559 + 619));
								v81 = v69[v73];
								v79[v81[4 - 2]] = v81[3];
								v73 = v73 + 1;
								v81 = v69[v73];
								v5404 = v81[347 - (137 + 208)];
								v79[v5404] = v79[v5404](v13(v79, v5404 + 1 + 0, v81[3 + 0]));
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 - 0]][v79[v81[3]]] = v79[v81[4]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2 - 0]] = v81[3];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1768 - (330 + 1436)]] = v79[v81[1240 - (470 + 767)]];
								v73 = v73 + (4 - 3);
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[3 + 0];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[2 - 0]] = v81[3];
								v73 = v73 + (78 - (28 + 49));
								v81 = v69[v73];
								v5404 = v81[4 - 2];
								v79[v5404] = v79[v5404](v13(v79, v5404 + 1 + 0, v81[2 + 1]));
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[2 - 0]][v79[v81[3]]] = v79[v81[4]];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[2 - 0]] = v81[3];
								v73 = v73 + (1667 - (1088 + 578));
								v81 = v69[v73];
								v79[v81[774 - (308 + 464)]] = v79[v81[3]];
								v73 = v73 + (1218 - (187 + 1030));
								v81 = v69[v73];
								v79[v81[7 - 5]] = v81[3];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]] = v81[1421 - (533 + 885)];
								v73 = v73 + (800 - (595 + 204));
								v81 = v69[v73];
								v5404 = v81[6 - 4];
								v79[v5404] = v79[v5404](v13(v79, v5404 + 1, v81[1 + 2]));
								v73 = v73 + (828 - (237 + 590));
								v81 = v69[v73];
								v79[v81[5 - 3]][v79[v81[3]]] = v79[v81[4]];
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v79[v81[3 - 1]] = v81[1856 - (1709 + 144)];
								v73 = v73 + (114 - (16 + 97));
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[2 + 1]];
								v73 = v73 + (262 - (42 + 219));
								v81 = v69[v73];
								v79[v81[1342 - (1068 + 272)]] = v81[3];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[9 - 6];
								v73 = v73 + (490 - (21 + 468));
								v81 = v69[v73];
								v5404 = v81[2 + 0];
								v79[v5404] = v79[v5404](v13(v79, v5404 + (1 - 0), v81[3]));
								v73 = v73 + (1138 - (478 + 659));
								v81 = v69[v73];
								v79[v81[1 + 1]][v79[v81[3]]] = v79[v81[2 + 2]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v81[1304 - (678 + 623)];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[375 - (145 + 228)]] = v79[v81[1 + 2]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[892 - (811 + 78)];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[1225 - (28 + 1195)]] = v81[3];
								v73 = v73 + 1;
								v81 = v69[v73];
								v5404 = v81[2];
								v79[v5404] = v79[v5404](v13(v79, v5404 + (782 - (182 + 599)), v81[3 + 0]));
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]][v79[v81[11 - 8]]] = v79[v81[4]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]] = v81[1924 - (1684 + 237)];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v79[v81[1 + 2]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[2 + 1];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2 - 0]] = v81[3];
								v73 = v73 + (4 - 3);
								v81 = v69[v73];
								v5404 = v81[2];
								v79[v5404] = v79[v5404](v13(v79, v5404 + 1, v81[9 - 6]));
								v73 = v73 + (856 - (715 + 140));
								v81 = v69[v73];
								v79[v81[3 - 1]][v79[v81[3 + 0]]] = v79[v81[1 + 3]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]] = v81[6 - 3];
								v73 = v73 + (516 - (302 + 213));
								v81 = v69[v73];
								v79[v81[7 - 5]] = v79[v81[3 + 0]];
								v73 = v73 + (325 - (282 + 42));
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[4 - 1];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[277 - (186 + 89)]] = v81[2 + 1];
								v73 = v73 + (14 - (6 + 7));
								v81 = v69[v73];
								v5404 = v81[647 - (267 + 378)];
								v79[v5404] = v79[v5404](v13(v79, v5404 + 1 + 0, v81[3]));
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 + 0]][v79[v81[193 - (20 + 170)]]] = v79[v81[1 + 3]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[2 - 0]] = v81[3];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[5 - 3]] = v79[v81[1 + 2]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v81[1 + 2];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1642 - (1072 + 568)]] = v81[3 + 0];
								v73 = v73 + 1;
								v81 = v69[v73];
								v5404 = v81[2];
								v79[v5404] = v79[v5404](v13(v79, v5404 + (1806 - (299 + 1506)), v81[1593 - (87 + 1503)]));
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[880 - (828 + 50)]][v79[v81[3 + 0]]] = v79[v81[1 + 3]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[243 - (96 + 145)]] = v81[3];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[2 + 1]];
								v73 = v73 + (61 - (30 + 30));
								v81 = v69[v73];
								v79[v81[270 - (158 + 110)]] = v81[3];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v81[1144 - (1002 + 139)];
								v73 = v73 + (859 - (807 + 51));
								v81 = v69[v73];
								v5404 = v81[2 + 0];
								v79[v5404] = v79[v5404](v13(v79, v5404 + (32 - (7 + 24)), v81[4 - 1]));
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[592 - (211 + 379)]][v79[v81[2 + 1]]] = v79[v81[869 - (15 + 850)]];
							end
						elseif (v82 > (685 - 336)) then
							local v5487 = 120 - (28 + 92);
							local v5488;
							while true do
								if (v5487 == (27 - 19)) then
									v79[v81[2]] = v81[1 + 2];
									v73 = v73 + (468 - (359 + 108));
									v81 = v69[v73];
									v5488 = v81[2];
									v79[v5488] = v79[v5488](v13(v79, v5488 + 1, v81[1 + 2]));
									v73 = v73 + (515 - (474 + 40));
									v81 = v69[v73];
									v79[v81[2]][v79[v81[14 - 11]]] = v79[v81[4]];
									v5487 = 2 + 7;
								end
								if (v5487 == (38 - (4 + 8))) then
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2 + 0]] = v79[v81[3]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1 + 1]] = v81[3];
									v73 = v73 + 1;
									v81 = v69[v73];
									v5487 = 1938 - (1772 + 139);
								end
								if (v5487 == 1) then
									v73 = v73 + (1912 - (428 + 1483));
									v81 = v69[v73];
									v5488 = v81[2];
									v79[v5488] = v79[v5488](v13(v79, v5488 + 1 + 0, v81[6 - 3]));
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]][v79[v81[1074 - (57 + 1014)]]] = v79[v81[193 - (183 + 6)]];
									v73 = v73 + (768 - (376 + 391));
									v5487 = 2 + 0;
								end
								if (v5487 == 11) then
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[230 - (183 + 45)]][v79[v81[3]]] = v79[v81[8 - 4]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[1469 - (277 + 1190)]] = v81[6 - 3];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v5487 = 746 - (202 + 532);
								end
								if ((v5487 == (2 - 0)) or (602 > 3897)) then
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[4 - 1];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[7 - 5]] = v79[v81[1 + 2]];
									v73 = v73 + (1552 - (1008 + 543));
									v81 = v69[v73];
									v79[v81[9 - 7]] = v81[399 - (212 + 184)];
									v5487 = 6 - 3;
								end
								if ((v5487 == (82 - 59)) or (712 == 2200)) then
									v81 = v69[v73];
									v79[v81[2]][v79[v81[4 - 1]]] = v79[v81[1020 - (462 + 554)]];
									v73 = v73 + (1162 - (835 + 326));
									v81 = v69[v73];
									v79[v81[7 - 5]] = v81[934 - (162 + 769)];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[10 - 7]];
									v5487 = 50 - 26;
								end
								if (v5487 == (759 - (347 + 403))) then
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[402 - (147 + 253)]] = v81[8 - 5];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[766 - (345 + 419)]] = v79[v81[3 + 0]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v5487 = 460 - (53 + 397);
								end
								if ((1222 < 3382) and (v5487 == (70 - 45))) then
									v5488 = v81[2];
									v79[v5488] = v79[v5488](v13(v79, v5488 + (1285 - (1075 + 209)), v81[3 + 0]));
									v73 = v73 + (669 - (659 + 9));
									v81 = v69[v73];
									v79[v81[2 + 0]][v79[v81[3 + 0]]] = v79[v81[1130 - (112 + 1014)]];
									v73 = v73 + (459 - (122 + 336));
									v81 = v69[v73];
									v79[v81[47 - (40 + 5)]] = v81[614 - (119 + 492)];
									v5487 = 15 + 11;
								end
								if ((v5487 == (1703 - (182 + 1501))) or (4083 == 256)) then
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v5488 = v81[2];
									v79[v5488] = v79[v5488](v13(v79, v5488 + 1 + 0, v81[3]));
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1 + 1]][v79[v81[243 - (133 + 107)]]] = v79[v81[4]];
									v73 = v73 + (1813 - (1633 + 179));
									v5487 = 821 - (562 + 238);
								end
								if ((253 - (219 + 29)) == v5487) then
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1 + 1]] = v81[2 + 1];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[9 - 7]] = v81[1 + 2];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v5487 = 3 + 3;
								end
								if (v5487 == (27 - 21)) then
									v5488 = v81[2 + 0];
									v79[v5488] = v79[v5488](v13(v79, v5488 + 1 + 0, v81[3]));
									v73 = v73 + (126 - (57 + 68));
									v81 = v69[v73];
									v79[v81[1 + 1]][v79[v81[1591 - (1562 + 26)]]] = v79[v81[5 - 1]];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[2]] = v81[1 + 2];
									v5487 = 7 + 0;
								end
								if (v5487 == (54 - 27)) then
									v79[v81[1 + 1]] = v81[1972 - (662 + 1307)];
									v73 = v73 + 1;
									v81 = v69[v73];
									v5488 = v81[2 + 0];
									v79[v5488] = v79[v5488](v13(v79, v5488 + (4 - 3), v81[2 + 1]));
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[2]][v79[v81[5 - 2]]] = v79[v81[4]];
									v5487 = 1427 - (385 + 1014);
								end
								if ((43 - 25) == v5487) then
									v79[v5488] = v79[v5488](v13(v79, v5488 + 1 + 0, v81[1187 - (114 + 1070)]));
									v73 = v73 + (34 - (16 + 17));
									v81 = v69[v73];
									v79[v81[6 - 4]][v79[v81[7 - 4]]] = v79[v81[4]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1 + 1]] = v81[3];
									v73 = v73 + 1;
									v5487 = 31 - 12;
								end
								if ((2782 == 2782) and (v5487 == 14)) then
									v79[v81[2]] = v81[2 + 1];
									v73 = v73 + (648 - (547 + 100));
									v81 = v69[v73];
									v79[v81[2 - 0]] = v79[v81[3 + 0]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[2 + 1];
									v73 = v73 + (1647 - (745 + 901));
									v5487 = 15;
								end
								if ((1073 <= 1841) and (v5487 == (5 + 2))) then
									v73 = v73 + (812 - (367 + 444));
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[3]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[1 + 1]] = v81[1 + 2];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v5487 = 8;
								end
								if (v5487 == (20 + 4)) then
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[5 - 3]] = v81[2 + 1];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[6 - 4]] = v81[3];
									v73 = v73 + 1;
									v81 = v69[v73];
									v5487 = 1963 - (627 + 1311);
								end
								if ((v5487 == (1267 - (989 + 249))) or (2392 <= 2037)) then
									v79[v81[350 - (107 + 241)]] = v81[3];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1340 - (125 + 1213)]] = v81[9 - 6];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v5488 = v81[2 - 0];
									v79[v5488] = v79[v5488](v13(v79, v5488 + (1709 - (1130 + 578)), v81[3 - 0]));
									v5487 = 21 + 9;
								end
								if ((4782 >= 4512) and (v5487 == 22)) then
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[1 + 1]] = v81[1 + 2];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v5488 = v81[1741 - (730 + 1009)];
									v79[v5488] = v79[v5488](v13(v79, v5488 + 1, v81[13 - 10]));
									v73 = v73 + (3 - 2);
									v5487 = 7 + 16;
								end
								if (v5487 == 15) then
									v81 = v69[v73];
									v79[v81[2]] = v81[3];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v5488 = v81[1 + 1];
									v79[v5488] = v79[v5488](v13(v79, v5488 + (2 - 1), v81[14 - 11]));
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v5487 = 1902 - (427 + 1459);
								end
								if (v5487 == 17) then
									v81 = v69[v73];
									v79[v81[1 + 1]] = v81[8 - 5];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[3];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v5488 = v81[1361 - (145 + 1214)];
									v5487 = 18;
								end
								if ((v5487 == (63 - 47)) or (4216 < 3160)) then
									v79[v81[1889 - (899 + 988)]][v79[v81[7 - 4]]] = v79[v81[2 + 2]];
									v73 = v73 + (827 - (168 + 658));
									v81 = v69[v73];
									v79[v81[1821 - (1628 + 191)]] = v81[1099 - (923 + 173)];
									v73 = v73 + (43 - (32 + 10));
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[10 - 7]];
									v73 = v73 + 1 + 0;
									v5487 = 977 - (913 + 47);
								end
								if (v5487 == (590 - (580 + 10))) then
									v5488 = nil;
									v79[v81[2]] = v79[v81[5 - 2]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2]] = v81[5 - 2];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[3 - 1]] = v81[2 + 1];
									v5487 = 1;
								end
								if ((1632 - (675 + 936)) == v5487) then
									v81 = v69[v73];
									v79[v81[3 - 1]] = v81[206 - (33 + 170)];
									v73 = v73 + (99 - (73 + 25));
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[5 - 2]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1 + 1]] = v81[5 - 2];
									v5487 = 3 + 19;
								end
								if ((v5487 == (178 - (162 + 6))) or (636 > 3525)) then
									v79[v81[2 - 0]] = v81[7 - 4];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1761 - (22 + 1737)]] = v81[3];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v5488 = v81[2];
									v79[v5488] = v79[v5488](v13(v79, v5488 + (1 - 0), v81[3]));
									v5487 = 11;
								end
								if (v5487 == (11 - 7)) then
									v81 = v69[v73];
									v79[v81[1 + 1]][v79[v81[2 + 1]]] = v79[v81[7 - 3]];
									v73 = v73 + (378 - (165 + 212));
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[695 - (627 + 65)];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2 + 0]] = v79[v81[3]];
									v5487 = 15 - 10;
								end
								if ((2189 == 2189) and (v5487 == (24 + 6))) then
									v73 = v73 + (379 - (227 + 151));
									v81 = v69[v73];
									v79[v81[5 - 3]][v79[v81[3 + 0]]] = v79[v81[4]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[6 - 4]] = v81[3];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v5487 = 10 + 21;
								end
								if ((4347 > 1619) and (v5487 == (369 - (247 + 110)))) then
									v79[v81[1 + 1]] = v79[v81[3]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[10 - 7];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1862 - (1626 + 234)]] = v81[7 - 4];
									v73 = v73 + 1 + 0;
									v5487 = 1464 - (1018 + 433);
								end
								if ((113 - 82) == v5487) then
									v79[v81[3 - 1]] = v79[v81[356 - (280 + 73)]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]] = v81[3 + 0];
									break;
								end
								if ((v5487 == (2 + 1)) or (1790 < 88)) then
									v73 = v73 + (542 - (130 + 411));
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[2 + 1];
									v73 = v73 + (1371 - (157 + 1213));
									v81 = v69[v73];
									v5488 = v81[7 - 5];
									v79[v5488] = v79[v5488](v13(v79, v5488 + (1413 - (825 + 587)), v81[2 + 1]));
									v73 = v73 + (4 - 3);
									v5487 = 1647 - (39 + 1604);
								end
								if ((v5487 == 19) or (3242 < 106)) then
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[5 - 2]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1 + 1]] = v81[2 + 1];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]] = v81[6 - 3];
									v5487 = 20;
								end
								if (v5487 == (23 + 5)) then
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1 + 1]] = v81[449 - (438 + 8)];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2 + 0]] = v79[v81[1114 - (627 + 484)]];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v5487 = 29;
								end
								if ((v5487 == (35 - 22)) or (2826 < 1350)) then
									v81 = v69[v73];
									v5488 = v81[2];
									v79[v5488] = v79[v5488](v13(v79, v5488 + (1099 - (776 + 322)), v81[137 - (133 + 1)]));
									v73 = v73 + (197 - (8 + 188));
									v81 = v69[v73];
									v79[v81[1888 - (507 + 1379)]][v79[v81[3 + 0]]] = v79[v81[11 - 7]];
									v73 = v73 + (666 - (544 + 121));
									v81 = v69[v73];
									v5487 = 2 + 12;
								end
							end
						else
							local v5489;
							v79[v81[2 + 0]] = v79[v81[1245 - (11 + 1231)]];
							v73 = v73 + (1 - 0);
							v81 = v69[v73];
							v79[v81[1 + 1]] = v81[136 - (110 + 23)];
							v73 = v73 + (1 - 0);
							v81 = v69[v73];
							v79[v81[2 - 0]] = v81[3];
							v73 = v73 + (258 - (230 + 27));
							v81 = v69[v73];
							v5489 = v81[2];
							v79[v5489] = v79[v5489](v13(v79, v5489 + (57 - (14 + 42)), v81[352 - (144 + 205)]));
							v73 = v73 + (2 - 1);
							v81 = v69[v73];
							v79[v81[13 - (6 + 5)]][v79[v81[4 - 1]]] = v79[v81[4]];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[6 - 4]] = v81[898 - (50 + 845)];
							v73 = v73 + (2 - 1);
							v81 = v69[v73];
							v79[v81[1678 - (1572 + 104)]] = v79[v81[7 - 4]];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[2]] = v81[3];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[1173 - (640 + 531)]] = v81[3];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v5489 = v81[2];
							v79[v5489] = v79[v5489](v13(v79, v5489 + 1 + 0, v81[2 + 1]));
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[1 + 1]][v79[v81[5 - 2]]] = v79[v81[913 - (450 + 459)]];
							v73 = v73 + (3 - 2);
							v81 = v69[v73];
							v79[v81[2 - 0]] = v81[137 - (88 + 46)];
							v73 = v73 + (980 - (250 + 729));
							v81 = v69[v73];
							v79[v81[3 - 1]] = v79[v81[350 - (15 + 332)]];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[2]] = v81[2 + 1];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[2 + 0]] = v81[3];
							v73 = v73 + (3 - 2);
							v81 = v69[v73];
							v5489 = v81[2 + 0];
							v79[v5489] = v79[v5489](v13(v79, v5489 + (636 - (538 + 97)), v81[10 - 7]));
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[198 - (187 + 9)]][v79[v81[1 + 2]]] = v79[v81[4 + 0]];
							v73 = v73 + (4 - 3);
							v81 = v69[v73];
							v79[v81[2]] = v81[3];
							v73 = v73 + (924 - (324 + 599));
							v81 = v69[v73];
							v79[v81[1 + 1]] = v79[v81[3]];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[649 - (358 + 289)]] = v81[5 - 2];
							v73 = v73 + (1138 - (218 + 919));
							v81 = v69[v73];
							v79[v81[2]] = v81[5 - 2];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v5489 = v81[1 + 1];
							v79[v5489] = v79[v5489](v13(v79, v5489 + (399 - (195 + 203)), v81[3]));
							v73 = v73 + (1245 - (624 + 620));
							v81 = v69[v73];
							v79[v81[2]][v79[v81[3]]] = v79[v81[15 - 11]];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[4 - 2]] = v81[3];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[1453 - (381 + 1070)]] = v79[v81[1419 - (1210 + 206)]];
							v73 = v73 + (1 - 0);
							v81 = v69[v73];
							v79[v81[1179 - (434 + 743)]] = v81[1 + 2];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[2]] = v81[4 - 1];
							v73 = v73 + (1 - 0);
							v81 = v69[v73];
							v5489 = v81[2];
							v79[v5489] = v79[v5489](v13(v79, v5489 + (757 - (526 + 230)), v81[2 + 1]));
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[2 + 0]][v79[v81[3 + 0]]] = v79[v81[1684 - (546 + 1134)]];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[3 - 1]] = v81[3];
							v73 = v73 + (3 - 2);
							v81 = v69[v73];
							v79[v81[658 - (586 + 70)]] = v79[v81[1 + 2]];
							v73 = v73 + (2 - 1);
							v81 = v69[v73];
							v79[v81[2 + 0]] = v81[3];
							v73 = v73 + (1 - 0);
							v81 = v69[v73];
							v79[v81[895 - (397 + 496)]] = v81[3];
							v73 = v73 + (4 - 3);
							v81 = v69[v73];
							v5489 = v81[1209 - (1061 + 146)];
							v79[v5489] = v79[v5489](v13(v79, v5489 + 1 + 0, v81[3]));
							v73 = v73 + (3 - 2);
							v81 = v69[v73];
							v79[v81[648 - (361 + 285)]][v79[v81[2 + 1]]] = v79[v81[1 + 3]];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[2 + 0]] = v81[233 - (229 + 1)];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[557 - (22 + 533)]] = v79[v81[3 + 0]];
							v73 = v73 + (3 - 2);
							v81 = v69[v73];
							v79[v81[2 + 0]] = v81[3];
							v73 = v73 + (591 - (361 + 229));
							v81 = v69[v73];
							v79[v81[1 + 1]] = v81[2 + 1];
							v73 = v73 + (1540 - (1481 + 58));
							v81 = v69[v73];
							v5489 = v81[2 + 0];
							v79[v5489] = v79[v5489](v13(v79, v5489 + 1 + 0, v81[2 + 1]));
							v73 = v73 + (1429 - (545 + 883));
							v81 = v69[v73];
							v79[v81[8 - 6]][v79[v81[4 - 1]]] = v79[v81[4]];
							v73 = v73 + (1487 - (725 + 761));
							v81 = v69[v73];
							v79[v81[671 - (661 + 8)]] = v81[284 - (105 + 176)];
							v73 = v73 + (1943 - (265 + 1677));
							v81 = v69[v73];
							v79[v81[2]] = v79[v81[10 - 7]];
							v73 = v73 + (2 - 1);
							v81 = v69[v73];
							v79[v81[4 - 2]] = v81[1223 - (726 + 494)];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[1562 - (803 + 757)]] = v81[3];
							v73 = v73 + 1;
							v81 = v69[v73];
							v5489 = v81[2 - 0];
							v79[v5489] = v79[v5489](v13(v79, v5489 + 1 + 0, v81[1453 - (99 + 1351)]));
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[2 + 0]][v79[v81[184 - (106 + 75)]]] = v79[v81[4]];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[2 - 0]] = v81[2 + 1];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[2 + 0]] = v79[v81[5 - 2]];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[1 + 1]] = v81[1549 - (323 + 1223)];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[5 - 3]] = v81[3];
							v73 = v73 + 1;
							v81 = v69[v73];
							v5489 = v81[378 - (126 + 250)];
							v79[v5489] = v79[v5489](v13(v79, v5489 + 1 + 0, v81[1488 - (204 + 1281)]));
							v73 = v73 + (223 - (45 + 177));
							v81 = v69[v73];
							v79[v81[1 + 1]][v79[v81[3]]] = v79[v81[4]];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[2]] = v81[2 + 1];
							v73 = v73 + (1 - 0);
							v81 = v69[v73];
							v79[v81[2]] = v79[v81[3 - 0]];
							v73 = v73 + (860 - (779 + 80));
							v81 = v69[v73];
							v79[v81[686 - (480 + 204)]] = v81[586 - (5 + 578)];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[4 - 2]] = v81[3];
							v73 = v73 + (306 - (147 + 158));
							v81 = v69[v73];
							v5489 = v81[2];
							v79[v5489] = v79[v5489](v13(v79, v5489 + 1, v81[4 - 1]));
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[2]][v79[v81[343 - (89 + 251)]]] = v79[v81[4 + 0]];
							v73 = v73 + (2 - 1);
							v81 = v69[v73];
							v79[v81[2 + 0]] = v81[350 - (57 + 290)];
							v73 = v73 + (1951 - (137 + 1813));
							v81 = v69[v73];
							v79[v81[7 - 5]] = v79[v81[3]];
							v73 = v73 + (1 - 0);
							v81 = v69[v73];
							v79[v81[1 + 1]] = v81[3];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[2 + 0]] = v81[3];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v5489 = v81[2];
							v79[v5489] = v79[v5489](v13(v79, v5489 + (1 - 0), v81[134 - (59 + 72)]));
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[1 + 1]][v79[v81[3]]] = v79[v81[4]];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[2]] = v81[446 - (413 + 30)];
							v73 = v73 + (824 - (765 + 58));
							v81 = v69[v73];
							v79[v81[3 - 1]] = v79[v81[9 - 6]];
							v73 = v73 + (2 - 1);
							v81 = v69[v73];
							v79[v81[1418 - (797 + 619)]] = v81[3];
							v73 = v73 + (520 - (106 + 413));
							v81 = v69[v73];
							v79[v81[9 - 7]] = v81[3];
							v73 = v73 + (2 - 1);
							v81 = v69[v73];
							v5489 = v81[2 + 0];
							v79[v5489] = v79[v5489](v13(v79, v5489 + 1 + 0, v81[2 + 1]));
							v73 = v73 + (2 - 1);
							v81 = v69[v73];
							v79[v81[1 + 1]][v79[v81[1473 - (278 + 1192)]]] = v79[v81[4]];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[1009 - (120 + 887)]] = v81[3];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[1828 - (512 + 1314)]] = v79[v81[11 - 8]];
							v73 = v73 + (1 - 0);
							v81 = v69[v73];
							v79[v81[7 - 5]] = v81[144 - (105 + 36)];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[5 - 3]] = v81[11 - 8];
							v73 = v73 + (149 - (84 + 64));
							v81 = v69[v73];
							v5489 = v81[2 + 0];
							v79[v5489] = v79[v5489](v13(v79, v5489 + 1, v81[5 - 2]));
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[1 + 1]][v79[v81[4 - 1]]] = v79[v81[533 - (227 + 302)]];
							v73 = v73 + (2 - 1);
							v81 = v69[v73];
							v79[v81[2]] = v81[7 - 4];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[2 + 0]] = v79[v81[5 - 2]];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[2 + 0]] = v81[749 - (262 + 484)];
						end
					elseif (v82 <= (349 + 14)) then
						if (v82 <= (17 + 339)) then
							if ((v82 <= (59 + 294)) or (373 == 3621)) then
								if ((3582 > 437) and (v82 <= (701 - 350))) then
									local v672;
									v79[v81[1426 - (1164 + 260)]] = v79[v81[6 - 3]][v81[4]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[3 - 1]] = v64[v81[3]];
									v73 = v73 + (164 - (123 + 40));
									v81 = v69[v73];
									v79[v81[1 + 1]] = v79[v81[2 + 1]][v81[9 - 5]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1460 - (344 + 1114)]] = v81[3 + 0];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[2 + 0]] = v79[v81[3 - 0]] + v81[7 - 3];
									v73 = v73 + (1237 - (371 + 865));
									v81 = v69[v73];
									v79[v81[3 - 1]] = v81[3 - 0];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[5 - 3]] = v81[3 + 0];
									v73 = v73 + (1919 - (150 + 1768));
									v81 = v69[v73];
									v672 = v81[1 + 1];
									v79[v672] = v79[v672](v13(v79, v672 + 1, v81[3]));
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1 + 1]][v81[684 - (608 + 73)]] = v79[v81[4]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v73 = v81[520 - (256 + 261)];
								elseif (v82 > (82 + 270)) then
									local v5572;
									v79[v81[3 - 1]] = v79[v81[4 - 1]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[8 - 6]] = v81[3];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]] = v81[9 - 6];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v5572 = v81[2];
									v79[v5572] = v79[v5572](v13(v79, v5572 + (1 - 0), v81[1 + 2]));
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[1 + 1]][v79[v81[2 + 1]]] = v79[v81[4 + 0]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[1 + 2];
									v73 = v73 + (1433 - (1068 + 364));
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[3]];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[1389 - (255 + 1132)]] = v81[2 + 1];
									v73 = v73 + (1446 - (678 + 767));
									v81 = v69[v73];
									v79[v81[2]] = v81[3 + 0];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v5572 = v81[2 + 0];
									v79[v5572] = v79[v5572](v13(v79, v5572 + (458 - (141 + 316)), v81[3]));
									v73 = v73 + (1458 - (1101 + 356));
									v81 = v69[v73];
									v79[v81[239 - (39 + 198)]][v79[v81[1 + 2]]] = v79[v81[2 + 2]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1343 - (344 + 997)]] = v81[792 - (92 + 697)];
									v73 = v73 + (773 - (177 + 595));
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[3 + 0]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[51 - (7 + 42)]] = v81[3 + 0];
									v73 = v73 + (1988 - (4 + 1983));
									v81 = v69[v73];
									v79[v81[4 - 2]] = v81[1 + 2];
									v73 = v73 + (1735 - (1358 + 376));
									v81 = v69[v73];
									v5572 = v81[1086 - (775 + 309)];
									v79[v5572] = v79[v5572](v13(v79, v5572 + (3 - 2), v81[4 - 1]));
									v73 = v73 + (618 - (63 + 554));
									v81 = v69[v73];
									v79[v81[8 - 6]][v79[v81[4 - 1]]] = v79[v81[957 - (666 + 287)]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[368 - (298 + 68)]] = v81[3];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[756 - (255 + 498)]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2]] = v81[2 + 1];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v81[3];
									v73 = v73 + (1550 - (1330 + 219));
									v81 = v69[v73];
									v5572 = v81[2 + 0];
									v79[v5572] = v79[v5572](v13(v79, v5572 + (1275 - (300 + 974)), v81[3]));
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v79[v81[2]][v79[v81[4 - 1]]] = v79[v81[240 - (145 + 91)]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v81[3 + 0];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[1911 - (443 + 1465)]];
									v73 = v73 + (432 - (80 + 351));
									v81 = v69[v73];
									v79[v81[2]] = v81[3];
									v73 = v73 + (32 - (22 + 9));
									v81 = v69[v73];
									v79[v81[7 - 5]] = v81[2 + 1];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v5572 = v81[879 - (297 + 580)];
									v79[v5572] = v79[v5572](v13(v79, v5572 + 1, v81[840 - (95 + 742)]));
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[3 - 1]][v79[v81[10 - 7]]] = v79[v81[883 - (248 + 631)]];
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v79[v81[3 - 1]] = v81[402 - (351 + 48)];
									v73 = v73 + (1808 - (224 + 1583));
									v81 = v69[v73];
									v79[v81[1 + 1]] = v79[v81[2 + 1]];
									v73 = v73 + (4 - 3);
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[1985 - (1264 + 718)];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2]] = v81[3 + 0];
									v73 = v73 + (1706 - (292 + 1413));
									v81 = v69[v73];
									v5572 = v81[1357 - (835 + 520)];
									v79[v5572] = v79[v5572](v13(v79, v5572 + 1, v81[8 - 5]));
									v73 = v73 + (1941 - (1881 + 59));
									v81 = v69[v73];
									v79[v81[2 + 0]][v79[v81[252 - (62 + 187)]]] = v79[v81[437 - (284 + 149)]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[6 - 4]] = v81[10 - 7];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[4 - 2]] = v79[v81[551 - (425 + 123)]];
									v73 = v73 + (4 - 3);
									v81 = v69[v73];
									v79[v81[767 - (179 + 586)]] = v81[3 + 0];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[3 - 1]] = v81[2 + 1];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v5572 = v81[2];
									v79[v5572] = v79[v5572](v13(v79, v5572 + (1775 - (1478 + 296)), v81[761 - (409 + 349)]));
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1 + 1]][v79[v81[14 - 11]]] = v79[v81[3 + 1]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[6 - 4]] = v81[938 - (117 + 818)];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[9 - 7]] = v79[v81[1 + 2]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1545 - (1424 + 119)]] = v81[3];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1 + 1]] = v81[12 - 9];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v5572 = v81[1 + 1];
									v79[v5572] = v79[v5572](v13(v79, v5572 + (2 - 1), v81[2 + 1]));
									v73 = v73 + (1172 - (896 + 275));
									v81 = v69[v73];
									v79[v81[2]][v79[v81[2 + 1]]] = v79[v81[16 - 12]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[1 + 2];
									v73 = v73 + (1298 - (566 + 731));
									v81 = v69[v73];
									v79[v81[2 + 0]] = v79[v81[9 - 6]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[597 - (41 + 554)]] = v81[3];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]] = v81[539 - (120 + 416)];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v5572 = v81[2];
									v79[v5572] = v79[v5572](v13(v79, v5572 + 1, v81[4 - 1]));
									v73 = v73 + (120 - (12 + 107));
									v81 = v69[v73];
									v79[v81[5 - 3]][v79[v81[12 - 9]]] = v79[v81[1 + 3]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1 + 1]] = v81[7 - 4];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2 + 0]] = v79[v81[1 + 2]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]] = v81[3];
									v73 = v73 + (1338 - (1024 + 313));
									v81 = v69[v73];
									v79[v81[4 - 2]] = v81[3];
									v73 = v73 + 1;
									v81 = v69[v73];
									v5572 = v81[2];
									v79[v5572] = v79[v5572](v13(v79, v5572 + (977 - (98 + 878)), v81[3]));
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2]][v79[v81[2 + 1]]] = v79[v81[4]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[737 - (644 + 91)]] = v81[1103 - (729 + 371)];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1091 - (278 + 811)]] = v79[v81[9 - 6]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[5 - 3]] = v81[1557 - (26 + 1528)];
									v73 = v73 + (145 - (23 + 121));
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[768 - (336 + 429)];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v5572 = v81[1 + 1];
									v79[v5572] = v79[v5572](v13(v79, v5572 + (99 - (56 + 42)), v81[568 - (311 + 254)]));
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1 + 1]][v79[v81[2 + 1]]] = v79[v81[4]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1 + 1]] = v81[3 + 0];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[5 - 3]] = v79[v81[3 + 0]];
									v73 = v73 + (818 - (631 + 186));
									v81 = v69[v73];
									v79[v81[2]] = v81[3 + 0];
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v79[v81[499 - (360 + 137)]] = v81[7 - 4];
									v73 = v73 + 1;
									v81 = v69[v73];
									v5572 = v81[5 - 3];
									v79[v5572] = v79[v5572](v13(v79, v5572 + 1, v81[3 + 0]));
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v79[v81[1415 - (239 + 1174)]][v79[v81[925 - (54 + 868)]]] = v79[v81[1 + 3]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[5 - 3]] = v81[3];
									v73 = v73 + (1091 - (696 + 394));
									v81 = v69[v73];
									v79[v81[68 - (25 + 41)]] = v79[v81[3]];
									v73 = v73 + (1733 - (1698 + 34));
									v81 = v69[v73];
									v79[v81[4 - 2]] = v81[1 + 2];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[8 - 6]] = v81[11 - 8];
									v73 = v73 + (492 - (481 + 10));
									v81 = v69[v73];
									v5572 = v81[2 - 0];
									v79[v5572] = v79[v5572](v13(v79, v5572 + (1 - 0), v81[1183 - (745 + 435)]));
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[834 - (507 + 325)]][v79[v81[1 + 2]]] = v79[v81[1600 - (266 + 1330)]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]] = v81[13 - 10];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1 + 1]] = v79[v81[3]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[1253 - (1250 + 1)]] = v81[982 - (619 + 360)];
								else
									v79[v81[1 + 1]] = v79[v81[9 - 6]] / v81[11 - 7];
								end
							elseif (v82 <= (189 + 165)) then
								local v690;
								v79[v81[2 + 0]] = v79[v81[3]][v81[10 - 6]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2 - 0]] = v63[v81[777 - (316 + 458)]];
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v79[v81[1340 - (227 + 1111)]] = v79[v81[3]][v81[10 - 6]];
								v73 = v73 + (560 - (490 + 69));
								v81 = v69[v73];
								v690 = v81[2];
								v79[v690] = v79[v690](v79[v690 + (1617 - (696 + 920))]);
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[591 - (575 + 13)]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1687 - (12 + 1673)]] = v63[v81[379 - (32 + 344)]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[3 + 0]][v81[4 + 0]];
								v73 = v73 + (1764 - (1613 + 150));
								v81 = v69[v73];
								v79[v81[3 - 1]][v81[2 + 1]] = v79[v81[783 - (724 + 55)]];
								v73 = v73 + (1880 - (1553 + 326));
								v81 = v69[v73];
								v79[v81[1738 - (1240 + 496)]] = v64[v81[2 + 1]];
							elseif (v82 > (2352 - (1327 + 670))) then
								local v5656;
								v5656 = v81[1020 - (847 + 171)];
								v79[v5656] = v79[v5656](v13(v79, v5656 + 1 + 0, v81[2 + 1]));
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 - 0]][v79[v81[7 - 4]]] = v79[v81[4]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[3 + 0];
								v73 = v73 + (497 - (127 + 369));
								v81 = v69[v73];
								v79[v81[940 - (602 + 336)]] = v79[v81[3 + 0]];
								v73 = v73 + (631 - (139 + 491));
								v81 = v69[v73];
								v79[v81[5 - 3]] = v81[3];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[4 - 2]] = v81[3];
								v73 = v73 + (755 - (447 + 307));
								v81 = v69[v73];
								v5656 = v81[2 + 0];
								v79[v5656] = v79[v5656](v13(v79, v5656 + 1 + 0, v81[9 - 6]));
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[7 - 5]][v79[v81[2 + 1]]] = v79[v81[4]];
								v73 = v73 + (515 - (13 + 501));
								v81 = v69[v73];
								v79[v81[1119 - (826 + 291)]] = v81[3 + 0];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[4 - 2]] = v79[v81[2 + 1]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[520 - (206 + 312)]] = v81[1 + 2];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[5 - 3]] = v81[3];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v5656 = v81[7 - 5];
								v79[v5656] = v79[v5656](v13(v79, v5656 + (1152 - (367 + 784)), v81[1 + 2]));
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[5 - 3]][v79[v81[2 + 1]]] = v79[v81[4]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[3 + 0];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[1055 - (367 + 686)]] = v79[v81[3]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[4 - 2]] = v81[577 - (142 + 432)];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1504 - (132 + 1370)]] = v81[3];
								v73 = v73 + 1;
								v81 = v69[v73];
								v5656 = v81[1538 - (610 + 926)];
								v79[v5656] = v79[v5656](v13(v79, v5656 + 1, v81[3]));
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[718 - (583 + 133)]][v79[v81[5 - 2]]] = v79[v81[4]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[4 - 2]] = v81[1553 - (15 + 1535)];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[4 - 2]] = v79[v81[3]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[798 - (621 + 175)]] = v81[3];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v81[3 + 0];
								v73 = v73 + 1;
								v81 = v69[v73];
								v5656 = v81[2];
								v79[v5656] = v79[v5656](v13(v79, v5656 + 1, v81[3 + 0]));
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1 + 1]][v79[v81[984 - (972 + 9)]]] = v79[v81[6 - 2]];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[2]] = v81[840 - (367 + 470)];
								v73 = v73 + (4 - 3);
								v81 = v69[v73];
								v79[v81[1445 - (1057 + 386)]] = v79[v81[8 - 5]];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[244 - (161 + 81)]] = v81[10 - 7];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2 - 0]] = v81[3 + 0];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v5656 = v81[2 + 0];
								v79[v5656] = v79[v5656](v13(v79, v5656 + (2 - 1), v81[1246 - (157 + 1086)]));
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 - 0]][v79[v81[367 - (346 + 18)]]] = v79[v81[1 + 3]];
								v73 = v73 + (92 - (15 + 76));
								v81 = v69[v73];
								v79[v81[2]] = v81[8 - 5];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[748 - (90 + 656)]] = v79[v81[3]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[1165 - (690 + 472)];
								v73 = v73 + (510 - (381 + 128));
								v81 = v69[v73];
								v79[v81[2]] = v81[1759 - (1618 + 138)];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v5656 = v81[2 - 0];
								v79[v5656] = v79[v5656](v13(v79, v5656 + (1935 - (1615 + 319)), v81[3 + 0]));
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 + 0]][v79[v81[3]]] = v79[v81[4]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v81[3];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[3 - 1]] = v79[v81[4 - 1]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[5 - 3]] = v81[3];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[472 - (258 + 212)]] = v81[2 + 1];
								v73 = v73 + 1;
								v81 = v69[v73];
								v5656 = v81[1935 - (808 + 1125)];
								v79[v5656] = v79[v5656](v13(v79, v5656 + 1, v81[6 - 3]));
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[5 - 3]][v79[v81[488 - (257 + 228)]]] = v79[v81[4]];
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v79[v81[596 - (232 + 362)]] = v81[2 + 1];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[9 - 6]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[4 - 2]] = v81[14 - 11];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1289 - (1252 + 35)]] = v81[3];
								v73 = v73 + 1;
								v81 = v69[v73];
								v5656 = v81[2];
								v79[v5656] = v79[v5656](v13(v79, v5656 + (676 - (215 + 460)), v81[3]));
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]][v79[v81[3]]] = v79[v81[4]];
								v73 = v73 + (605 - (31 + 573));
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[3];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1401 - (1344 + 55)]] = v79[v81[3]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[4 - 2]] = v81[3];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[3 + 0];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v5656 = v81[5 - 3];
								v79[v5656] = v79[v5656](v13(v79, v5656 + (1 - 0), v81[206 - (14 + 189)]));
								v73 = v73 + (488 - (103 + 384));
								v81 = v69[v73];
								v79[v81[2]][v79[v81[3 + 0]]] = v79[v81[5 - 1]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v81[10 - 7];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2 + 0]] = v79[v81[1248 - (762 + 483)]];
								v73 = v73 + (1573 - (1130 + 442));
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[2 + 1];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[1359 - (717 + 639)];
								v73 = v73 + 1;
								v81 = v69[v73];
								v5656 = v81[329 - (49 + 278)];
								v79[v5656] = v79[v5656](v13(v79, v5656 + 1 + 0, v81[2 + 1]));
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2 + 0]][v79[v81[10 - 7]]] = v79[v81[4 - 0]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[1049 - (802 + 245)]] = v81[8 - 5];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[1728 - (1301 + 425)]] = v79[v81[5 - 2]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1946 - (1134 + 810)]] = v81[1608 - (1535 + 70)];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[2]] = v81[1122 - (420 + 699)];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v5656 = v81[1 + 1];
								v79[v5656] = v79[v5656](v13(v79, v5656 + 1 + 0, v81[4 - 1]));
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 - 0]][v79[v81[3]]] = v79[v81[303 - (167 + 132)]];
								v73 = v73 + (1575 - (476 + 1098));
								v81 = v69[v73];
								v79[v81[2]] = v81[2 + 1];
								v73 = v73 + (4 - 3);
								v81 = v69[v73];
								v79[v81[2 + 0]] = v79[v81[13 - 10]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[155 - (38 + 114)];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]] = v81[923 - (721 + 199)];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v5656 = v81[2 + 0];
								v79[v5656] = v79[v5656](v13(v79, v5656 + 1, v81[2 + 1]));
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 + 0]][v79[v81[8 - 5]]] = v79[v81[4]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[1 + 2];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1741 - (1374 + 365)]] = v79[v81[2 + 1]];
								v73 = v73 + (203 - (99 + 103));
								v81 = v69[v73];
								v79[v81[6 - 4]] = v81[1 + 2];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[3];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v5656 = v81[2];
								v79[v5656] = v79[v5656](v13(v79, v5656 + 1, v81[910 - (229 + 678)]));
								v73 = v73 + (613 - (200 + 412));
								v81 = v69[v73];
								v79[v81[270 - (136 + 132)]][v79[v81[2 + 1]]] = v79[v81[6 - 2]];
							else
								local v5740;
								local v5741;
								v79[v81[2]] = v79[v81[1724 - (1499 + 222)]][v81[5 - 1]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v5741 = v81[1 + 1];
								v5740 = v79[v81[3 + 0]];
								v79[v5741 + (825 - (173 + 651))] = v5740;
								v79[v5741] = v5740[v81[4 + 0]];
								v73 = v73 + (1708 - (1163 + 544));
								v81 = v69[v73];
								v5741 = v81[2];
								v79[v5741](v79[v5741 + 1]);
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[655 - (42 + 611)]] = v64[v81[3 - 0]];
								v73 = v73 + (705 - (419 + 285));
								v81 = v69[v73];
								v79[v81[2 + 0]][v81[1352 - (404 + 945)]] = v81[4];
								v73 = v73 + (1697 - (128 + 1568));
								v81 = v69[v73];
								v73 = v81[5 - 2];
							end
						elseif (v82 <= (623 - 264)) then
							if (v82 <= (603 - (161 + 85))) then
								local v708;
								v708 = v81[175 - (77 + 96)];
								v79[v708] = v79[v708](v13(v79, v708 + 1 + 0, v81[2 + 1]));
								v73 = v73 + (915 - (74 + 840));
								v81 = v69[v73];
								v79[v81[2]][v79[v81[1698 - (704 + 991)]]] = v79[v81[1 + 3]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1074 - (176 + 896)]] = v81[8 - 5];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[1981 - (1687 + 291)]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1777 - (218 + 1557)]] = v81[7 - 4];
								v73 = v73 + (1582 - (114 + 1467));
								v81 = v69[v73];
								v79[v81[1661 - (141 + 1518)]] = v81[1 + 2];
								v73 = v73 + 1;
								v81 = v69[v73];
								v708 = v81[2];
								v79[v708] = v79[v708](v13(v79, v708 + (3 - 2), v81[3]));
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v79[v81[9 - 7]][v79[v81[1257 - (389 + 865)]]] = v79[v81[1625 - (1545 + 76)]];
								v73 = v73 + (652 - (127 + 524));
								v81 = v69[v73];
								v79[v81[2]] = v81[1774 - (1704 + 67)];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 + 0]] = v79[v81[3]];
								v73 = v73 + (1051 - (351 + 699));
								v81 = v69[v73];
								v79[v81[3 - 1]] = v81[10 - 7];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[1151 - (164 + 985)]] = v81[3];
								v73 = v73 + (1064 - (514 + 549));
								v81 = v69[v73];
								v708 = v81[5 - 3];
								v79[v708] = v79[v708](v13(v79, v708 + (1614 - (997 + 616)), v81[3 + 0]));
								v73 = v73 + (961 - (934 + 26));
								v81 = v69[v73];
								v79[v81[6 - 4]][v79[v81[148 - (77 + 68)]]] = v79[v81[3 + 1]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[759 - (100 + 657)]] = v81[1374 - (1207 + 164)];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2 + 0]] = v79[v81[1755 - (1098 + 654)]];
								v73 = v73 + (651 - (299 + 351));
								v81 = v69[v73];
								v79[v81[6 - 4]] = v81[3];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[997 - (832 + 163)]] = v81[1545 - (566 + 976)];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v708 = v81[1386 - (46 + 1338)];
								v79[v708] = v79[v708](v13(v79, v708 + (2 - 1), v81[1 + 2]));
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1 + 1]][v79[v81[7 - 4]]] = v79[v81[417 - (302 + 111)]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[1969 - (1725 + 241)];
								v73 = v73 + (1215 - (925 + 289));
								v81 = v69[v73];
								v79[v81[1042 - (522 + 518)]] = v79[v81[3]];
								v73 = v73 + (579 - (296 + 282));
								v81 = v69[v73];
								v79[v81[2]] = v81[10 - 7];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[2]] = v81[3];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v708 = v81[2];
								v79[v708] = v79[v708](v13(v79, v708 + 1 + 0, v81[5 - 2]));
								v73 = v73 + (432 - (392 + 39));
								v81 = v69[v73];
								v79[v81[5 - 3]][v79[v81[3]]] = v79[v81[4]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[405 - (169 + 233)];
								v73 = v73 + (1735 - (1070 + 664));
								v81 = v69[v73];
								v79[v81[5 - 3]] = v79[v81[533 - (180 + 350)]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[1 + 2];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1868 - (1119 + 747)]] = v81[502 - (146 + 353)];
								v73 = v73 + (925 - (335 + 589));
								v81 = v69[v73];
								v708 = v81[3 - 1];
								v79[v708] = v79[v708](v13(v79, v708 + 1 + 0, v81[4 - 1]));
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[2 + 0]][v79[v81[1904 - (1092 + 809)]]] = v79[v81[4 + 0]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1338 - (98 + 1238)]] = v81[3];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[1171 - (128 + 1040)]];
								v73 = v73 + (1841 - (1411 + 429));
								v81 = v69[v73];
								v79[v81[823 - (370 + 451)]] = v81[3];
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v79[v81[2]] = v81[1338 - (1099 + 236)];
								v73 = v73 + 1;
								v81 = v69[v73];
								v708 = v81[801 - (490 + 309)];
								v79[v708] = v79[v708](v13(v79, v708 + 1 + 0, v81[3 + 0]));
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[5 - 3]][v79[v81[2 + 1]]] = v79[v81[4 + 0]];
								v73 = v73 + (316 - (311 + 4));
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[3];
								v73 = v73 + (1395 - (1353 + 41));
								v81 = v69[v73];
								v79[v81[3 - 1]] = v79[v81[1 + 2]];
								v73 = v73 + (754 - (482 + 271));
								v81 = v69[v73];
								v79[v81[2]] = v81[3];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[6 - 3];
								v73 = v73 + (1169 - (283 + 885));
								v81 = v69[v73];
								v708 = v81[2];
								v79[v708] = v79[v708](v13(v79, v708 + (236 - (67 + 168)), v81[3]));
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[1105 - (740 + 363)]][v79[v81[3]]] = v79[v81[1995 - (1248 + 743)]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[3];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2 - 0]] = v79[v81[117 - (92 + 22)]];
								v73 = v73 + (198 - (103 + 94));
								v81 = v69[v73];
								v79[v81[2]] = v81[2 + 1];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 - 0]] = v81[3];
								v73 = v73 + 1;
								v81 = v69[v73];
								v708 = v81[2];
								v79[v708] = v79[v708](v13(v79, v708 + 1 + 0, v81[179 - (20 + 156)]));
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[1291 - (987 + 302)]][v79[v81[2 + 1]]] = v79[v81[10 - 6]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[4 - 2]] = v81[9 - 6];
								v73 = v73 + (1787 - (734 + 1052));
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[1765 - (822 + 940)]];
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[11 - 8];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v81[3 - 0];
								v73 = v73 + (758 - (270 + 487));
								v81 = v69[v73];
								v708 = v81[2 + 0];
								v79[v708] = v79[v708](v13(v79, v708 + 1, v81[3]));
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 + 0]][v79[v81[3]]] = v79[v81[4]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v81[3];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[1 + 1]] = v79[v81[899 - (138 + 758)]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[8 - 5];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v81[3];
								v73 = v73 + (951 - (777 + 173));
								v81 = v69[v73];
								v708 = v81[1 + 1];
								v79[v708] = v79[v708](v13(v79, v708 + 1, v81[12 - 9]));
								v73 = v73 + (849 - (341 + 507));
								v81 = v69[v73];
								v79[v81[2]][v79[v81[1 + 2]]] = v79[v81[4 + 0]];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[5 - 3]] = v81[5 - 2];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 + 0]] = v79[v81[10 - 7]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[5 - 3]] = v81[3];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[4 - 2]] = v81[1 + 2];
								v73 = v73 + 1;
								v81 = v69[v73];
								v708 = v81[2];
								v79[v708] = v79[v708](v13(v79, v708 + 1 + 0, v81[1566 - (1230 + 333)]));
								v73 = v73 + (68 - (65 + 2));
								v81 = v69[v73];
								v79[v81[5 - 3]][v79[v81[3]]] = v79[v81[1 + 3]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[5 - 2];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[1469 - (1301 + 165)]];
								v73 = v73 + (1251 - (957 + 293));
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[4 - 1];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[795 - (74 + 719)]] = v81[10 - 7];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v708 = v81[2 - 0];
								v79[v708] = v79[v708](v13(v79, v708 + (3 - 2), v81[1672 - (1578 + 91)]));
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[7 - 5]][v79[v81[3]]] = v79[v81[4]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[8 - 5];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[941 - (226 + 713)]] = v79[v81[3 + 0]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[207 - (173 + 31)];
								v73 = v73 + (413 - (278 + 134));
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[1355 - (287 + 1065)];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v708 = v81[2];
								v79[v708] = v79[v708](v13(v79, v708 + (1 - 0), v81[12 - 9]));
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[7 - 5]][v79[v81[1994 - (1593 + 398)]]] = v79[v81[1902 - (563 + 1335)]];
							elseif ((936 == 936) and (v82 == 358)) then
								local v5756;
								local v5757;
								v5757 = v81[1676 - (1070 + 604)];
								v5756 = v79[v81[6 - 3]];
								v79[v5757 + 1] = v5756;
								v79[v5757] = v5756[v81[945 - (685 + 256)]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1930 - (1919 + 9)]] = v63[v81[3]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[3]][v81[4]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v5757 = v81[2];
								v79[v5757] = v79[v5757](v13(v79, v5757 + (2 - 1), v81[5 - 2]));
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								if ((3044 < 4388) and v79[v81[3 - 1]]) then
									v73 = v73 + 1;
								else
									v73 = v81[502 - (451 + 48)];
								end
							else
								local v5769 = 0 + 0;
								local v5770;
								while true do
									if ((1972 == 1972) and (v5769 == 0)) then
										v5770 = v81[1107 - (332 + 773)];
										v79[v5770] = v79[v5770]();
										break;
									end
								end
							end
						elseif ((4111 <= 4918) and (v82 <= (1392 - 1031))) then
							if (v82 > 360) then
								local v5771;
								v5771 = v81[2 - 0];
								v79[v5771] = v79[v5771](v13(v79, v5771 + (1703 - (1601 + 101)), v81[1 + 2]));
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]][v79[v81[7 - 4]]] = v79[v81[4]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]] = v81[3];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1795 - (1620 + 173)]] = v79[v81[7 - 4]];
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v79[v81[2]] = v81[1269 - (151 + 1115)];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[4 - 2]] = v81[3];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v5771 = v81[4 - 2];
								v79[v5771] = v79[v5771](v13(v79, v5771 + (363 - (341 + 21)), v81[3]));
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2 - 0]][v79[v81[3 + 0]]] = v79[v81[4]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]] = v81[3];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[155 - (99 + 54)]] = v79[v81[3]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[3];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[673 - (612 + 58)];
								v73 = v73 + 1;
								v81 = v69[v73];
								v5771 = v81[2 + 0];
								v79[v5771] = v79[v5771](v13(v79, v5771 + (4 - 3), v81[2 + 1]));
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v79[v81[1034 - (555 + 477)]][v79[v81[11 - 8]]] = v79[v81[5 - 1]];
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v79[v81[574 - (272 + 300)]] = v81[3];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[304 - (235 + 67)]] = v79[v81[3]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[5 - 3]] = v81[1244 - (31 + 1210)];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1366 - (670 + 694)]] = v81[3 - 0];
								v73 = v73 + (1532 - (1015 + 516));
								v81 = v69[v73];
								v5771 = v81[2 + 0];
								v79[v5771] = v79[v5771](v13(v79, v5771 + 1, v81[3]));
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1 + 1]][v79[v81[3]]] = v79[v81[7 - 3]];
								v73 = v73 + (640 - (433 + 206));
								v81 = v69[v73];
								v79[v81[6 - 4]] = v81[4 - 1];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 + 0]] = v79[v81[3]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 - 0]] = v81[1421 - (805 + 613)];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v81[1813 - (545 + 1265)];
								v73 = v73 + (46 - (39 + 6));
								v81 = v69[v73];
								v5771 = v81[5 - 3];
								v79[v5771] = v79[v5771](v13(v79, v5771 + (1531 - (1510 + 20)), v81[1026 - (207 + 816)]));
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1 + 1]][v79[v81[17 - (12 + 2)]]] = v79[v81[4]];
								v73 = v73 + (1262 - (53 + 1208));
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[139 - (84 + 52)];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[3]];
								v73 = v73 + (436 - (188 + 247));
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[3];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 - 0]] = v81[3 + 0];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v5771 = v81[5 - 3];
								v79[v5771] = v79[v5771](v13(v79, v5771 + 1 + 0, v81[4 - 1]));
								v73 = v73 + (458 - (265 + 192));
								v81 = v69[v73];
								v79[v81[5 - 3]][v79[v81[8 - 5]]] = v79[v81[2 + 2]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[2]] = v81[3 + 0];
								v73 = v73 + (972 - (636 + 335));
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[5 - 2]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[1365 - (358 + 1004)];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[87 - (74 + 11)]] = v81[3];
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v5771 = v81[4 - 2];
								v79[v5771] = v79[v5771](v13(v79, v5771 + 1 + 0, v81[1581 - (1211 + 367)]));
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1271 - (511 + 758)]][v79[v81[2 + 1]]] = v79[v81[13 - 9]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[3 - 1]] = v81[3];
								v73 = v73 + (803 - (624 + 178));
								v81 = v69[v73];
								v79[v81[934 - (291 + 641)]] = v79[v81[7 - 4]];
								v73 = v73 + (1342 - (1162 + 179));
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[5 - 2];
								v73 = v73 + (1583 - (403 + 1179));
								v81 = v69[v73];
								v79[v81[3 - 1]] = v81[1231 - (318 + 910)];
								v73 = v73 + (1442 - (212 + 1229));
								v81 = v69[v73];
								v5771 = v81[692 - (83 + 607)];
								v79[v5771] = v79[v5771](v13(v79, v5771 + (1 - 0), v81[3]));
								v73 = v73 + (414 - (334 + 79));
								v81 = v69[v73];
								v79[v81[2 + 0]][v79[v81[3 + 0]]] = v79[v81[10 - 6]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]] = v81[3 + 0];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v79[v81[3 + 0]];
								v73 = v73 + (497 - (8 + 488));
								v81 = v69[v73];
								v79[v81[2]] = v81[1144 - (557 + 584)];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[371 - (244 + 124)];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v5771 = v81[2];
								v79[v5771] = v79[v5771](v13(v79, v5771 + 1, v81[3]));
								v73 = v73 + (1936 - (1901 + 34));
								v81 = v69[v73];
								v79[v81[1 + 1]][v79[v81[1473 - (478 + 992)]]] = v79[v81[4]];
								v73 = v73 + (184 - (98 + 85));
								v81 = v69[v73];
								v79[v81[2]] = v81[3];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[7 - 5]] = v79[v81[7 - 4]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v81[1859 - (446 + 1410)];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]] = v81[1306 - (735 + 568)];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v5771 = v81[169 - (73 + 94)];
								v79[v5771] = v79[v5771](v13(v79, v5771 + 1 + 0, v81[3 + 0]));
								v73 = v73 + (396 - (187 + 208));
								v81 = v69[v73];
								v79[v81[2 - 0]][v79[v81[9 - 6]]] = v79[v81[4 + 0]];
								v73 = v73 + (4 - 3);
								v81 = v69[v73];
								v79[v81[4 - 2]] = v81[11 - 8];
								v73 = v73 + (1488 - (683 + 804));
								v81 = v69[v73];
								v79[v81[5 - 3]] = v79[v81[3]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[1135 - (1044 + 88)];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[3];
								v73 = v73 + (196 - (147 + 48));
								v81 = v69[v73];
								v5771 = v81[2];
								v79[v5771] = v79[v5771](v13(v79, v5771 + 1, v81[3 - 0]));
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1426 - (1007 + 417)]][v79[v81[1401 - (574 + 824)]]] = v79[v81[11 - 7]];
								v73 = v73 + (4 - 3);
								v81 = v69[v73];
								v79[v81[75 - (50 + 23)]] = v81[3 + 0];
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v79[v81[380 - (123 + 255)]] = v79[v81[4 - 1]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1368 - (893 + 473)]] = v81[1 + 2];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[5 - 3]] = v81[1 + 2];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v5771 = v81[1573 - (524 + 1047)];
								v79[v5771] = v79[v5771](v13(v79, v5771 + 1 + 0, v81[10 - 7]));
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v79[v81[6 - 4]][v79[v81[284 - (84 + 197)]]] = v79[v81[47 - (40 + 3)]];
								v73 = v73 + (870 - (657 + 212));
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[3 + 0];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[1078 - (684 + 392)]] = v79[v81[2 + 1]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[5 - 3]] = v81[1 + 2];
								v73 = v73 + (984 - (73 + 910));
								v81 = v69[v73];
								v79[v81[2]] = v81[3];
								v73 = v73 + (1131 - (181 + 949));
								v81 = v69[v73];
								v5771 = v81[340 - (23 + 315)];
								v79[v5771] = v79[v5771](v13(v79, v5771 + 1, v81[3 - 0]));
								v73 = v73 + (718 - (224 + 493));
								v81 = v69[v73];
								v79[v81[1 + 1]][v79[v81[7 - 4]]] = v79[v81[13 - 9]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[376 - (320 + 53)];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[537 - (525 + 10)]] = v79[v81[1 + 2]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[1357 - (496 + 858)];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[228 - (105 + 121)]] = v81[1 + 2];
								v73 = v73 + (699 - (514 + 184));
								v81 = v69[v73];
								v5771 = v81[1 + 1];
								v79[v5771] = v79[v5771](v13(v79, v5771 + (1967 - (1879 + 87)), v81[2 + 1]));
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 + 0]][v79[v81[39 - (35 + 1)]]] = v79[v81[1 + 3]];
							else
								local v5859;
								v79[v81[2 + 0]] = v79[v81[9 - 6]][v81[894 - (603 + 287)]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[615 - (441 + 172)]] = v81[3];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[887 - (426 + 459)]] = v81[1029 - (353 + 673)];
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v5859 = v81[2 + 0];
								v79[v5859] = v79[v5859](v13(v79, v5859 + (1699 - (1621 + 77)), v81[3]));
								v73 = v73 + (562 - (104 + 457));
								v81 = v69[v73];
								v79[v81[2 + 0]][v81[8 - 5]] = v79[v81[1467 - (415 + 1048)]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[3 - 1]][v81[6 - 3]] = v81[4 + 0];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[1013 - (620 + 391)]] = v64[v81[10 - 7]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[3 - 1]] = v79[v81[3 + 0]][v81[4]];
								v73 = v73 + (1564 - (97 + 1466));
								v81 = v69[v73];
								v79[v81[1712 - (770 + 940)]] = v81[2 + 1];
								v73 = v73 + (695 - (194 + 500));
								v81 = v69[v73];
								v79[v81[1999 - (618 + 1379)]] = v81[1 + 2];
								v73 = v73 + (1403 - (252 + 1150));
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[3 + 0];
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v79[v81[5 - 3]] = v81[3];
								v73 = v73 + 1;
								v81 = v69[v73];
								v5859 = v81[2];
								v79[v5859] = v79[v5859](v13(v79, v5859 + (335 - (333 + 1)), v81[3 - 0]));
								v73 = v73 + (118 - (111 + 6));
								v81 = v69[v73];
								v79[v81[1327 - (205 + 1120)]][v81[994 - (72 + 919)]] = v79[v81[11 - 7]];
								v73 = v73 + (428 - (68 + 359));
								v81 = v69[v73];
								v79[v81[4 - 2]] = v64[v81[892 - (705 + 184)]];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[287 - (4 + 281)]] = v79[v81[2 + 1]][v81[132 - (68 + 60)]];
								v73 = v73 + (773 - (91 + 681));
								v81 = v69[v73];
								v79[v81[3 - 1]] = v81[1 + 2];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[3 - 1]] = v81[3 + 0];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[3 - 1]] = v81[3 + 0];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 - 0]] = v81[7 - 4];
								v73 = v73 + 1;
								v81 = v69[v73];
								v5859 = v81[1586 - (159 + 1425)];
								v79[v5859] = v79[v5859](v13(v79, v5859 + 1, v81[5 - 2]));
								v73 = v73 + (243 - (34 + 208));
								v81 = v69[v73];
								v79[v81[5 - 3]][v81[1560 - (1344 + 213)]] = v79[v81[698 - (594 + 100)]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v81[558 - (171 + 384)];
								v73 = v73 + (899 - (503 + 395));
								v81 = v69[v73];
								v73 = v81[12 - 9];
							end
						elseif (v82 == 362) then
							local v5898 = v81[1 + 1];
							local v5899 = v79[v5898];
							local v5900 = v79[v5898 + (146 - (93 + 51))];
							if ((v5900 > 0) or (3169 < 740)) then
								if (v5899 > v79[v5898 + (1947 - (838 + 1108))]) then
									v73 = v81[2 + 1];
								else
									v79[v5898 + 3] = v5899;
								end
							elseif (v5899 < v79[v5898 + 1]) then
								v73 = v81[464 - (180 + 281)];
							else
								v79[v5898 + 1 + 2] = v5899;
							end
						else
							local v5901;
							local v5902;
							v5902 = v81[3 - 1];
							v79[v5902](v13(v79, v5902 + 1, v81[3 + 0]));
							v73 = v73 + (3 - 2);
							v81 = v69[v73];
							v79[v81[9 - 7]] = v81[8 - 5];
							v73 = v73 + (3 - 2);
							v81 = v69[v73];
							v79[v81[282 - (168 + 112)]] = v79[v81[3]][v79[v81[1832 - (627 + 1201)]]];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[2]] = v81[13 - 10];
							v73 = v73 + (2 - 1);
							v81 = v69[v73];
							v5902 = v81[6 - 4];
							v5901 = v79[v81[3]];
							v79[v5902 + 1 + 0] = v5901;
							v79[v5902] = v5901[v79[v81[4]]];
						end
					elseif ((4891 > 3239) and (v82 <= 370)) then
						if (v82 <= (1042 - (553 + 123))) then
							if ((1035 == 1035) and (v82 <= 364)) then
								local v795;
								local v796;
								v79[v81[2]][v79[v81[1 + 2]]] = v79[v81[2 + 2]];
								v73 = v73 + (1786 - (609 + 1176));
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[8 - 5];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1315 - (101 + 1212)]] = v79[v81[3]][v79[v81[17 - 13]]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v796 = v81[4 - 2];
								v79[v796](v13(v79, v796 + 1, v81[3 + 0]));
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[6 - 3];
								v73 = v73 + (902 - (342 + 559));
								v81 = v69[v73];
								v796 = v81[1 + 1];
								v795 = v79[v81[992 - (427 + 562)]];
								v79[v796 + 1] = v795;
								v79[v796] = v795[v79[v81[9 - 5]]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2 - 0]] = v81[3];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[4 - 2]] = v79[v81[5 - 2]][v79[v81[4]]];
								v73 = v73 + (1817 - (1513 + 303));
								v81 = v69[v73];
								v796 = v81[1 + 1];
								v79[v796] = v79[v796](v13(v79, v796 + 1, v81[2 + 1]));
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								if v79[v81[7 - 5]] then
									v73 = v73 + 1 + 0;
								else
									v73 = v81[2 + 1];
								end
							elseif (v82 > 365) then
								v79[v81[2]] = v81[2 + 1];
								v73 = v73 + (410 - (18 + 391));
								v81 = v69[v73];
								v79[v81[735 - (323 + 410)]] = v79[v81[3]][v79[v81[903 - (94 + 805)]]];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[1 + 1]][v79[v81[1 + 2]]] = v79[v81[13 - 9]];
								v73 = v73 + (1671 - (816 + 854));
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[1 + 2];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 + 0]] = v79[v81[9 - 6]][v79[v81[4]]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[599 - (496 + 101)]] = v81[1105 - (76 + 1026)];
								v73 = v73 + (275 - (6 + 268));
								v81 = v69[v73];
								v79[v81[3 - 1]][v79[v81[3]]] = v79[v81[1537 - (1366 + 167)]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[1162 - (960 + 199)];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[5 - 3]] = v79[v81[3]][v79[v81[4]]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]] = v81[3];
							else
								v79[v81[1684 - (897 + 785)]] = v79[v81[3 + 0]][v81[1049 - (481 + 564)]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[9 - 7]] = v63[v81[1443 - (1259 + 181)]];
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v79[v81[4 - 2]] = v79[v81[11 - 8]][v81[3 + 1]];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[3]][v79[v81[4]]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								if (not v79[v81[2]] or (4624 == 446)) then
									v73 = v73 + (2 - 1);
								else
									v73 = v81[7 - 4];
								end
							end
						elseif (v82 <= (292 + 76)) then
							if (v82 > (64 + 303)) then
								local v5944;
								local v5945;
								v5945 = v81[2];
								v5944 = v79[v81[3]];
								v79[v5945 + (4 - 3)] = v5944;
								v79[v5945] = v5944[v81[8 - 4]];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[839 - (48 + 789)]] = v64[v81[3]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[15 - (5 + 7)]][v81[940 - (569 + 367)]];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[3]][v81[13 - 9]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v5945 = v81[2];
								v79[v5945] = v79[v5945](v13(v79, v5945 + 1, v81[3]));
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								if (v79[v81[2]] or (1962 >= 3214)) then
									v73 = v73 + (1726 - (887 + 838));
								else
									v73 = v81[13 - 10];
								end
							elseif not v79[v81[2]] then
								v73 = v73 + 1 + 0;
							else
								v73 = v81[3];
							end
						elseif (v82 > (965 - 596)) then
							local v5957;
							v79[v81[2]] = v79[v81[5 - 2]][v81[15 - 11]];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[1773 - (1741 + 30)]] = v79[v81[6 - 3]];
							v73 = v73 + (1928 - (525 + 1402));
							v81 = v69[v73];
							v79[v81[2 - 0]] = v79[v81[2 + 1]];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v5957 = v81[890 - (746 + 142)];
							v79[v5957](v13(v79, v5957 + 1 + 0, v81[3 + 0]));
							v73 = v73 + (1 - 0);
							v81 = v69[v73];
							v73 = v81[1941 - (350 + 1588)];
						else
							local v5967 = 0 - 0;
							while true do
								if ((2 == v5967) or (4978 == 3401)) then
									v81 = v69[v73];
									v79[v81[1 + 1]] = v63[v81[3 + 0]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v5967 = 3;
								end
								if (v5967 == (1105 - (408 + 694))) then
									v79[v81[2]] = v79[v81[3]][v81[1772 - (1112 + 656)]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									if v79[v81[889 - (111 + 776)]] then
										v73 = v73 + (3 - 2);
									else
										v73 = v81[2 + 1];
									end
									break;
								end
								if (v5967 == (1584 - (1108 + 476))) then
									v79[v81[1538 - (639 + 897)]] = v79[v81[172 - (99 + 70)]][v81[1535 - (727 + 804)]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[22 - (10 + 10)]] = v79[v81[1216 - (351 + 862)]][v81[4]];
									v5967 = 2 - 1;
								end
								if (v5967 == (3 - 2)) then
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[962 - (240 + 720)]][v81[416 - (410 + 3)]] = v79[v81[4]];
									v73 = v73 + (750 - (183 + 566));
									v5967 = 2 + 0;
								end
							end
						end
					elseif (v82 <= (1579 - (1095 + 111))) then
						if ((v82 <= (168 + 203)) or (1997 == 1267)) then
							v79[v81[1 + 1]] = v81[250 - (20 + 227)];
						elseif (v82 > 372) then
							local v5968 = v81[1 + 1];
							v79[v5968] = v79[v5968](v13(v79, v5968 + 1 + 0, v81[1617 - (1239 + 375)]));
						else
							v79[v81[1847 - (48 + 1797)]] = v79[v81[1855 - (1558 + 294)]];
						end
					elseif (v82 <= (2004 - (1356 + 273))) then
						if (v82 == 374) then
							local v5972;
							local v5973;
							v79[v81[1618 - (1248 + 368)]] = v63[v81[1 + 2]];
							v73 = v73 + (2 - 1);
							v81 = v69[v73];
							v79[v81[2 - 0]] = v79[v81[3]][v81[6 - 2]];
							v73 = v73 + (4 - 3);
							v81 = v69[v73];
							v5973 = v81[335 - (65 + 268)];
							v5972 = v79[v81[709 - (227 + 479)]];
							v79[v5973 + 1 + 0] = v5972;
							v79[v5973] = v5972[v81[1526 - (1169 + 353)]];
							v73 = v73 + (4 - 3);
							v81 = v69[v73];
							v79[v81[1357 - (342 + 1013)]] = v63[v81[12 - 9]];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[2]] = v79[v81[3]][v81[1 + 3]];
							v73 = v73 + (1797 - (1504 + 292));
							v81 = v69[v73];
							v5973 = v81[2];
							v79[v5973] = v79[v5973](v13(v79, v5973 + 1, v81[3 - 0]));
							v73 = v73 + 1;
							v81 = v69[v73];
							v5973 = v81[4 - 2];
							v5972 = v79[v81[939 - (419 + 517)]];
							v79[v5973 + (1335 - (52 + 1282))] = v5972;
							v79[v5973] = v5972[v81[7 - 3]];
							v73 = v73 + (2 - 1);
							v81 = v69[v73];
							v79[v81[2 + 0]] = v63[v81[7 - 4]];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[2 + 0]] = v79[v81[3]][v81[13 - 9]];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[1 + 1]] = v79[v81[11 - 8]][v81[4]];
						else
							local v5998;
							local v5999;
							v79[v81[1 + 1]][v79[v81[3]]] = v79[v81[1416 - (1212 + 200)]];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[2 - 0]] = v81[3 + 0];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[2]] = v79[v81[3]][v79[v81[756 - (105 + 647)]]];
							v73 = v73 + (1328 - (1146 + 181));
							v81 = v69[v73];
							v5999 = v81[2];
							v79[v5999](v13(v79, v5999 + (1 - 0), v81[994 - (292 + 699)]));
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[9 - 7]] = v81[899 - (78 + 818)];
							v73 = v73 + (2 - 1);
							v81 = v69[v73];
							v79[v81[2 + 0]] = v79[v81[4 - 1]][v79[v81[1346 - (758 + 584)]]];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[2 + 0]] = v81[3 + 0];
							v73 = v73 + 1;
							v81 = v69[v73];
							v5999 = v81[2 - 0];
							v5998 = v79[v81[6 - 3]];
							v79[v5999 + 1 + 0] = v5998;
							v79[v5999] = v5998[v79[v81[4]]];
							v73 = v73 + (1 - 0);
							v81 = v69[v73];
							v79[v81[2 + 0]] = {};
							v73 = v73 + (1105 - (216 + 888));
							v81 = v69[v73];
							v79[v81[2]] = v81[5 - 2];
						end
					elseif (v82 == 376) then
						v79[v81[2]] = v79[v81[1 + 2]][v79[v81[317 - (126 + 187)]]];
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[1 + 1]] = v81[8 - 5] ~= (0 - 0);
						v73 = v73 + (1790 - (1719 + 70));
						v81 = v69[v73];
						v79[v81[2]][v79[v81[3 - 0]]] = v79[v81[1806 - (1317 + 485)]];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[1 + 1]] = v81[3];
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[1207 - (1049 + 156)]] = v79[v81[5 - 2]][v79[v81[4]]];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[6 - 4]] = v81[3 + 0];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[3 - 1]][v79[v81[60 - (19 + 38)]]] = v79[v81[4]];
						v73 = v73 + (2 - 1);
						v81 = v69[v73];
						v79[v81[851 - (677 + 172)]] = v81[531 - (469 + 59)];
						v73 = v73 + (1045 - (728 + 316));
						v81 = v69[v73];
						v79[v81[1713 - (1445 + 266)]] = v79[v81[5 - 2]][v79[v81[15 - 11]]];
						v73 = v73 + (3 - 2);
						v81 = v69[v73];
						v79[v81[1198 - (478 + 718)]] = v64[v81[9 - 6]];
					else
						local v6037;
						v6037 = v81[1 + 1];
						v79[v6037] = v79[v6037](v13(v79, v6037 + 1 + 0, v81[3 + 0]));
						v73 = v73 + (1 - 0);
						v81 = v69[v73];
						v79[v81[2]][v79[v81[13 - 10]]] = v79[v81[4 + 0]];
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[2]] = v81[3];
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[3 - 1]] = v79[v81[1587 - (1046 + 538)]];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[1897 - (192 + 1703)]] = v81[3];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[2]] = v81[1 + 2];
						v73 = v73 + 1;
						v81 = v69[v73];
						v6037 = v81[900 - (283 + 615)];
						v79[v6037] = v79[v6037](v13(v79, v6037 + (337 - (130 + 206)), v81[3 + 0]));
						v73 = v73 + (952 - (871 + 80));
						v81 = v69[v73];
						v79[v81[2]][v79[v81[3 + 0]]] = v79[v81[9 - 5]];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[2]] = v81[1 + 2];
						v73 = v73 + (1066 - (800 + 265));
						v81 = v69[v73];
						v79[v81[160 - (67 + 91)]] = v79[v81[3]];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[1 + 1]] = v81[1150 - (918 + 229)];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[2]] = v81[2 + 1];
						v73 = v73 + (3 - 2);
						v81 = v69[v73];
						v6037 = v81[1531 - (1339 + 190)];
						v79[v6037] = v79[v6037](v13(v79, v6037 + (675 - (624 + 50)), v81[5 - 2]));
						v73 = v73 + (4 - 3);
						v81 = v69[v73];
						v79[v81[2 - 0]][v79[v81[6 - 3]]] = v79[v81[11 - 7]];
						v73 = v73 + (1202 - (452 + 749));
						v81 = v69[v73];
						v79[v81[947 - (27 + 918)]] = v81[12 - 9];
						v73 = v73 + (1 - 0);
						v81 = v69[v73];
						v79[v81[2]] = v79[v81[5 - 2]];
						v73 = v73 + (1281 - (711 + 569));
						v81 = v69[v73];
						v79[v81[1 + 1]] = v81[831 - (738 + 90)];
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[1 + 1]] = v81[4 - 1];
						v73 = v73 + (1 - 0);
						v81 = v69[v73];
						v6037 = v81[2];
						v79[v6037] = v79[v6037](v13(v79, v6037 + 1 + 0, v81[3]));
						v73 = v73 + (2 - 1);
						v81 = v69[v73];
						v79[v81[5 - 3]][v79[v81[3]]] = v79[v81[3 + 1]];
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[1 + 1]] = v81[3];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[2 + 0]] = v79[v81[6 - 3]];
						v73 = v73 + (1 - 0);
						v81 = v69[v73];
						v79[v81[2]] = v81[1167 - (1016 + 148)];
						v73 = v73 + (2 - 1);
						v81 = v69[v73];
						v79[v81[2]] = v81[3];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v6037 = v81[2];
						v79[v6037] = v79[v6037](v13(v79, v6037 + (1298 - (319 + 978)), v81[3 + 0]));
						v73 = v73 + (2 - 1);
						v81 = v69[v73];
						v79[v81[2]][v79[v81[3 + 0]]] = v79[v81[4]];
						v73 = v73 + (1467 - (188 + 1278));
						v81 = v69[v73];
						v79[v81[1 + 1]] = v81[1 + 2];
						v73 = v73 + (1 - 0);
						v81 = v69[v73];
						v79[v81[897 - (92 + 803)]] = v79[v81[423 - (118 + 302)]];
						v73 = v73 + (3 - 2);
						v81 = v69[v73];
						v79[v81[6 - 4]] = v81[3];
						v73 = v73 + (1930 - (1238 + 691));
						v81 = v69[v73];
						v79[v81[3 - 1]] = v81[915 - (696 + 216)];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v6037 = v81[2 + 0];
						v79[v6037] = v79[v6037](v13(v79, v6037 + 1 + 0, v81[3]));
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[4 - 2]][v79[v81[1 + 2]]] = v79[v81[4 + 0]];
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[2 + 0]] = v81[3];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[2]] = v79[v81[3]];
						v73 = v73 + (880 - (407 + 472));
						v81 = v69[v73];
						v79[v81[1488 - (864 + 622)]] = v81[1098 - (390 + 705)];
						v73 = v73 + (180 - (45 + 134));
						v81 = v69[v73];
						v79[v81[3 - 1]] = v81[1 + 2];
						v73 = v73 + (3 - 2);
						v81 = v69[v73];
						v6037 = v81[2];
						v79[v6037] = v79[v6037](v13(v79, v6037 + 1, v81[9 - 6]));
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[2 + 0]][v79[v81[3]]] = v79[v81[1792 - (1108 + 680)]];
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[1 + 1]] = v81[3];
						v73 = v73 + (610 - (174 + 435));
						v81 = v69[v73];
						v79[v81[2 - 0]] = v79[v81[1 + 2]];
						v73 = v73 + (1927 - (1417 + 509));
						v81 = v69[v73];
						v79[v81[1 + 1]] = v81[1256 - (1137 + 116)];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[2]] = v81[10 - 7];
						v73 = v73 + 1;
						v81 = v69[v73];
						v6037 = v81[4 - 2];
						v79[v6037] = v79[v6037](v13(v79, v6037 + (1 - 0), v81[2 + 1]));
						v73 = v73 + (1952 - (74 + 1877));
						v81 = v69[v73];
						v79[v81[92 - (84 + 6)]][v79[v81[14 - 11]]] = v79[v81[3 + 1]];
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[2]] = v81[10 - 7];
						v73 = v73 + (2 - 1);
						v81 = v69[v73];
						v79[v81[4 - 2]] = v79[v81[2 + 1]];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[2]] = v81[1216 - (870 + 343)];
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[3 - 1]] = v81[13 - 10];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v6037 = v81[3 - 1];
						v79[v6037] = v79[v6037](v13(v79, v6037 + 1 + 0, v81[1961 - (757 + 1201)]));
						v73 = v73 + (1621 - (1323 + 297));
						v81 = v69[v73];
						v79[v81[6 - 4]][v79[v81[1 + 2]]] = v79[v81[3 + 1]];
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[1 + 1]] = v81[3 + 0];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[1 + 1]] = v79[v81[6 - 3]];
						v73 = v73 + (2 - 1);
						v81 = v69[v73];
						v79[v81[2 + 0]] = v81[3];
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[3 - 1]] = v81[5 - 2];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v6037 = v81[3 - 1];
						v79[v6037] = v79[v6037](v13(v79, v6037 + 1, v81[3 + 0]));
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[5 - 3]][v79[v81[2 + 1]]] = v79[v81[1641 - (954 + 683)]];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[2]] = v81[3];
						v73 = v73 + (1 - 0);
						v81 = v69[v73];
						v79[v81[2 + 0]] = v79[v81[4 - 1]];
						v73 = v73 + (1 - 0);
						v81 = v69[v73];
						v79[v81[205 - (154 + 49)]] = v81[110 - (95 + 12)];
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[2 + 0]] = v81[3];
						v73 = v73 + (1167 - (1049 + 117));
						v81 = v69[v73];
						v6037 = v81[2];
						v79[v6037] = v79[v6037](v13(v79, v6037 + (449 - (17 + 431)), v81[3]));
						v73 = v73 + (2 - 1);
						v81 = v69[v73];
						v79[v81[2]][v79[v81[3 + 0]]] = v79[v81[11 - 7]];
						v73 = v73 + (1 - 0);
						v81 = v69[v73];
						v79[v81[2]] = v81[1 + 2];
						v73 = v73 + (1 - 0);
						v81 = v69[v73];
						v79[v81[2 + 0]] = v79[v81[1 + 2]];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[2 + 0]] = v81[1308 - (432 + 873)];
						v73 = v73 + (1800 - (1544 + 255));
						v81 = v69[v73];
						v79[v81[2 - 0]] = v81[8 - 5];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v6037 = v81[2];
						v79[v6037] = v79[v6037](v13(v79, v6037 + (1469 - (455 + 1013)), v81[277 - (130 + 144)]));
						v73 = v73 + (3 - 2);
						v81 = v69[v73];
						v79[v81[1 + 1]][v79[v81[8 - 5]]] = v79[v81[1 + 3]];
						v73 = v73 + (3 - 2);
						v81 = v69[v73];
						v79[v81[1 + 1]] = v81[3];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[1 + 1]] = v79[v81[3 + 0]];
						v73 = v73 + (2 - 1);
						v81 = v69[v73];
						v79[v81[1 + 1]] = v81[873 - (65 + 805)];
						v73 = v73 + (2 - 1);
						v81 = v69[v73];
						v79[v81[2 - 0]] = v81[9 - 6];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v6037 = v81[3 - 1];
						v79[v6037] = v79[v6037](v13(v79, v6037 + 1 + 0, v81[3]));
						v73 = v73 + (2 - 1);
						v81 = v69[v73];
						v79[v81[5 - 3]][v79[v81[3]]] = v79[v81[1 + 3]];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[1390 - (1281 + 107)]] = v81[9 - 6];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[1 + 1]] = v79[v81[3]];
						v73 = v73 + (842 - (374 + 467));
						v81 = v69[v73];
						v79[v81[787 - (668 + 117)]] = v81[1983 - (959 + 1021)];
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[2]] = v81[14 - 11];
						v73 = v73 + (3 - 2);
						v81 = v69[v73];
						v6037 = v81[1039 - (670 + 367)];
						v79[v6037] = v79[v6037](v13(v79, v6037 + (1982 - (663 + 1318)), v81[1 + 2]));
						v73 = v73 + (1773 - (708 + 1064));
						v81 = v69[v73];
						v79[v81[1626 - (260 + 1364)]][v79[v81[3 + 0]]] = v79[v81[4]];
					end
				elseif (v82 <= 404) then
					if (v82 <= (488 - (82 + 16))) then
						if ((1152 < 3410) and (v82 <= 383)) then
							if (v82 <= 380) then
								if (v82 <= 378) then
									local v818;
									local v819;
									v79[v81[1759 - (1112 + 645)]] = v63[v81[430 - (348 + 79)]];
									v73 = v73 + (1939 - (663 + 1275));
									v81 = v69[v73];
									v819 = v81[1883 - (570 + 1311)];
									v818 = v79[v81[3]];
									v79[v819 + 1 + 0] = v818;
									v79[v819] = v818[v81[10 - 6]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v819 = v81[2 + 0];
									v79[v819](v79[v819 + (1792 - (599 + 1192))]);
									v73 = v73 + (1932 - (1532 + 399));
									v81 = v69[v73];
									do
										return;
									end
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									do
										return;
									end
								elseif ((v82 == (2043 - (1053 + 611))) or (3841 > 4119)) then
									v79[v81[2]] = v81[2 + 1];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[1704 - (622 + 1079)]][v79[v81[4]]];
									v73 = v73 + (1191 - (346 + 844));
									v81 = v69[v73];
									v79[v81[1 + 1]][v79[v81[3]]] = v79[v81[4 + 0]];
									v73 = v73 + (1863 - (1077 + 785));
									v81 = v69[v73];
									v79[v81[1 + 1]] = v81[7 - 4];
									v73 = v73 + (840 - (792 + 47));
									v81 = v69[v73];
									v79[v81[2 + 0]] = v79[v81[554 - (63 + 488)]][v79[v81[17 - 13]]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[734 - (185 + 547)]] = v81[13 - 10] ~= 0;
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1 + 1]][v79[v81[2 + 1]]] = v79[v81[3 + 1]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2]] = v81[3];
									v73 = v73 + (959 - (21 + 937));
									v81 = v69[v73];
									v79[v81[772 - (697 + 73)]] = v79[v81[651 - (119 + 529)]][v79[v81[4]]];
								else
									local v6130 = 0 - 0;
									local v6131;
									local v6132;
									local v6133;
									while true do
										if (v6130 == (1 + 1)) then
											v73 = v73 + (323 - (225 + 97));
											v81 = v69[v73];
											v79[v81[1330 - (1069 + 259)]] = v63[v81[3]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v6130 = 2 + 1;
										end
										if ((762 == 762) and (v6130 == (25 - 19))) then
											v79[v81[3 - 1]] = v81[2 + 1] ~= (0 + 0);
											v73 = v73 + (1736 - (1412 + 323));
											v81 = v69[v73];
											v6131 = v81[2];
											v79[v6131](v13(v79, v6131 + 1, v81[2 + 1]));
											break;
										end
										if ((3764 >= 1840) and ((0 - 0) == v6130)) then
											v6131 = nil;
											v6132 = nil;
											v6133 = nil;
											v79[v81[56 - (29 + 25)]] = v63[v81[319 - (313 + 3)]];
											v73 = v73 + (2 - 1);
											v6130 = 2 - 1;
										end
										if ((v6130 == (9 - 5)) or (2323 >= 4054)) then
											for v12411 = v6133 + (2 - 1), v81[538 - (527 + 7)] do
												v6132 = v6132 .. v79[v12411];
											end
											v79[v81[1660 - (370 + 1288)]] = v6132;
											v73 = v73 + (779 - (706 + 72));
											v81 = v69[v73];
											v79[v81[1526 - (496 + 1028)]] = v81[1 + 2] ~= (1200 - (773 + 427));
											v6130 = 14 - 9;
										end
										if ((1 - 0) == v6130) then
											v81 = v69[v73];
											v79[v81[1 + 1]] = v63[v81[1797 - (559 + 1235)]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[1 + 1]] = v79[v81[3]][v81[998 - (882 + 112)]];
											v6130 = 434 - (19 + 413);
										end
										if ((3866 > 120) and (v6130 == (1155 - (336 + 816)))) then
											v79[v81[1326 - (838 + 486)]] = v79[v81[4 - 1]][v81[1853 - (1367 + 482)]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v6133 = v81[13 - 10];
											v6132 = v79[v6133];
											v6130 = 3 + 1;
										end
										if ((2712 == 2712) and (v6130 == (1766 - (808 + 953)))) then
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[2]] = v81[3] ~= (0 + 0);
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v6130 = 175 - (10 + 159);
										end
									end
								end
							elseif (v82 <= 381) then
								local v829 = 0 - 0;
								while true do
									if (v829 == (1 - 0)) then
										v79[v81[269 - (204 + 63)]] = v79[v81[3]][v81[4]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[6 - 4]][v81[3]] = v79[v81[1502 - (870 + 628)]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v829 = 322 - (226 + 94);
									end
									if ((2941 > 1214) and (v829 == (397 - (269 + 125)))) then
										v79[v81[1959 - (1413 + 544)]] = v79[v81[1687 - (1654 + 30)]][v81[2 + 2]];
										v73 = v73 + (237 - (24 + 212));
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[5 - 2]][v81[251 - (6 + 241)]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v829 = 4;
									end
									if (v829 == 4) then
										v79[v81[2]][v81[3]] = v79[v81[3 + 1]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[1910 - (879 + 1029)]] = v81[2 + 1];
										v73 = v73 + (677 - (307 + 369));
										v81 = v69[v73];
										v829 = 936 - (218 + 713);
									end
									if (v829 == (128 - (23 + 103))) then
										v79[v81[2 + 0]] = v63[v81[3]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2]] = v64[v81[877 - (386 + 488)]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v829 = 6 - 3;
									end
									if (v829 == 0) then
										v79[v81[84 - (58 + 24)]] = v64[v81[3]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2 - 0]] = v79[v81[3]][v81[10 - 6]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v829 = 1365 - (1351 + 13);
									end
									if (v829 == (2 + 3)) then
										v73 = v81[355 - (67 + 285)];
										break;
									end
								end
							elseif ((4018 > 1183) and (v82 > (143 + 239))) then
								local v6134 = 0;
								while true do
									if ((v6134 == (2 + 4)) or (1980 >= 3007)) then
										v79[v81[2]] = v81[178 - (104 + 71)];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[3 + 0]][v79[v81[1531 - (484 + 1043)]]];
										break;
									end
									if ((v6134 == 5) or (849 > 4636)) then
										v81 = v69[v73];
										v79[v81[2 + 0]][v79[v81[4 - 1]]] = v79[v81[1286 - (876 + 406)]];
										v73 = v73 + (762 - (86 + 675));
										v81 = v69[v73];
										v6134 = 1526 - (744 + 776);
									end
									if ((197 - (55 + 139)) == v6134) then
										v79[v81[460 - (183 + 275)]] = v81[3];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[3 + 0]][v79[v81[1556 - (126 + 1426)]]];
										v6134 = 3 + 1;
									end
									if (v6134 == (3 - 1)) then
										v81 = v69[v73];
										v79[v81[1 + 1]][v79[v81[1133 - (959 + 171)]]] = v79[v81[486 - (76 + 406)]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v6134 = 5 - 2;
									end
									if (v6134 == (1875 - (1594 + 277))) then
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2]] = v81[6 - 3];
										v73 = v73 + 1;
										v6134 = 5;
									end
									if ((4692 >= 1587) and (v6134 == (0 - 0))) then
										v79[v81[279 - (212 + 65)]] = v81[1 + 2];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[3 - 0]][v79[v81[4]]];
										v6134 = 1;
									end
									if ((3349 >= 2306) and (v6134 == (1 + 0))) then
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[1 + 1]] = v81[1964 - (569 + 1392)];
										v73 = v73 + 1 + 0;
										v6134 = 1438 - (1206 + 230);
									end
								end
							else
								local v6135;
								v79[v81[2]] = v79[v81[1255 - (306 + 946)]][v81[4]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1187 - (486 + 699)]] = v79[v81[1848 - (1784 + 61)]][v81[866 - (77 + 785)]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]][v81[3 + 0]] = v79[v81[839 - (96 + 739)]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]] = v64[v81[3]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[580 - (295 + 283)]] = v79[v81[3]][v81[4]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1542 - (1230 + 310)]] = v63[v81[506 - (258 + 245)]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v79[v81[1599 - (933 + 663)]][v81[19 - 15]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v6135 = v81[4 - 2];
								v79[v6135] = v79[v6135](v79[v6135 + 1 + 0]);
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2 + 0]] = v79[v81[645 - (35 + 607)]];
								v73 = v73 + (1060 - (588 + 471));
								v81 = v69[v73];
								v79[v81[5 - 3]] = v64[v81[9 - 6]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 + 0]] = v79[v81[3]][v81[10 - 6]];
								v73 = v73 + (958 - (475 + 482));
								v81 = v69[v73];
								v79[v81[1124 - (151 + 971)]] = v81[1350 - (1178 + 169)];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[5 - 3]] = v81[3];
								v73 = v73 + 1;
								v81 = v69[v73];
								v6135 = v81[7 - 5];
								v79[v6135] = v79[v6135](v13(v79, v6135 + 1 + 0, v81[245 - (5 + 237)]));
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[2]][v81[682 - (184 + 495)]] = v79[v81[4]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[1 + 1]][v81[1993 - (1169 + 821)]] = v79[v81[4]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[811 - (738 + 71)]][v81[3]] = v79[v81[845 - (351 + 490)]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[4 - 2]] = v63[v81[2 + 1]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[2]][v81[2 + 1]] = v79[v81[2 + 2]];
								v73 = v73 + (1178 - (737 + 440));
								v81 = v69[v73];
								v79[v81[2]] = v64[v81[2 + 1]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[235 - (214 + 19)]] = v79[v81[3 + 0]][v81[4]];
								v73 = v73 + (564 - (264 + 299));
								v81 = v69[v73];
								v79[v81[2]] = v63[v81[321 - (296 + 22)]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v79[v81[1068 - (869 + 196)]][v81[1 + 3]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v6135 = v81[1535 - (751 + 782)];
								v79[v6135] = v79[v6135](v79[v6135 + 1 + 0]);
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[2 + 1]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[624 - (85 + 537)]] = v64[v81[756 - (527 + 226)]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[862 - (774 + 86)]] = v79[v81[297 - (166 + 128)]][v81[203 - (144 + 55)]];
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v79[v81[2]] = v81[1416 - (458 + 955)];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[8 - 6]] = v81[1204 - (1080 + 121)];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[549 - (311 + 235)];
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v79[v81[2]] = v81[1 + 2];
								v73 = v73 + (1366 - (890 + 475));
								v81 = v69[v73];
								v6135 = v81[706 - (243 + 461)];
								v79[v6135] = v79[v6135](v13(v79, v6135 + (4 - 3), v81[3]));
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[5 - 3]][v81[479 - (150 + 326)]] = v79[v81[401 - (156 + 241)]];
								v73 = v73 + (647 - (451 + 195));
								v81 = v69[v73];
								v79[v81[911 - (505 + 404)]] = v64[v81[3]];
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v79[v81[1675 - (693 + 980)]] = v79[v81[1130 - (829 + 298)]][v81[68 - (18 + 46)]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[1 + 2];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[2 + 1];
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v79[v81[7 - 5]] = v81[3];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[5 - 3]] = v81[5 - 2];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v6135 = v81[113 - (72 + 39)];
								v79[v6135] = v79[v6135](v13(v79, v6135 + 1, v81[3]));
								v73 = v73 + (1034 - (974 + 59));
								v81 = v69[v73];
								v79[v81[664 - (526 + 136)]][v81[520 - (497 + 20)]] = v79[v81[3 + 1]];
								v73 = v73 + (726 - (332 + 393));
								v81 = v69[v73];
								v79[v81[1 + 1]] = v64[v81[3]];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[1592 - (1443 + 146)]][v81[11 - 7]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[6 - 4]] = v81[3 - 0];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[4 - 2]] = v81[3];
								v73 = v73 + (670 - (661 + 8));
								v81 = v69[v73];
								v79[v81[2]] = v81[706 - (385 + 318)];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[6 - 4]] = v81[1 + 2];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v6135 = v81[1 + 1];
								v79[v6135] = v79[v6135](v13(v79, v6135 + 1, v81[3]));
								v73 = v73 + (340 - (139 + 200));
								v81 = v69[v73];
								v79[v81[1 + 1]][v81[5 - 2]] = v79[v81[2 + 2]];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[14 - 11];
							end
						elseif ((v82 <= (158 + 228)) or (4789 < 3562)) then
							if (v82 <= (111 + 273)) then
								if (v79[v81[2]] ~= v79[v81[4]]) then
									v73 = v73 + (57 - (20 + 36));
								else
									v73 = v81[613 - (133 + 477)];
								end
							elseif (v82 == (699 - (198 + 116))) then
								local v6206 = 0 - 0;
								local v6207;
								local v6208;
								while true do
									if (v6206 == (25 - 18)) then
										v73 = v73 + (4 - 3);
										v81 = v69[v73];
										v79[v81[2]] = {};
										v73 = v73 + 1;
										v6206 = 1948 - (1552 + 388);
									end
									if (((705 - (477 + 227)) == v6206) or (1871 >= 2290)) then
										v81 = v69[v73];
										v79[v81[2 + 0]] = v81[3];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v6206 = 2;
									end
									if (v6206 == (3 + 2)) then
										v81 = v69[v73];
										v79[v81[2]] = v81[11 - 8];
										v73 = v73 + (455 - (293 + 161));
										v81 = v69[v73];
										v6206 = 2 + 4;
									end
									if (v6206 == (1408 - (53 + 1355))) then
										v6207 = nil;
										v6208 = nil;
										v79[v81[793 - (86 + 705)]][v79[v81[3]]] = v79[v81[923 - (675 + 244)]];
										v73 = v73 + 1 + 0;
										v6206 = 1 - 0;
									end
									if (v6206 == 2) then
										v79[v81[2 - 0]] = v79[v81[11 - 8]][v79[v81[4]]];
										v73 = v73 + (3 - 2);
										v81 = v69[v73];
										v6208 = v81[5 - 3];
										v6206 = 1520 - (339 + 1178);
									end
									if (v6206 == 8) then
										v81 = v69[v73];
										v79[v81[2]] = v81[3];
										break;
									end
									if ((v6206 == 3) or (645 > 3211)) then
										v79[v6208](v13(v79, v6208 + 1 + 0, v81[3]));
										v73 = v73 + (1251 - (341 + 909));
										v81 = v69[v73];
										v79[v81[2]] = v81[10 - 7];
										v6206 = 14 - 10;
									end
									if (v6206 == (1877 - (1856 + 15))) then
										v6208 = v81[5 - 3];
										v6207 = v79[v81[3]];
										v79[v6208 + (1 - 0)] = v6207;
										v79[v6208] = v6207[v79[v81[4]]];
										v6206 = 7;
									end
									if ((v6206 == (2 + 2)) or (1604 >= 3307)) then
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[3 + 0]][v79[v81[3 + 1]]];
										v73 = v73 + (1666 - (1459 + 206));
										v6206 = 11 - 6;
									end
								end
							else
								local v6209;
								v6209 = v81[570 - (371 + 197)];
								v79[v6209] = v79[v6209](v13(v79, v6209 + (119 - (6 + 112)), v81[297 - (166 + 128)]));
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2 - 0]][v79[v81[6 - 3]]] = v79[v81[335 - (7 + 324)]];
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v79[v81[2 - 0]] = v81[3];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[3 - 1]] = v79[v81[1443 - (1318 + 122)]];
								v73 = v73 + (1222 - (564 + 657));
								v81 = v69[v73];
								v79[v81[3 - 1]] = v81[1 + 2];
								v73 = v73 + (739 - (191 + 547));
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[12 - 9];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v6209 = v81[5 - 3];
								v79[v6209] = v79[v6209](v13(v79, v6209 + (1 - 0), v81[7 - 4]));
								v73 = v73 + (808 - (169 + 638));
								v81 = v69[v73];
								v79[v81[2]][v79[v81[3]]] = v79[v81[7 - 3]];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[2]] = v81[3];
								v73 = v73 + (1436 - (1257 + 178));
								v81 = v69[v73];
								v79[v81[4 - 2]] = v79[v81[3]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v81[5 - 2];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[3 + 0];
								v73 = v73 + (20 - (9 + 10));
								v81 = v69[v73];
								v6209 = v81[905 - (456 + 447)];
								v79[v6209] = v79[v6209](v13(v79, v6209 + 1 + 0, v81[3 + 0]));
								v73 = v73 + (265 - (234 + 30));
								v81 = v69[v73];
								v79[v81[1 + 1]][v79[v81[146 - (119 + 24)]]] = v79[v81[901 - (616 + 281)]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v81[8 - 5];
								v73 = v73 + (274 - (240 + 33));
								v81 = v69[v73];
								v79[v81[3 - 1]] = v79[v81[895 - (584 + 308)]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[5 - 3]] = v81[5 - 2];
								v73 = v73 + (719 - (587 + 131));
								v81 = v69[v73];
								v79[v81[1820 - (1069 + 749)]] = v81[3 + 0];
								v73 = v73 + 1;
								v81 = v69[v73];
								v6209 = v81[1 + 1];
								v79[v6209] = v79[v6209](v13(v79, v6209 + (4 - 3), v81[3 + 0]));
								v73 = v73 + (1378 - (601 + 776));
								v81 = v69[v73];
								v79[v81[2 + 0]][v79[v81[2 + 1]]] = v79[v81[4]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[3];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[4 - 2]] = v79[v81[4 - 1]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]] = v81[3];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[978 - (506 + 469)];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v6209 = v81[2 + 0];
								v79[v6209] = v79[v6209](v13(v79, v6209 + (2 - 1), v81[7 - 4]));
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1 + 1]][v79[v81[3]]] = v79[v81[9 - 5]];
								v73 = v73 + (150 - (69 + 80));
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[165 - (44 + 118)];
								v73 = v73 + (1149 - (94 + 1054));
								v81 = v69[v73];
								v79[v81[1083 - (315 + 766)]] = v79[v81[8 - 5]];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[2]] = v81[5 - 2];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[567 - (68 + 496)];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v6209 = v81[2];
								v79[v6209] = v79[v6209](v13(v79, v6209 + 1 + 0, v81[1989 - (756 + 1230)]));
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[1 + 1]][v79[v81[1385 - (691 + 691)]]] = v79[v81[2 + 2]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[3];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[10 - 7]];
								v73 = v73 + (765 - (612 + 152));
								v81 = v69[v73];
								v79[v81[4 - 2]] = v81[3];
								v73 = v73 + (1445 - (1407 + 37));
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[5 - 2];
								v73 = v73 + (279 - (238 + 40));
								v81 = v69[v73];
								v6209 = v81[45 - (14 + 29)];
								v79[v6209] = v79[v6209](v13(v79, v6209 + 1 + 0, v81[3 + 0]));
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]][v79[v81[2 + 1]]] = v79[v81[1732 - (1044 + 684)]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1454 - (1286 + 166)]] = v81[904 - (898 + 3)];
								v73 = v73 + (63 - (46 + 16));
								v81 = v69[v73];
								v79[v81[1 + 1]] = v79[v81[4 - 1]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[11 - 8];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v81[5 - 2];
								v73 = v73 + 1;
								v81 = v69[v73];
								v6209 = v81[2];
								v79[v6209] = v79[v6209](v13(v79, v6209 + (1 - 0), v81[3]));
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 + 0]][v79[v81[825 - (175 + 647)]]] = v79[v81[8 - 4]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[1327 - (228 + 1096)];
								v73 = v73 + (1365 - (280 + 1084));
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[3]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[727 - (722 + 2)];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[1 + 2];
								v73 = v73 + 1;
								v81 = v69[v73];
								v6209 = v81[1709 - (1412 + 295)];
								v79[v6209] = v79[v6209](v13(v79, v6209 + 1 + 0, v81[1 + 2]));
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[946 - (240 + 704)]][v79[v81[3 - 0]]] = v79[v81[1711 - (1284 + 423)]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[1087 - (715 + 370)]] = v81[2 + 1];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v79[v81[7 - 4]];
								v73 = v73 + (973 - (718 + 254));
								v81 = v69[v73];
								v79[v81[2]] = v81[3];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v81[5 - 2];
								v73 = v73 + (430 - (408 + 21));
								v81 = v69[v73];
								v6209 = v81[1 + 1];
								v79[v6209] = v79[v6209](v13(v79, v6209 + 1 + 0, v81[10 - 7]));
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[2]][v79[v81[3]]] = v79[v81[4]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]] = v81[3];
								v73 = v73 + (347 - (64 + 282));
								v81 = v69[v73];
								v79[v81[2 + 0]] = v79[v81[369 - (115 + 251)]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[6 - 3];
								v73 = v73 + (58 - (30 + 27));
								v81 = v69[v73];
								v79[v81[8 - 6]] = v81[3 + 0];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v6209 = v81[2];
								v79[v6209] = v79[v6209](v13(v79, v6209 + (1918 - (1894 + 23)), v81[1930 - (1724 + 203)]));
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[8 - 6]][v79[v81[8 - 5]]] = v79[v81[4]];
								v73 = v73 + (1682 - (201 + 1480));
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[1922 - (331 + 1588)];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[4 - 2]] = v79[v81[5 - 2]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[479 - (311 + 166)]] = v81[3];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1098 - (521 + 575)]] = v81[1 + 2];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v6209 = v81[2];
								v79[v6209] = v79[v6209](v13(v79, v6209 + 1, v81[4 - 1]));
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v79[v81[8 - 6]][v79[v81[2 + 1]]] = v79[v81[2 + 2]];
								v73 = v73 + (1033 - (60 + 972));
								v81 = v69[v73];
								v79[v81[1875 - (1040 + 833)]] = v81[1983 - (1227 + 753)];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[3]];
								v73 = v73 + (387 - (309 + 77));
								v81 = v69[v73];
								v79[v81[3 - 1]] = v81[3 + 0];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1303 - (74 + 1227)]] = v81[1241 - (688 + 550)];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v6209 = v81[1 + 1];
								v79[v6209] = v79[v6209](v13(v79, v6209 + (463 - (371 + 91)), v81[1470 - (1428 + 39)]));
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[251 - (174 + 75)]][v79[v81[3 + 0]]] = v79[v81[4 + 0]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[2]] = v81[14 - 11];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[3 - 1]] = v79[v81[11 - 8]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[8 - 6]] = v81[3];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[143 - (138 + 3)]] = v81[2 + 1];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v6209 = v81[2 - 0];
								v79[v6209] = v79[v6209](v13(v79, v6209 + (3 - 2), v81[2 + 1]));
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[5 - 3]][v79[v81[8 - 5]]] = v79[v81[406 - (353 + 49)]];
							end
						elseif (v82 <= (244 + 144)) then
							if (v82 == (772 - 385)) then
								local v6291;
								v6291 = v81[2];
								v79[v6291] = v79[v6291](v13(v79, v6291 + (1737 - (1417 + 319)), v81[4 - 1]));
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[839 - (138 + 699)]][v79[v81[5 - 2]]] = v79[v81[3 + 1]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[3];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[3 - 1]] = v79[v81[1102 - (1007 + 92)]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[4 - 2]] = v81[1654 - (366 + 1285)];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v81[3];
								v73 = v73 + (534 - (137 + 396));
								v81 = v69[v73];
								v6291 = v81[1706 - (349 + 1355)];
								v79[v6291] = v79[v6291](v13(v79, v6291 + (2 - 1), v81[3]));
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[4 - 2]][v79[v81[3]]] = v79[v81[11 - 7]];
								v73 = v73 + (1627 - (621 + 1005));
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[1 + 2];
								v73 = v73 + (1591 - (1064 + 526));
								v81 = v69[v73];
								v79[v81[934 - (538 + 394)]] = v79[v81[1 + 2]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[688 - (77 + 609)]] = v81[3];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1751 - (1255 + 494)]] = v81[3];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v6291 = v81[192 - (59 + 131)];
								v79[v6291] = v79[v6291](v13(v79, v6291 + (3 - 2), v81[1165 - (820 + 342)]));
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[3 - 1]][v79[v81[251 - (56 + 192)]]] = v79[v81[627 - (615 + 8)]];
								v73 = v73 + (4 - 3);
								v81 = v69[v73];
								v79[v81[2]] = v81[3];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[7 - 4]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v81[2 + 1];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[2]] = v81[1320 - (1193 + 124)];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v6291 = v81[2 - 0];
								v79[v6291] = v79[v6291](v13(v79, v6291 + (1 - 0), v81[3]));
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2 + 0]][v79[v81[403 - (88 + 312)]]] = v79[v81[990 - (415 + 571)]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v81[13 - 10];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[10 - 7]];
								v73 = v73 + (1803 - (61 + 1741));
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[4 - 1];
								v73 = v73 + (1928 - (699 + 1228));
								v81 = v69[v73];
								v79[v81[6 - 4]] = v81[3 + 0];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v6291 = v81[5 - 3];
								v79[v6291] = v79[v6291](v13(v79, v6291 + (172 - (78 + 93)), v81[6 - 3]));
								v73 = v73 + (763 - (523 + 239));
								v81 = v69[v73];
								v79[v81[1151 - (41 + 1108)]][v79[v81[3]]] = v79[v81[3 + 1]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]] = v81[3];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 - 0]] = v79[v81[3 + 0]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1593 - (712 + 879)]] = v81[3];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[1 + 2];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v6291 = v81[7 - 5];
								v79[v6291] = v79[v6291](v13(v79, v6291 + (1 - 0), v81[1 + 2]));
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[5 - 3]][v79[v81[7 - 4]]] = v79[v81[4]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]] = v81[1984 - (1887 + 94)];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[1 + 1]] = v79[v81[3]];
								v73 = v73 + (375 - (364 + 10));
								v81 = v69[v73];
								v79[v81[1383 - (1364 + 17)]] = v81[1 + 2];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]] = v81[2 + 1];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v6291 = v81[7 - 5];
								v79[v6291] = v79[v6291](v13(v79, v6291 + (3 - 2), v81[1953 - (290 + 1660)]));
								v73 = v73 + (1275 - (891 + 383));
								v81 = v69[v73];
								v79[v81[2]][v79[v81[2 + 1]]] = v79[v81[825 - (757 + 64)]];
								v73 = v73 + (1220 - (730 + 489));
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[3];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[306 - (131 + 173)]] = v79[v81[1088 - (841 + 244)]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[600 - (341 + 256)];
								v73 = v73 + (1082 - (344 + 737));
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[3 + 0];
								v73 = v73 + (1656 - (1111 + 544));
								v81 = v69[v73];
								v6291 = v81[5 - 3];
								v79[v6291] = v79[v6291](v13(v79, v6291 + (1096 - (105 + 990)), v81[637 - (91 + 543)]));
								v73 = v73 + (294 - (109 + 184));
								v81 = v69[v73];
								v79[v81[1 + 1]][v79[v81[3 + 0]]] = v79[v81[3 + 1]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[7 - 4];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[1364 - (1212 + 150)]] = v79[v81[1124 - (355 + 766)]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[875 - (13 + 860)]] = v81[8 - 5];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1902 - (1837 + 63)]] = v81[7 - 4];
								v73 = v73 + (183 - (74 + 108));
								v81 = v69[v73];
								v6291 = v81[2 + 0];
								v79[v6291] = v79[v6291](v13(v79, v6291 + 1 + 0, v81[4 - 1]));
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[156 - (41 + 113)]][v79[v81[5 - 2]]] = v79[v81[1 + 3]];
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[3 + 0];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v79[v81[3 - 0]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[391 - (287 + 102)]] = v81[2 + 1];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v81[7 - 4];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v6291 = v81[1 + 1];
								v79[v6291] = v79[v6291](v13(v79, v6291 + 1, v81[4 - 1]));
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[1983 - (1334 + 647)]][v79[v81[3 + 0]]] = v79[v81[1504 - (748 + 752)]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2 - 0]] = v81[1 + 2];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[2 - 0]] = v79[v81[3 + 0]];
								v73 = v73 + (1064 - (360 + 703));
								v81 = v69[v73];
								v79[v81[4 - 2]] = v81[7 - 4];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[2 + 1];
								v73 = v73 + 1;
								v81 = v69[v73];
								v6291 = v81[1 + 1];
								v79[v6291] = v79[v6291](v13(v79, v6291 + 1, v81[8 - 5]));
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]][v79[v81[5 - 2]]] = v79[v81[11 - 7]];
								v73 = v73 + (1089 - (419 + 669));
								v81 = v69[v73];
								v79[v81[951 - (761 + 188)]] = v81[10 - 7];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2 + 0]] = v79[v81[3]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[3];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]] = v81[1 + 2];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v6291 = v81[2];
								v79[v6291] = v79[v6291](v13(v79, v6291 + 1 + 0, v81[820 - (471 + 346)]));
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]][v79[v81[1419 - (832 + 584)]]] = v79[v81[1 + 3]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[3];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[1772 - (1132 + 637)]];
								v73 = v73 + (847 - (540 + 306));
								v81 = v69[v73];
								v79[v81[2 - 0]] = v81[3 + 0];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v81[2 + 1];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v6291 = v81[1 + 1];
								v79[v6291] = v79[v6291](v13(v79, v6291 + (2 - 1), v81[1 + 2]));
								v73 = v73 + (521 - (128 + 392));
								v81 = v69[v73];
								v79[v81[1 + 1]][v79[v81[3]]] = v79[v81[539 - (329 + 206)]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v81[1 + 2];
								v73 = v73 + (751 - (443 + 307));
								v81 = v69[v73];
								v79[v81[1 + 1]] = v79[v81[3 + 0]];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[3];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]] = v81[3 + 0];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v6291 = v81[1 + 1];
								v79[v6291] = v79[v6291](v13(v79, v6291 + 1 + 0, v81[13 - 10]));
								v73 = v73 + (1054 - (329 + 724));
								v81 = v69[v73];
								v79[v81[66 - (11 + 53)]][v79[v81[11 - 8]]] = v79[v81[399 - (195 + 200)]];
							else
								v79[v81[1 + 1]] = {};
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[3 + 0];
								v73 = v73 + (1741 - (1213 + 527));
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[3]][v79[v81[8 - 4]]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1255 - (735 + 518)]] = {};
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[3 - 1]] = v81[8 - 5];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[1 + 2]][v79[v81[865 - (717 + 144)]]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]] = v81[3] ~= (0 - 0);
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v79[v81[472 - (185 + 285)]][v79[v81[403 - (253 + 147)]]] = v79[v81[4]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[1732 - (1721 + 8)];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1697 - (1669 + 26)]] = v79[v81[1 + 2]][v79[v81[10 - 6]]];
							end
						elseif ((v82 > (1729 - (363 + 977))) or (2910 >= 3046)) then
							local v6381 = 600 - (100 + 500);
							local v6382;
							while true do
								if (v6381 == (3 - 0)) then
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v73 = v81[10 - 7];
									break;
								end
								if (v6381 == 1) then
									v6382 = v81[3 - 1];
									v79[v6382] = v79[v6382](v13(v79, v6382 + (2 - 1), v81[11 - 8]));
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v6381 = 2;
								end
								if (v6381 == 0) then
									v6382 = nil;
									v79[v81[1885 - (837 + 1046)]] = v79[v81[3 + 0]][v81[6 - 2]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v6381 = 119 - (32 + 86);
								end
								if ((v6381 == (5 - 3)) or (2253 > 2457)) then
									v79[v81[2]] = v79[v81[439 - (341 + 95)]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]] = v81[6 - 3];
									v6381 = 1 + 2;
								end
							end
						else
							local v6383 = 0 + 0;
							local v6384;
							local v6385;
							while true do
								if (v6383 == (6 - 2)) then
									v81 = v69[v73];
									v6385 = v81[1856 - (1272 + 582)];
									v79[v6385] = v79[v6385](v13(v79, v6385 + 1, v81[859 - (525 + 331)]));
									v73 = v73 + 1;
									v6383 = 5;
								end
								if ((v6383 == 1) or (2864 == 4220)) then
									v79[v6385 + 1] = v6384;
									v79[v6385] = v6384[v81[3 + 1]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v6383 = 2;
								end
								if ((v6383 == 0) or (3218 >= 4846)) then
									v6384 = nil;
									v6385 = nil;
									v6385 = v81[2];
									v6384 = v79[v81[1 + 2]];
									v6383 = 2 - 1;
								end
								if (2 == v6383) then
									v79[v81[2]] = v64[v81[3]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[7 - 5]] = v79[v81[1054 - (885 + 166)]][v81[2 + 2]];
									v6383 = 722 - (611 + 108);
								end
								if (v6383 == 5) then
									v81 = v69[v73];
									if v79[v81[2]] then
										v73 = v73 + 1;
									else
										v73 = v81[5 - 2];
									end
									break;
								end
								if (v6383 == (1875 - (138 + 1734))) then
									v73 = v73 + (1893 - (1372 + 520));
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[205 - (123 + 79)]][v81[1483 - (257 + 1222)]];
									v73 = v73 + (114 - (74 + 39));
									v6383 = 3 + 1;
								end
							end
						end
					elseif (v82 <= 397) then
						if ((v82 <= 393) or (4735 < 1193)) then
							if (v82 <= (920 - 529)) then
								local v830 = v70[v81[1782 - (1604 + 175)]];
								local v831;
								local v832 = {};
								v831 = v10({}, {__index=function(v965, v966)
									local v967 = 0;
									local v968;
									while true do
										if ((637 < 1616) and ((0 - 0) == v967)) then
											v968 = v832[v966];
											return v968[1 + 0][v968[4 - 2]];
										end
									end
								end,__newindex=function(v969, v970, v971)
									local v972 = 0;
									local v973;
									while true do
										if ((v972 == (116 - (115 + 1))) or (1958 < 1924)) then
											v973 = v832[v970];
											v973[1 + 0][v973[1143 - (503 + 638)]] = v971;
											break;
										end
									end
								end});
								for v974 = 1, v81[446 - (347 + 95)] do
									local v975 = 0 - 0;
									local v976;
									while true do
										if ((316 < 1141) and (v975 == 0)) then
											v73 = v73 + (2 - 1);
											v976 = v69[v73];
											v975 = 1 + 0;
										end
										if ((2237 < 4786) and (v975 == 1)) then
											if (v976[104 - (20 + 83)] == (339 + 33)) then
												v832[v974 - (4 - 3)] = {v79,v976[10 - 7]};
											else
												v832[v974 - (2 - 1)] = {v63,v976[1239 - (596 + 640)]};
											end
											v78[#v78 + (3 - 2)] = v832;
											break;
										end
									end
								end
								v79[v81[459 - (191 + 266)]] = v29(v830, v831, v64);
							elseif ((v82 > (415 - (19 + 4))) or (2298 <= 1879)) then
								local v6386 = 1222 - (336 + 886);
								local v6387;
								while true do
									if ((v6386 == 0) or (1098 < 799)) then
										v6387 = nil;
										v79[v81[2 - 0]] = v79[v81[7 - 4]][v81[6 - 2]];
										v73 = v73 + (1172 - (1148 + 23));
										v81 = v69[v73];
										v79[v81[757 - (44 + 711)]] = v79[v81[2 + 1]];
										v73 = v73 + (1894 - (46 + 1847));
										v6386 = 1;
									end
									if (v6386 == 5) then
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[639 - (308 + 329)]] = v64[v81[2 + 1]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2 - 0]] = v79[v81[434 - (297 + 134)]][v81[3 + 1]];
										break;
									end
									if (v6386 == (1 - 0)) then
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[2 + 1]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[1 + 1]] = v79[v81[2 + 1]];
										v73 = v73 + (2 - 1);
										v6386 = 1978 - (1429 + 547);
									end
									if (v6386 == (7 - 5)) then
										v81 = v69[v73];
										v79[v81[4 - 2]] = v79[v81[1858 - (1484 + 371)]];
										v73 = v73 + (866 - (665 + 200));
										v81 = v69[v73];
										v79[v81[1 + 1]] = v63[v81[2 + 1]];
										v73 = v73 + 1;
										v6386 = 3;
									end
									if (v6386 == (1135 - (960 + 171))) then
										v81 = v69[v73];
										v79[v81[1 + 1]] = v81[536 - (360 + 173)] ~= (1486 - (1412 + 74));
										v73 = v73 + 1;
										v81 = v69[v73];
										v6387 = v81[455 - (129 + 324)];
										v79[v6387](v13(v79, v6387 + (867 - (430 + 436)), v81[4 - 1]));
										v6386 = 3 + 2;
									end
									if ((v6386 == (8 - 5)) or (1014 >= 2306)) then
										v81 = v69[v73];
										v79[v81[3 - 1]] = v63[v81[8 - 5]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[1701 - (328 + 1371)]] = v79[v81[3 + 0]][v81[6 - 2]];
										v73 = v73 + (3 - 2);
										v6386 = 1299 - (685 + 610);
									end
								end
							else
								local v6388 = 0 - 0;
								local v6389;
								while true do
									if (v6388 == 0) then
										v6389 = v81[170 - (42 + 126)];
										do
											return v13(v79, v6389, v6389 + v81[6 - 3]);
										end
										break;
									end
								end
							end
						elseif (v82 <= (374 + 21)) then
							if ((1718 <= 4738) and (v82 == 394)) then
								v79[v81[4 - 2]] = v79[v81[3 + 0]] / v79[v81[46 - (20 + 22)]];
							else
								v79[v81[1191 - (171 + 1018)]][v79[v81[3]]] = v79[v81[4 + 0]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[3 + 0];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[8 - 5]][v79[v81[4]]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1230 - (638 + 590)]] = v81[14 - 11];
								v73 = v73 + (627 - (345 + 281));
								v81 = v69[v73];
								v79[v81[621 - (276 + 343)]][v79[v81[1134 - (580 + 551)]]] = v79[v81[3 + 1]];
								v73 = v73 + (1726 - (903 + 822));
								v81 = v69[v73];
								v79[v81[5 - 3]] = v81[3];
								v73 = v73 + (1983 - (1647 + 335));
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[3]][v79[v81[7 - 3]]];
								v73 = v73 + (1417 - (1394 + 22));
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[2 + 1];
								v73 = v73 + (379 - (91 + 287));
								v81 = v69[v73];
								v79[v81[4 - 2]][v79[v81[8 - 5]]] = v79[v81[11 - 7]];
								v73 = v73 + (538 - (186 + 351));
								v81 = v69[v73];
								v79[v81[2]] = v81[8 - 5];
							end
						elseif (v82 > (1561 - (835 + 330))) then
							local v6410 = 1937 - (64 + 1873);
							local v6411;
							while true do
								if (v6410 == (0 - 0)) then
									v6411 = nil;
									v79[v81[7 - 5]] = v63[v81[273 - (231 + 39)]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v6410 = 1;
								end
								if (v6410 == 3) then
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									if ((4600 > 2596) and (v79[v81[9 - 7]] ~= v79[v81[1438 - (547 + 887)]])) then
										v73 = v73 + 1;
									else
										v73 = v81[7 - 4];
									end
									break;
								end
								if (v6410 == (7 - 5)) then
									v79[v81[2]] = v63[v81[583 - (523 + 57)]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[3 + 0]][v81[1955 - (1644 + 307)]];
									v6410 = 902 - (809 + 90);
								end
								if (v6410 == (1 - 0)) then
									v6411 = v81[642 - (606 + 34)];
									v79[v6411] = v79[v6411](v79[v6411 + (1 - 0)]);
									v73 = v73 + (1412 - (448 + 963));
									v81 = v69[v73];
									v6410 = 2 + 0;
								end
							end
						else
							local v6412 = 0;
							local v6413;
							local v6414;
							while true do
								if ((4549 > 4261) and (v6412 == 4)) then
									v6414 = v81[2 - 0];
									v6413 = v79[v81[1239 - (787 + 449)]];
									v79[v6414 + (1139 - (973 + 165))] = v6413;
									v79[v6414] = v6413[v79[v81[905 - (403 + 498)]]];
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v6412 = 1 + 4;
								end
								if ((1966 <= 3273) and ((2 + 1) == v6412)) then
									v79[v81[2 + 0]] = v79[v81[1 + 2]][v79[v81[6 - 2]]];
									v73 = v73 + (405 - (11 + 393));
									v81 = v69[v73];
									v79[v81[5 - 3]] = v81[769 - (443 + 323)];
									v73 = v73 + (810 - (89 + 720));
									v81 = v69[v73];
									v6412 = 7 - 3;
								end
								if (v6412 == (1163 - (881 + 277))) then
									v79[v81[1 + 1]] = {};
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[1574 - (513 + 1058)];
									break;
								end
								if ((0 - 0) == v6412) then
									v6413 = nil;
									v6414 = nil;
									v79[v81[5 - 3]][v79[v81[3 + 0]]] = v79[v81[11 - 7]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[4 - 2]] = v81[5 - 2];
									v6412 = 1 + 0;
								end
								if ((v6412 == 2) or (263 >= 2455)) then
									v79[v6414](v13(v79, v6414 + (1156 - (654 + 501)), v81[3 - 0]));
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[702 - (470 + 230)]] = v81[3];
									v73 = v73 + (1017 - (632 + 384));
									v81 = v69[v73];
									v6412 = 12 - 9;
								end
								if (v6412 == (314 - (133 + 180))) then
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[622 - (377 + 243)]] = v79[v81[7 - 4]][v79[v81[14 - 10]]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v6414 = v81[92 - (60 + 30)];
									v6412 = 3 - 1;
								end
							end
						end
					elseif (v82 <= 400) then
						if (v82 <= (832 - (252 + 182))) then
							v79[v81[1 + 1]] = v81[6 - 3] ~= (613 - (382 + 231));
						elseif ((1509 >= 891) and (v82 == 399)) then
							local v6415;
							local v6416;
							v79[v81[1 + 1]] = v79[v81[1570 - (876 + 691)]][v81[4]];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v6416 = v81[2];
							v6415 = v79[v81[3 + 0]];
							v79[v6416 + 1] = v6415;
							v79[v6416] = v6415[v81[7 - 3]];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v6416 = v81[4 - 2];
							v79[v6416] = v79[v6416](v79[v6416 + (4 - 3)]);
							v73 = v73 + 1;
							v81 = v69[v73];
							v6416 = v81[2 + 0];
							v6415 = v79[v81[9 - 6]];
							v79[v6416 + 1 + 0] = v6415;
							v79[v6416] = v6415[v81[10 - 6]];
							v73 = v73 + (1 - 0);
							v81 = v69[v73];
							v79[v81[2]] = v63[v81[3]];
							v73 = v73 + (289 - (194 + 94));
							v81 = v69[v73];
							v79[v81[2]] = v79[v81[3]][v81[4]];
							v73 = v73 + (1110 - (619 + 490));
							v81 = v69[v73];
							v6416 = v81[4 - 2];
							v79[v6416] = v79[v6416](v13(v79, v6416 + 1 + 0, v81[11 - 8]));
							v73 = v73 + (3 - 2);
							v81 = v69[v73];
							if not v79[v81[2 - 0]] then
								v73 = v73 + 1 + 0;
							else
								v73 = v81[3 - 0];
							end
						else
							local v6433;
							v79[v81[2]] = v79[v81[1 + 2]] + v79[v81[13 - 9]];
							v73 = v73 + 1;
							v81 = v69[v73];
							v6433 = v81[1228 - (527 + 699)];
							v79[v6433] = v79[v6433](v13(v79, v6433 + (3 - 2), v81[1746 - (1552 + 191)]));
							v73 = v73 + (174 - (30 + 143));
							v81 = v69[v73];
							v79[v81[1457 - (1396 + 59)]][v79[v81[3]]] = v79[v81[4]];
							v73 = v73 + (1254 - (273 + 980));
							v81 = v69[v73];
							v79[v81[1 + 1]] = v81[1 + 2];
							v73 = v73 + (3 - 2);
							v81 = v69[v73];
							v79[v81[2]] = v81[383 - (346 + 34)];
							v73 = v73 + (2 - 1);
							v81 = v69[v73];
							v79[v81[5 - 3]][v79[v81[809 - (761 + 45)]]] = v79[v81[4]];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[1 + 1]] = v81[5 - 2];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[2 + 0]] = v64[v81[382 - (285 + 94)]];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[847 - (716 + 129)]] = v81[6 - 3];
							v73 = v73 + (1 - 0);
							v81 = v69[v73];
							v79[v81[1 + 1]] = v79[v81[3 + 0]][v79[v81[2 + 2]]];
						end
					elseif ((v82 <= 402) or (4533 < 890)) then
						if ((v82 > (248 + 153)) or (3944 < 597)) then
							local v6450 = v81[4 - 2];
							v79[v6450](v13(v79, v6450 + (1897 - (1389 + 507)), v74));
						else
							v79[v81[1742 - (1102 + 638)]][v79[v81[6 - 3]]] = v79[v81[4]];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[2]] = v81[3 + 0];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[1801 - (304 + 1495)]] = v79[v81[3 + 0]][v79[v81[3 + 1]]];
							v73 = v73 + (1037 - (932 + 104));
							v81 = v69[v73];
							v79[v81[9 - 7]] = v64[v81[3]];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[36 - (22 + 12)]] = v81[9 - 6];
							v73 = v73 + (701 - (297 + 403));
							v81 = v69[v73];
							v79[v81[2 + 0]] = v79[v81[3]][v79[v81[827 - (600 + 223)]]];
							v73 = v73 + (1879 - (1614 + 264));
							v81 = v69[v73];
							if v79[v81[1835 - (751 + 1082)]] then
								v73 = v73 + (2 - 1);
							else
								v73 = v81[1 + 2];
							end
						end
					elseif (v82 == (1499 - 1096)) then
						local v6464 = 0 + 0;
						local v6465;
						while true do
							if (((18 + 3) == v6464) or (186 == 1026)) then
								v6465 = v81[1 + 1];
								v79[v6465] = v79[v6465](v13(v79, v6465 + (1 - 0), v81[51 - (39 + 9)]));
								v73 = v73 + (228 - (4 + 223));
								v81 = v69[v73];
								v79[v81[354 - (216 + 136)]][v79[v81[6 - 3]]] = v79[v81[11 - 7]];
								v73 = v73 + (1812 - (1703 + 108));
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[1 + 2];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v6464 = 1040 - (25 + 993);
							end
							if (v6464 == (9 - 5)) then
								v79[v6465] = v79[v6465](v13(v79, v6465 + (2 - 1), v81[2 + 1]));
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[7 - 5]][v79[v81[1 + 2]]] = v79[v81[9 - 5]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[5 - 3]] = v81[1913 - (562 + 1348)];
								v73 = v73 + (1613 - (615 + 997));
								v81 = v69[v73];
								v79[v81[2 + 0]] = v79[v81[3]];
								v6464 = 1043 - (327 + 711);
							end
							if (v6464 == (1733 - (263 + 1467))) then
								v79[v81[4 - 2]] = v79[v81[807 - (507 + 297)]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]] = v81[3];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[5 - 3]] = v81[1416 - (518 + 895)];
								v73 = v73 + 1;
								v81 = v69[v73];
								v6465 = v81[2];
								v6464 = 4;
							end
							if (v6464 == (979 - (628 + 334))) then
								v73 = v73 + 1;
								v81 = v69[v73];
								v6465 = v81[1603 - (1415 + 186)];
								v79[v6465] = v79[v6465](v13(v79, v6465 + (1645 - (523 + 1121)), v81[1 + 2]));
								v73 = v73 + (743 - (111 + 631));
								v81 = v69[v73];
								v79[v81[2 + 0]][v79[v81[3]]] = v79[v81[10 - 6]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]] = v81[1 + 2];
								v6464 = 18;
							end
							if (((450 - (107 + 342)) == v6464) or (4046 < 908)) then
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[3 + 0]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[6 - 4]] = v81[339 - (239 + 97)];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[2]] = v81[3];
								v73 = v73 + (1995 - (1697 + 297));
								v81 = v69[v73];
								v6464 = 1 + 1;
							end
							if (v6464 == (0 - 0)) then
								v6465 = nil;
								v6465 = v81[3 - 1];
								v79[v6465] = v79[v6465](v13(v79, v6465 + (1521 - (684 + 836)), v81[870 - (64 + 803)]));
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1 + 1]][v79[v81[3 + 0]]] = v79[v81[4 + 0]];
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v79[v81[7 - 5]] = v81[3];
								v73 = v73 + (1 - 0);
								v6464 = 1 - 0;
							end
							if (v6464 == (2 - 0)) then
								v6465 = v81[4 - 2];
								v79[v6465] = v79[v6465](v13(v79, v6465 + (3 - 2), v81[771 - (307 + 461)]));
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[2]][v79[v81[1591 - (799 + 789)]]] = v79[v81[804 - (595 + 205)]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v81[4 - 1];
								v73 = v73 + (1237 - (1163 + 73));
								v81 = v69[v73];
								v6464 = 5 - 2;
							end
							if ((v6464 == (983 - (101 + 869))) or (579 > 3196)) then
								v81 = v69[v73];
								v79[v81[2 - 0]] = v81[3];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v6465 = v81[1 + 1];
								v79[v6465] = v79[v6465](v13(v79, v6465 + 1 + 0, v81[1247 - (373 + 871)]));
								v73 = v73 + (1047 - (407 + 639));
								v81 = v69[v73];
								v79[v81[2]][v79[v81[1848 - (1461 + 384)]]] = v79[v81[581 - (115 + 462)]];
								v73 = v73 + 1;
								v6464 = 14;
							end
							if (v6464 == (662 - (134 + 519))) then
								v79[v81[2 + 0]] = v81[9 - 6];
								v73 = v73 + (1852 - (438 + 1413));
								v81 = v69[v73];
								v79[v81[7 - 5]] = v81[1285 - (632 + 650)];
								v73 = v73 + 1;
								v81 = v69[v73];
								v6465 = v81[4 - 2];
								v79[v6465] = v79[v6465](v13(v79, v6465 + (1010 - (65 + 944)), v81[3 + 0]));
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v6464 = 10;
							end
							if (v6464 == (24 - 14)) then
								v79[v81[1 + 1]][v79[v81[10 - 7]]] = v79[v81[4 + 0]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2 - 0]] = v81[2 + 1];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[3 + 0]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[1675 - (261 + 1412)]] = v81[6 - 3];
								v6464 = 5 + 6;
							end
							if ((v6464 == (855 - (306 + 530))) or (1869 >= 1881)) then
								v81 = v69[v73];
								v6465 = v81[2 - 0];
								v79[v6465] = v79[v6465](v13(v79, v6465 + (296 - (185 + 110)), v81[2 + 1]));
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]][v79[v81[1 + 2]]] = v79[v81[1842 - (742 + 1096)]];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[2 - 0]] = v81[3];
								v73 = v73 + 1 + 0;
								v6464 = 12 + 8;
							end
							if (v6464 == (40 - 20)) then
								v81 = v69[v73];
								v79[v81[2 - 0]] = v79[v81[10 - 7]];
								v73 = v73 + (1283 - (640 + 642));
								v81 = v69[v73];
								v79[v81[2]] = v81[4 - 1];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[6 - 4]] = v81[3];
								v73 = v73 + 1;
								v81 = v69[v73];
								v6464 = 30 - 9;
							end
							if (v6464 == (86 - 64)) then
								v79[v81[1267 - (645 + 620)]] = v79[v81[5 - 2]];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[2]] = v81[1 + 2];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[1 + 2];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v6465 = v81[1918 - (465 + 1451)];
								v6464 = 3 + 20;
							end
							if ((v6464 == (1535 - (1130 + 381))) or (1187 > 2200)) then
								v73 = v73 + (1763 - (1275 + 487));
								v81 = v69[v73];
								v79[v81[260 - (16 + 242)]] = v81[1981 - (1685 + 293)];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[3 - 1]] = v81[2 + 1];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v6465 = v81[451 - (391 + 58)];
								v79[v6465] = v79[v6465](v13(v79, v6465 + (1798 - (269 + 1528)), v81[3 - 0]));
								v6464 = 25;
							end
							if (v6464 == 16) then
								v79[v81[1 + 1]] = v81[10 - 7];
								v73 = v73 + (1363 - (451 + 911));
								v81 = v69[v73];
								v79[v81[899 - (16 + 881)]] = v79[v81[1657 - (1138 + 516)]];
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v79[v81[2 - 0]] = v81[1 + 2];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[462 - (414 + 46)]] = v81[3];
								v6464 = 5 + 12;
							end
							if ((481 == 481) and ((9 + 3) == v6464)) then
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v81[1414 - (526 + 885)];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[1 + 1]] = v79[v81[1957 - (89 + 1865)]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v81[3];
								v73 = v73 + 1 + 0;
								v6464 = 7 + 6;
							end
							if (v6464 == (33 - 22)) then
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[14 - 11];
								v73 = v73 + (1090 - (940 + 149));
								v81 = v69[v73];
								v6465 = v81[6 - 4];
								v79[v6465] = v79[v6465](v13(v79, v6465 + (1369 - (951 + 417)), v81[3]));
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[3 - 1]][v79[v81[908 - (187 + 718)]]] = v79[v81[9 - 5]];
								v6464 = 3 + 9;
							end
							if (v6464 == (416 - (49 + 361))) then
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]][v79[v81[2 + 1]]] = v79[v81[11 - 7]];
								v73 = v73 + (4 - 3);
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[3];
								v73 = v73 + (4 - 3);
								v81 = v69[v73];
								v79[v81[5 - 3]] = v79[v81[3 + 0]];
								v73 = v73 + (577 - (301 + 275));
								v6464 = 3 + 4;
							end
							if ((v6464 == (1 + 4)) or (605 > 2584)) then
								v73 = v73 + (162 - (32 + 129));
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[3 + 0];
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v79[v81[2]] = v81[1409 - (71 + 1335)];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v6465 = v81[2];
								v79[v6465] = v79[v6465](v13(v79, v6465 + 1 + 0, v81[1 + 2]));
								v6464 = 6;
							end
							if ((1977 > 941) and (v6464 == (27 - 19))) then
								v81 = v69[v73];
								v79[v81[1235 - (421 + 812)]][v79[v81[2 + 1]]] = v79[v81[1 + 3]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1663 - (1136 + 525)]] = v81[139 - (27 + 109)];
								v73 = v73 + (1951 - (1614 + 336));
								v81 = v69[v73];
								v79[v81[2 + 0]] = v79[v81[6 - 3]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v6464 = 956 - (106 + 841);
							end
							if ((2 + 23) == v6464) then
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[2]][v79[v81[5 - 2]]] = v79[v81[10 - 6]];
								break;
							end
							if (v6464 == (18 + 5)) then
								v79[v6465] = v79[v6465](v13(v79, v6465 + (4 - 3), v81[1707 - (172 + 1532)]));
								v73 = v73 + (942 - (8 + 933));
								v81 = v69[v73];
								v79[v81[1 + 1]][v79[v81[1847 - (317 + 1527)]]] = v79[v81[3 + 1]];
								v73 = v73 + (1373 - (223 + 1149));
								v81 = v69[v73];
								v79[v81[2]] = v81[307 - (267 + 37)];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[1 + 1]] = v79[v81[3]];
								v6464 = 40 - 16;
							end
							if (v6464 == (23 - 16)) then
								v81 = v69[v73];
								v79[v81[2]] = v81[3];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 - 0]] = v81[3];
								v73 = v73 + 1;
								v81 = v69[v73];
								v6465 = v81[1 + 1];
								v79[v6465] = v79[v6465](v13(v79, v6465 + (159 - (96 + 62)), v81[515 - (405 + 107)]));
								v73 = v73 + (136 - (63 + 72));
								v6464 = 1426 - (1153 + 265);
							end
							if (v6464 == (48 - 30)) then
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[1283 - (205 + 1076)]] = v79[v81[1120 - (51 + 1066)]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[5 - 3]] = v81[1897 - (1602 + 292)];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]] = v81[638 - (34 + 601)];
								v73 = v73 + (100 - (73 + 26));
								v6464 = 51 - 32;
							end
							if ((2767 <= 3408) and ((23 - 8) == v6464)) then
								v79[v81[2]] = v81[3];
								v73 = v73 + 1;
								v81 = v69[v73];
								v6465 = v81[5 - 3];
								v79[v6465] = v79[v6465](v13(v79, v6465 + 1 + 0, v81[3]));
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1638 - (1098 + 538)]][v79[v81[254 - (92 + 159)]]] = v79[v81[3 + 1]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v6464 = 53 - 37;
							end
							if ((931 == 931) and (v6464 == 14)) then
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[3 + 0];
								v73 = v73 + (1824 - (441 + 1382));
								v81 = v69[v73];
								v79[v81[1515 - (315 + 1198)]] = v79[v81[1828 - (997 + 828)]];
								v73 = v73 + (1851 - (1192 + 658));
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[3 + 0];
								v73 = v73 + 1;
								v81 = v69[v73];
								v6464 = 10 + 5;
							end
						end
					else
						v79[v81[470 - (307 + 161)]] = v79[v81[6 - 3]][v79[v81[1 + 3]]];
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[3 - 1]] = v81[1 + 2] ~= (0 + 0);
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[1955 - (9 + 1944)]][v79[v81[1 + 2]]] = v79[v81[4]];
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[1 + 1]] = v81[1 + 2];
						v73 = v73 + (1 - 0);
						v81 = v69[v73];
						v79[v81[610 - (151 + 457)]] = v79[v81[2 + 1]][v79[v81[3 + 1]]];
						v73 = v73 + (2 - 1);
						v81 = v69[v73];
						for v8230 = v81[1 + 1], v81[12 - 9] do
							v79[v8230] = nil;
						end
						v73 = v73 + (1919 - (1752 + 166));
						v81 = v69[v73];
						v79[v81[2 + 0]][v79[v81[3 + 0]]] = v79[v81[4]];
						v73 = v73 + (3 - 2);
						v81 = v69[v73];
						v79[v81[842 - (651 + 189)]] = {};
						v73 = v73 + (1350 - (1183 + 166));
						v81 = v69[v73];
						v79[v81[4 - 2]] = v81[3];
						v73 = v73 + (4 - 3);
						v81 = v69[v73];
						v79[v81[1 + 1]] = v79[v81[8 - 5]][v79[v81[1887 - (368 + 1515)]]];
					end
				elseif (v82 <= (133 + 285)) then
					if (v82 <= (2315 - (1818 + 86))) then
						if (v82 <= 407) then
							if ((4041 > 491) and (v82 <= (1007 - 602))) then
								local v835;
								local v836;
								v79[v81[1181 - (652 + 527)]] = v63[v81[3]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2 - 0]] = v79[v81[3 + 0]][v81[186 - (13 + 169)]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[6 - 4]] = v79[v81[3]][v79[v81[7 - 3]]];
								v73 = v73 + (320 - (197 + 122));
								v81 = v69[v73];
								v836 = v81[1 + 1];
								v79[v836] = v79[v836]();
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[1631 - (1165 + 464)]] = v63[v81[3 + 0]];
								v73 = v73 + (1541 - (635 + 905));
								v81 = v69[v73];
								v79[v81[1650 - (772 + 876)]] = v79[v81[1 + 2]] - v79[v81[2 + 2]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[4 - 2]] = v63[v81[6 - 3]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v835 = v79[v81[4]];
								if (v835 or (2067 >= 4693)) then
									v73 = v73 + (1 - 0);
								else
									v79[v81[1 + 1]] = v835;
									v73 = v81[1798 - (1641 + 154)];
								end
							elseif ((4939 >= 3367) and (v82 > (196 + 210))) then
								local v6483;
								local v6484;
								v6484 = v81[2 + 0];
								v6483 = v79[v81[7 - 4]];
								v79[v6484 + 1] = v6483;
								v79[v6484] = v6483[v81[1252 - (1224 + 24)]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v6484 = v81[2 + 0];
								v79[v6484] = v79[v6484](v79[v6484 + 1 + 0]);
								v73 = v73 + (1632 - (739 + 892));
								v81 = v69[v73];
								v79[v81[1487 - (122 + 1363)]] = v79[v81[3]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v6484 = v81[1621 - (672 + 947)];
								v6483 = v79[v81[514 - (260 + 251)]];
								v79[v6484 + 1] = v6483;
								v79[v6484] = v6483[v81[788 - (385 + 399)]];
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v79[v81[9 - 7]] = v63[v81[160 - (130 + 27)]];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[4 - 2]] = v79[v81[3]][v81[6 - 2]];
								v73 = v73 + (1671 - (811 + 859));
								v81 = v69[v73];
								v6484 = v81[3 - 1];
								v79[v6484] = v79[v6484](v13(v79, v6484 + 1, v81[202 - (34 + 165)]));
								v73 = v73 + 1;
								v81 = v69[v73];
								if (v79[v81[8 - 6]] or (3220 < 686)) then
									v73 = v73 + 1 + 0;
								else
									v73 = v81[191 - (176 + 12)];
								end
							else
								local v6501;
								v79[v81[146 - (132 + 12)]] = v79[v81[475 - (37 + 435)]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]] = v81[633 - (414 + 216)];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[3 + 0];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v6501 = v81[41 - (38 + 1)];
								v79[v6501] = v79[v6501](v13(v79, v6501 + (3 - 2), v81[3]));
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1 + 1]][v79[v81[14 - 11]]] = v79[v81[377 - (332 + 41)]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[490 - (281 + 207)]] = v81[1282 - (185 + 1094)];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[3]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[4 - 2]] = v81[1618 - (678 + 937)];
								v73 = v73 + (190 - (40 + 149));
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[1207 - (310 + 894)];
								v73 = v73 + (514 - (206 + 307));
								v81 = v69[v73];
								v6501 = v81[2];
								v79[v6501] = v79[v6501](v13(v79, v6501 + (2 - 1), v81[3]));
								v73 = v73 + (682 - (185 + 496));
								v81 = v69[v73];
								v79[v81[2]][v79[v81[3]]] = v79[v81[3 + 1]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[761 - (651 + 108)]] = v81[6 - 3];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[5 - 2]];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[2]] = v81[11 - 8];
								v73 = v73 + (1946 - (1940 + 5));
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[3];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v6501 = v81[4 - 2];
								v79[v6501] = v79[v6501](v13(v79, v6501 + (52 - (38 + 13)), v81[3]));
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]][v79[v81[3]]] = v79[v81[4]];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[7 - 4];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[6 - 4]] = v79[v81[4 - 1]];
								v73 = v73 + (1928 - (1865 + 62));
								v81 = v69[v73];
								v79[v81[2]] = v81[1 + 2];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[3 - 1]] = v81[3];
								v73 = v73 + 1;
								v81 = v69[v73];
								v6501 = v81[1210 - (434 + 774)];
								v79[v6501] = v79[v6501](v13(v79, v6501 + (1140 - (231 + 908)), v81[5 - 2]));
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v79[v81[2]][v79[v81[3 + 0]]] = v79[v81[4]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[5 - 2];
								v73 = v73 + (754 - (677 + 76));
								v81 = v69[v73];
								v79[v81[1539 - (1241 + 296)]] = v79[v81[1471 - (6 + 1462)]];
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v79[v81[2 - 0]] = v81[3 + 0];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[8 - 5];
								v73 = v73 + (671 - (591 + 79));
								v81 = v69[v73];
								v6501 = v81[2];
								v79[v6501] = v79[v6501](v13(v79, v6501 + (3 - 2), v81[615 - (267 + 345)]));
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[3 - 1]][v79[v81[3]]] = v79[v81[1 + 3]];
								v73 = v73 + (729 - (316 + 412));
								v81 = v69[v73];
								v79[v81[1522 - (206 + 1314)]] = v81[265 - (122 + 140)];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v79[v81[1662 - (961 + 698)]];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[2]] = v81[3 + 0];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[7 - 5]] = v81[3];
								v73 = v73 + 1;
								v81 = v69[v73];
								v6501 = v81[2];
								v79[v6501] = v79[v6501](v13(v79, v6501 + (2 - 1), v81[1 + 2]));
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v79[v81[2]][v79[v81[1718 - (1235 + 480)]]] = v79[v81[4]];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[918 - (266 + 650)]] = v81[3];
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[1 + 2]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[414 - (119 + 293)]] = v81[1 + 2];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[2]] = v81[2 + 1];
								v73 = v73 + (1360 - (176 + 1183));
								v81 = v69[v73];
								v6501 = v81[2];
								v79[v6501] = v79[v6501](v13(v79, v6501 + 1 + 0, v81[2 + 1]));
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]][v79[v81[8 - 5]]] = v79[v81[4]];
								v73 = v73 + (195 - (135 + 59));
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[3];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[1 + 1]] = v79[v81[3 - 0]];
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v79[v81[1397 - (614 + 781)]] = v81[1 + 2];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[2 + 1];
								v73 = v73 + (1461 - (323 + 1137));
								v81 = v69[v73];
								v6501 = v81[2 + 0];
								v79[v6501] = v79[v6501](v13(v79, v6501 + (2 - 1), v81[1441 - (142 + 1296)]));
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1616 - (652 + 962)]][v79[v81[3]]] = v79[v81[2 + 2]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]] = v81[3];
								v73 = v73 + (4 - 3);
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[9 - 6]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[6 - 4]] = v81[2 + 1];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[1417 - (937 + 477)];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v6501 = v81[1 + 1];
								v79[v6501] = v79[v6501](v13(v79, v6501 + 1, v81[1 + 2]));
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v79[v81[2]][v79[v81[5 - 2]]] = v79[v81[656 - (104 + 548)]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[263 - (198 + 63)]] = v81[3];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[4 - 2]] = v79[v81[8 - 5]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]] = v81[2 + 1];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1686 - (261 + 1423)]] = v81[1 + 2];
								v73 = v73 + (1159 - (1018 + 140));
								v81 = v69[v73];
								v6501 = v81[2 + 0];
								v79[v6501] = v79[v6501](v13(v79, v6501 + (1029 - (507 + 521)), v81[3 + 0]));
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[5 - 3]][v79[v81[215 - (143 + 69)]]] = v79[v81[1372 - (1325 + 43)]];
								v73 = v73 + (1754 - (641 + 1112));
								v81 = v69[v73];
								v79[v81[2]] = v81[5 - 2];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[1 + 1]] = v79[v81[1857 - (1005 + 849)]];
								v73 = v73 + (276 - (91 + 184));
								v81 = v69[v73];
								v79[v81[2]] = v81[3 + 0];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v81[36 - (15 + 18)];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v6501 = v81[822 - (518 + 302)];
								v79[v6501] = v79[v6501](v13(v79, v6501 + 1 + 0, v81[1 + 2]));
								v73 = v73 + (433 - (74 + 358));
								v81 = v69[v73];
								v79[v81[7 - 5]][v79[v81[3]]] = v79[v81[4]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[1193 - (566 + 625)]] = v81[14 - 11];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1297 - (688 + 607)]] = v79[v81[3 + 0]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[4 - 2]] = v81[3 + 0];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[297 - (119 + 176)]] = v81[3];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v6501 = v81[380 - (207 + 171)];
								v79[v6501] = v79[v6501](v13(v79, v6501 + 1, v81[2 + 1]));
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]][v79[v81[3]]] = v79[v81[4]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[3];
								v73 = v73 + (1511 - (147 + 1363));
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[3]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v81[1239 - (552 + 684)];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[3];
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v6501 = v81[2];
								v79[v6501] = v79[v6501](v13(v79, v6501 + (186 - (28 + 157)), v81[3]));
								v73 = v73 + (401 - (342 + 58));
								v81 = v69[v73];
								v79[v81[1 + 1]][v79[v81[2 + 1]]] = v79[v81[4 + 0]];
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v79[v81[348 - (186 + 160)]] = v81[1259 - (378 + 878)];
								v73 = v73 + (1431 - (583 + 847));
								v81 = v69[v73];
								v79[v81[1626 - (435 + 1189)]] = v79[v81[3]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[5 - 3]] = v81[3 - 0];
							end
						elseif (v82 <= (312 + 97)) then
							if (v82 == (1972 - (1158 + 406))) then
								local v6587;
								local v6588;
								v6588 = v81[1979 - (1377 + 600)];
								v6587 = v79[v81[315 - (93 + 219)]];
								v79[v6588 + 1 + 0] = v6587;
								v79[v6588] = v6587[v81[6 - 2]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]] = v63[v81[11 - 8]];
								v73 = v73 + (100 - (17 + 82));
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[1705 - (1221 + 481)]][v81[2 + 2]];
								v73 = v73 + (1891 - (908 + 982));
								v81 = v69[v73];
								v6588 = v81[2 + 0];
								v79[v6588] = v79[v6588](v13(v79, v6588 + 1 + 0, v81[1695 - (947 + 745)]));
								v73 = v73 + (4 - 3);
								v81 = v69[v73];
								if v79[v81[2]] then
									v73 = v73 + 1 + 0;
								else
									v73 = v81[1868 - (10 + 1855)];
								end
							else
								local v6599;
								v79[v81[1111 - (832 + 277)]] = #v79[v81[3]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[3 - 1]] = v64[v81[3 + 0]];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[3 + 0]][v81[426 - (343 + 79)]];
								v73 = v73 + (995 - (77 + 917));
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[1 + 2]] * v81[568 - (24 + 540)];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[29 - (25 + 2)]] = v79[v81[5 - 2]] * v81[304 - (76 + 224)];
								v73 = v73 + 1;
								v81 = v69[v73];
								v6599 = v81[2 - 0];
								v79[v6599] = v79[v6599](v13(v79, v6599 + 1, v81[1344 - (576 + 765)]));
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[1121 - (765 + 353)]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[882 - (817 + 63)]] = v81[1 + 2];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v73 = v81[933 - (311 + 619)];
							end
						elseif ((2205 < 4176) and (v82 == 410)) then
							local v6613 = 0 + 0;
							local v6614;
							local v6615;
							while true do
								if ((4757 == 4757) and (v6613 == (0 - 0))) then
									v6614 = nil;
									v6615 = nil;
									v79[v81[2]][v79[v81[3 + 0]]] = v79[v81[10 - 6]];
									v73 = v73 + (3 - 2);
									v6613 = 1223 - (744 + 478);
								end
								if ((v6613 == (3 + 2)) or (2987 < 623)) then
									v81 = v69[v73];
									v79[v81[1 + 1]] = v81[1882 - (904 + 975)];
									v73 = v73 + 1;
									v81 = v69[v73];
									v6613 = 21 - 15;
								end
								if ((1998 < 4933) and (v6613 == (2 + 6))) then
									v81 = v69[v73];
									v79[v81[2]] = v81[6 - 3];
									break;
								end
								if ((4290 > 2978) and (v6613 == (3 + 4))) then
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2 - 0]] = {};
									v73 = v73 + 1;
									v6613 = 8;
								end
								if ((2868 <= 4346) and (v6613 == (3 - 1))) then
									v79[v81[1 + 1]] = v79[v81[13 - 10]][v79[v81[4]]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v6615 = v81[5 - 3];
									v6613 = 14 - 11;
								end
								if (v6613 == (1 + 3)) then
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[3]][v79[v81[4]]];
									v73 = v73 + (679 - (153 + 525));
									v6613 = 5;
								end
								if ((145 - (64 + 78)) == v6613) then
									v79[v6615](v13(v79, v6615 + (1 - 0), v81[2 + 1]));
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2 - 0]] = v81[2 + 1];
									v6613 = 1871 - (977 + 890);
								end
								if (((22 - 16) == v6613) or (4379 == 1250)) then
									v6615 = v81[2];
									v6614 = v79[v81[3]];
									v79[v6615 + 1] = v6614;
									v79[v6615] = v6614[v79[v81[1317 - (960 + 353)]]];
									v6613 = 1 + 6;
								end
								if (v6613 == (1 + 0)) then
									v81 = v69[v73];
									v79[v81[2]] = v81[713 - (517 + 193)];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v6613 = 2;
								end
							end
						else
							v79[v81[2]] = v79[v81[6 - 3]][v81[419 - (407 + 8)]];
							v73 = v73 + (2 - 1);
							v81 = v69[v73];
							v79[v81[2]] = v79[v81[3 + 0]][v81[4 + 0]];
							v73 = v73 + (1 - 0);
							v81 = v69[v73];
							v79[v81[1 + 1]][v81[574 - (322 + 249)]] = v79[v81[12 - 8]];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[3 - 1]][v81[3 + 0]] = v81[13 - 9];
							v73 = v73 + (2 - 1);
							v81 = v69[v73];
							v79[v81[2 - 0]][v81[1085 - (452 + 630)]] = v79[v81[10 - 6]];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[1 + 1]] = v81[942 - (282 + 657)];
							v73 = v73 + 1;
							v81 = v69[v73];
							v73 = v81[2 + 1];
						end
					elseif ((3939 == 3939) and (v82 <= (529 - (57 + 58)))) then
						if (v82 <= (726 - 314)) then
							local v852;
							v79[v81[280 - (171 + 107)]] = v79[v81[1 + 2]][v81[4 + 0]];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[5 - 3]] = v63[v81[3]];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[2]] = v79[v81[1 + 2]][v81[4]];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v852 = v81[9 - 7];
							v79[v852] = v79[v852](v79[v852 + 1]);
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[2]] = v79[v81[3]];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[2]] = v64[v81[3]];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[18 - (10 + 6)]] = v79[v81[3]][v81[4 + 0]];
							v73 = v73 + (1 - 0);
							v81 = v69[v73];
							v79[v81[1 + 1]] = v81[3];
							v73 = v73 + (2 - 1);
							v81 = v69[v73];
							v79[v81[815 - (655 + 158)]] = v81[309 - (274 + 32)];
							v73 = v73 + (1240 - (888 + 351));
							v81 = v69[v73];
							v79[v81[2 + 0]] = v81[3];
							v73 = v73 + (2 - 1);
							v81 = v69[v73];
							v79[v81[2]] = v81[2 + 1];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v852 = v81[4 - 2];
							v79[v852] = v79[v852](v13(v79, v852 + 1 + 0, v81[3 + 0]));
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[2 - 0]][v81[1437 - (32 + 1402)]] = v79[v81[3 + 1]];
							v73 = v73 + (1 - 0);
							v81 = v69[v73];
							v79[v81[2 - 0]] = v64[v81[72 - (47 + 22)]];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[2]] = v79[v81[655 - (182 + 470)]][v81[9 - 5]];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[2]] = v81[2 + 1];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[2]] = v81[8 - 5];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[2]] = v81[1085 - (727 + 355)];
							v73 = v73 + (2 - 1);
							v81 = v69[v73];
							v79[v81[2]] = v81[1624 - (1361 + 260)];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v852 = v81[1541 - (1203 + 336)];
							v79[v852] = v79[v852](v13(v79, v852 + (2 - 1), v81[3]));
							v73 = v73 + (2 - 1);
							v81 = v69[v73];
							v79[v81[2 - 0]][v81[3 + 0]] = v79[v81[4 + 0]];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[7 - 5]] = v64[v81[1495 - (49 + 1443)]];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[2]] = v79[v81[3 + 0]][v81[4]];
							v73 = v73 + (3 - 2);
							v81 = v69[v73];
							v79[v81[2]] = v81[11 - 8];
							v73 = v73 + (2 - 1);
							v81 = v69[v73];
							v79[v81[1327 - (501 + 824)]] = v81[3 + 0];
							v73 = v73 + (1 - 0);
							v81 = v69[v73];
							v79[v81[2]] = v81[96 - (16 + 77)];
							v73 = v73 + (3 - 2);
							v81 = v69[v73];
							v79[v81[2 - 0]] = v81[7 - 4];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v852 = v81[4 - 2];
							v79[v852] = v79[v852](v13(v79, v852 + 1, v81[3 + 0]));
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[5 - 3]][v81[3]] = v79[v81[1724 - (6 + 1714)]];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[1 + 1]][v81[3]] = v81[60 - (18 + 38)];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[3 - 1]][v81[3]] = v81[4];
							v73 = v73 + (267 - (77 + 189));
							v81 = v69[v73];
							v79[v81[2 - 0]][v81[3]] = v79[v81[4 + 0]];
							v73 = v73 + (1601 - (1175 + 425));
							v81 = v69[v73];
							v79[v81[6 - 4]] = v63[v81[5 - 2]];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[224 - (35 + 187)]][v81[3 + 0]] = v79[v81[4]];
							v73 = v73 + (1403 - (784 + 618));
							v81 = v69[v73];
							v79[v81[1578 - (695 + 881)]] = v64[v81[300 - (114 + 183)]];
							v73 = v73 + (2 - 1);
							v81 = v69[v73];
							v79[v81[1 + 1]] = v79[v81[8 - 5]][v81[12 - 8]];
							v73 = v73 + (1280 - (846 + 433));
							v81 = v69[v73];
							v79[v81[1 + 1]] = v63[v81[7 - 4]];
							v73 = v73 + (505 - (369 + 135));
							v81 = v69[v73];
							v79[v81[2 + 0]] = v79[v81[3]][v81[37 - (12 + 21)]];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v852 = v81[1299 - (293 + 1004)];
							v79[v852] = v79[v852](v79[v852 + (2 - 1)]);
							v73 = v73 + (320 - (106 + 213));
							v81 = v69[v73];
							v79[v81[8 - 6]] = v79[v81[472 - (214 + 255)]];
							v73 = v73 + (1931 - (974 + 956));
							v81 = v69[v73];
							v79[v81[2]] = v64[v81[565 - (404 + 158)]];
							v73 = v73 + (2 - 1);
							v81 = v69[v73];
							v79[v81[2]] = v79[v81[673 - (558 + 112)]][v81[4]];
							v73 = v73 + (1 - 0);
							v81 = v69[v73];
							v79[v81[1682 - (177 + 1503)]] = v81[9 - 6];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[4 - 2]] = v81[8 - 5];
							v73 = v73 + 1;
							v81 = v69[v73];
							v852 = v81[3 - 1];
							v79[v852] = v79[v852](v13(v79, v852 + (3 - 2), v81[620 - (573 + 44)]));
							v73 = v73 + (2 - 1);
							v81 = v69[v73];
							v79[v81[4 - 2]][v81[1365 - (1041 + 321)]] = v79[v81[1 + 3]];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[6 - 4]] = v81[3];
						elseif ((v82 > (780 - 367)) or (3949 >= 4885)) then
							local v6629 = 0 - 0;
							local v6630;
							local v6631;
							while true do
								if (v6629 == (1822 - (1443 + 375))) then
									v6631 = v81[592 - (111 + 479)];
									v6630 = v79[v81[3]];
									v79[v6631 + 1] = v6630;
									v79[v6631] = v6630[v81[9 - 5]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v6629 = 3 + 2;
								end
								if ((495 - (41 + 448)) == v6629) then
									v79[v81[1816 - (225 + 1589)]] = v81[9 - 6];
									break;
								end
								if (v6629 == 5) then
									v79[v81[1041 - (820 + 219)]] = v63[v81[2 + 1]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1358 - (985 + 371)]] = v79[v81[3]][v81[8 - 4]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v6629 = 6;
								end
								if ((2 + 0) == v6629) then
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1749 - (1240 + 507)]] = v81[3];
									v73 = v73 + 1;
									v81 = v69[v73];
									v6631 = v81[2 + 0];
									v6629 = 2 + 1;
								end
								if (v6629 == (2 + 1)) then
									v79[v6631] = v79[v6631](v13(v79, v6631 + (3 - 2), v81[2 + 1]));
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[613 - (489 + 122)]] = v79[v81[8 - 5]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v6629 = 4;
								end
								if ((v6629 == (0 + 0)) or (1623 < 120)) then
									v6630 = nil;
									v6631 = nil;
									v79[v81[2]] = v79[v81[1 + 2]][v81[4]];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v6631 = v81[1 + 1];
									v6629 = 1 + 0;
								end
								if ((555 <= 3804) and (v6629 == (2 - 1))) then
									v6630 = v79[v81[14 - 11]];
									v79[v6631 + (2 - 1)] = v6630;
									v79[v6631] = v6630[v81[1 + 3]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v81[3];
									v6629 = 2;
								end
							end
						else
							v79[v81[1349 - (833 + 514)]] = v63[v81[3 + 0]];
						end
					elseif (v82 <= (2361 - (725 + 1220))) then
						if (v82 > (1518 - 1103)) then
							local v6634;
							v79[v81[55 - (9 + 44)]] = v79[v81[3 + 0]][v81[4]];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[1 + 1]] = v63[v81[9 - 6]];
							v73 = v73 + (1 - 0);
							v81 = v69[v73];
							v79[v81[950 - (929 + 19)]] = v79[v81[14 - 11]][v81[16 - 12]];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[2]] = v79[v81[2 + 1]][v81[4]];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[51 - (38 + 11)]] = v79[v81[3]][v81[6 - 2]];
							v73 = v73 + (1 - 0);
							v81 = v69[v73];
							v79[v81[2]] = v79[v81[1 + 2]] - v81[4];
							v73 = v73 + (1 - 0);
							v81 = v69[v73];
							v79[v81[570 - (290 + 278)]] = v79[v81[1514 - (1318 + 193)]] / v81[1 + 3];
							v73 = v73 + (946 - (441 + 504));
							v81 = v69[v73];
							v6634 = v81[1 + 1];
							v79[v6634] = v79[v6634](v79[v6634 + (1 - 0)]);
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[209 - (183 + 24)]] = v79[v81[7 - 4]];
							v73 = v73 + (1 - 0);
							v81 = v69[v73];
							v79[v81[2]] = v64[v81[1343 - (1009 + 331)]];
						else
							local v6652 = 0 + 0;
							local v6653;
							local v6654;
							while true do
								if (v6652 == (8 + 0)) then
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[712 - (513 + 196)]][v79[v81[4]]];
									break;
								end
								if (v6652 == (0 - 0)) then
									v6653 = nil;
									v6654 = nil;
									v79[v81[2 + 0]] = v79[v81[3]][v81[201 - (87 + 110)]];
									v73 = v73 + 1 + 0;
									v6652 = 510 - (202 + 307);
								end
								if ((3 + 1) == v6652) then
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1544 - (526 + 1016)]] = v79[v81[3]][v81[13 - 9]];
									v73 = v73 + 1;
									v6652 = 2 + 3;
								end
								if (v6652 == (6 + 1)) then
									v79[v81[125 - (46 + 77)]] = v63[v81[10 - 7]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1 + 1]] = v79[v81[2 + 1]][v81[4]];
									v6652 = 8;
								end
								if (v6652 == 2) then
									v81 = v69[v73];
									v6654 = v81[1 + 1];
									v6653 = v79[v81[10 - 7]];
									v79[v6654 + 1] = v6653;
									v6652 = 1666 - (185 + 1478);
								end
								if (v6652 == (1 - 0)) then
									v81 = v69[v73];
									v6654 = v81[2];
									v79[v6654] = v79[v6654](v13(v79, v6654 + 1 + 0, v81[9 - 6]));
									v73 = v73 + 1;
									v6652 = 9 - 7;
								end
								if ((4 + 1) == v6652) then
									v81 = v69[v73];
									v6654 = v81[2];
									v79[v6654] = v79[v6654](v13(v79, v6654 + (865 - (756 + 108)), v81[3]));
									v73 = v73 + 1;
									v6652 = 1342 - (1200 + 136);
								end
								if ((2145 <= 4687) and (v6652 == (3 + 3))) then
									v81 = v69[v73];
									v79[v81[3 - 1]] = v64[v81[6 - 3]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v6652 = 12 - 5;
								end
								if (v6652 == 3) then
									v79[v6654] = v6653[v81[3 + 1]];
									v73 = v73 + (1986 - (1042 + 943));
									v81 = v69[v73];
									v79[v81[1 + 1]] = v63[v81[1024 - (666 + 355)]];
									v6652 = 1288 - (423 + 861);
								end
							end
						end
					elseif (v82 > (49 + 368)) then
						local v6655 = 0;
						local v6656;
						local v6657;
						while true do
							if (v6655 == (610 - (394 + 215))) then
								for v12414 = v6656 + 1 + 0, v81[4] do
									v6657 = v6657 .. v79[v12414];
								end
								v79[v81[2]] = v6657;
								break;
							end
							if (v6655 == 0) then
								v6656 = v81[1849 - (543 + 1303)];
								v6657 = v79[v6656];
								v6655 = 1 + 0;
							end
						end
					else
						local v6658;
						local v6659;
						v79[v81[1 + 1]][v79[v81[3]]] = v79[v81[1070 - (707 + 359)]];
						v73 = v73 + (1 - 0);
						v81 = v69[v73];
						v79[v81[9 - 7]] = v81[3 + 0];
						v73 = v73 + (617 - (32 + 584));
						v81 = v69[v73];
						v79[v81[277 - (42 + 233)]] = v79[v81[4 - 1]][v79[v81[9 - 5]]];
						v73 = v73 + (1316 - (46 + 1269));
						v81 = v69[v73];
						v6659 = v81[6 - 4];
						v79[v6659](v13(v79, v6659 + 1 + 0, v81[5 - 2]));
						v73 = v73 + (1257 - (1247 + 9));
						v81 = v69[v73];
						v79[v81[3 - 1]] = v81[3];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[3 - 1]] = v79[v81[2 + 1]][v79[v81[2 + 2]]];
						v73 = v73 + (4 - 3);
						v81 = v69[v73];
						v79[v81[4 - 2]] = v81[2 + 1];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v6659 = v81[2];
						v6658 = v79[v81[3 + 0]];
						v79[v6659 + 1 + 0] = v6658;
						v79[v6659] = v6658[v79[v81[4]]];
						v73 = v73 + (4 - 3);
						v81 = v69[v73];
						v79[v81[1075 - (202 + 871)]] = {};
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[2]] = v81[1565 - (1289 + 273)];
					end
				elseif (v82 <= (29 + 396)) then
					if (v82 <= (785 - 364)) then
						if (v82 <= (2397 - (425 + 1553))) then
							local v919 = 715 - (392 + 323);
							local v920;
							while true do
								if (v919 == (611 - (565 + 43))) then
									v81 = v69[v73];
									v920 = v81[1 + 1];
									v79[v920] = v79[v920](v13(v79, v920 + (2 - 1), v81[3]));
									v919 = 11 - 7;
								end
								if (v919 == 9) then
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1129 - (906 + 221)]] = v79[v81[3 - 0]][v79[v81[1120 - (926 + 190)]]];
									break;
								end
								if (v919 == (1610 - (487 + 1119))) then
									v73 = v73 + (726 - (174 + 551));
									v81 = v69[v73];
									v79[v81[6 - 4]][v79[v81[4 - 1]]] = v79[v81[4 + 0]];
									v919 = 1939 - (1047 + 887);
								end
								if (v919 == 0) then
									v920 = nil;
									v79[v81[2]] = v81[1 + 2];
									v73 = v73 + 1;
									v919 = 3 - 2;
								end
								if (v919 == (4 + 2)) then
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[222 - (28 + 191)]][v79[v81[4]]];
									v919 = 7;
								end
								if (v919 == (2 + 3)) then
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1 + 1]] = v81[1230 - (613 + 614)];
									v919 = 2 + 4;
								end
								if (v919 == (1 + 0)) then
									v81 = v69[v73];
									v79[v81[6 - 4]] = v81[4 - 1];
									v73 = v73 + (1293 - (134 + 1158));
									v919 = 4 - 2;
								end
								if (v919 == 7) then
									v73 = v73 + (1865 - (1541 + 323));
									v81 = v69[v73];
									v79[v81[1172 - (1120 + 50)]] = v64[v81[1 + 2]];
									v919 = 238 - (148 + 82);
								end
								if (2 == v919) then
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[2 + 1];
									v73 = v73 + 1;
									v919 = 3;
								end
								if (v919 == 8) then
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2]] = v81[3];
									v919 = 20 - 11;
								end
							end
						elseif (v82 > 420) then
							local v6681;
							local v6682;
							local v6681, v6683;
							local v6684;
							local v6685;
							v79[v81[2 + 0]] = v64[v81[111 - (8 + 100)]];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[6 - 4]] = v64[v81[2 + 1]];
							v73 = v73 + 1;
							v81 = v69[v73];
							v6685 = v81[4 - 2];
							v6684 = v79[v81[1769 - (594 + 1172)]];
							v79[v6685 + (2 - 1)] = v6684;
							v79[v6685] = v6684[v81[9 - 5]];
							v73 = v73 + (227 - (133 + 93));
							v81 = v69[v73];
							v6685 = v81[1416 - (471 + 943)];
							v6681, v6683 = v72(v79[v6685](v79[v6685 + (446 - (178 + 267))]));
							v74 = (v6683 + v6685) - (3 - 2);
							v6682 = 0 + 0;
							for v8261 = v6685, v74 do
								v6682 = v6682 + 1;
								v79[v8261] = v6681[v6682];
							end
							v73 = v73 + (3 - 2);
							v81 = v69[v73];
							v6685 = v81[2];
							v6681 = {v79[v6685](v13(v79, v6685 + (265 - (212 + 52)), v74))};
							v6682 = 0;
							for v8264 = v6685, v81[4] do
								local v8265 = 0 - 0;
								while true do
									if ((v8265 == 0) or (3625 <= 840)) then
										v6682 = v6682 + (2 - 1);
										v79[v8264] = v6681[v6682];
										break;
									end
								end
							end
							v73 = v73 + 1;
							v81 = v69[v73];
							v73 = v81[2 + 1];
						else
							local v6699;
							v79[v81[8 - 6]] = v79[v81[620 - (497 + 120)]];
							v73 = v73 + (1237 - (405 + 831));
							v81 = v69[v73];
							v79[v81[1 + 1]] = v81[6 - 3];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[2 + 0]] = v81[1446 - (1003 + 440)];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v6699 = v81[2 + 0];
							v79[v6699] = v79[v6699](v13(v79, v6699 + (1733 - (1120 + 612)), v81[2 + 1]));
							v73 = v73 + (1560 - (875 + 684));
							v81 = v69[v73];
							v79[v81[983 - (119 + 862)]][v79[v81[5 - 2]]] = v79[v81[1340 - (683 + 653)]];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[2]] = v81[9 - 6];
							v73 = v73 + (1 - 0);
							v81 = v69[v73];
							v79[v81[1057 - (662 + 393)]] = v79[v81[3]];
							v73 = v73 + (1 - 0);
							v81 = v69[v73];
							v79[v81[1 + 1]] = v81[3 + 0];
							v73 = v73 + (3 - 2);
							v81 = v69[v73];
							v79[v81[3 - 1]] = v81[3];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v6699 = v81[1844 - (1003 + 839)];
							v79[v6699] = v79[v6699](v13(v79, v6699 + (186 - (94 + 91)), v81[1592 - (766 + 823)]));
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[1922 - (1804 + 116)]][v79[v81[3 + 0]]] = v79[v81[1872 - (649 + 1219)]];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[1 + 1]] = v81[7 - 4];
							v73 = v73 + (1763 - (960 + 802));
							v81 = v69[v73];
							v79[v81[1 + 1]] = v79[v81[3]];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[2 + 0]] = v81[2 + 1];
							v73 = v73 + (2 - 1);
							v81 = v69[v73];
							v79[v81[1446 - (89 + 1355)]] = v81[1991 - (1690 + 298)];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v6699 = v81[2];
							v79[v6699] = v79[v6699](v13(v79, v6699 + (1695 - (708 + 986)), v81[744 - (28 + 713)]));
							v73 = v73 + (1642 - (1118 + 523));
							v81 = v69[v73];
							v79[v81[3 - 1]][v79[v81[3 + 0]]] = v79[v81[1 + 3]];
							v73 = v73 + (744 - (321 + 422));
							v81 = v69[v73];
							v79[v81[1 + 1]] = v81[6 - 3];
							v73 = v73 + (2 - 1);
							v81 = v69[v73];
							v79[v81[2]] = v79[v81[3]];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[4 - 2]] = v81[5 - 2];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[3 - 1]] = v81[1849 - (769 + 1077)];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v6699 = v81[2 + 0];
							v79[v6699] = v79[v6699](v13(v79, v6699 + 1, v81[3]));
							v73 = v73 + (3 - 2);
							v81 = v69[v73];
							v79[v81[2]][v79[v81[4 - 1]]] = v79[v81[8 - 4]];
							v73 = v73 + (1940 - (1864 + 75));
							v81 = v69[v73];
							v79[v81[1 + 1]] = v81[5 - 2];
							v73 = v73 + (4 - 3);
							v81 = v69[v73];
							v79[v81[3 - 1]] = v79[v81[3]];
							v73 = v73 + (596 - (34 + 561));
							v81 = v69[v73];
							v79[v81[7 - 5]] = v81[4 - 1];
							v73 = v73 + (1 - 0);
							v81 = v69[v73];
							v79[v81[397 - (238 + 157)]] = v81[3];
							v73 = v73 + (506 - (274 + 231));
							v81 = v69[v73];
							v6699 = v81[2 - 0];
							v79[v6699] = v79[v6699](v13(v79, v6699 + (2 - 1), v81[10 - 7]));
							v73 = v73 + (2 - 1);
							v81 = v69[v73];
							v79[v81[2]][v79[v81[4 - 1]]] = v79[v81[4]];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[2]] = v81[3];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[5 - 3]] = v79[v81[3]];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[2]] = v81[3];
							v73 = v73 + (1042 - (568 + 473));
							v81 = v69[v73];
							v79[v81[1 + 1]] = v81[2 + 1];
							v73 = v73 + 1;
							v81 = v69[v73];
							v6699 = v81[5 - 3];
							v79[v6699] = v79[v6699](v13(v79, v6699 + 1 + 0, v81[100 - (12 + 85)]));
							v73 = v73 + (426 - (139 + 286));
							v81 = v69[v73];
							v79[v81[2 + 0]][v79[v81[11 - 8]]] = v79[v81[7 - 3]];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[7 - 5]] = v81[3 + 0];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[2 + 0]] = v79[v81[99 - (67 + 29)]];
							v73 = v73 + (1 - 0);
							v81 = v69[v73];
							v79[v81[7 - 5]] = v81[3 + 0];
							v73 = v73 + (694 - (126 + 567));
							v81 = v69[v73];
							v79[v81[1 + 1]] = v81[3];
							v73 = v73 + 1;
							v81 = v69[v73];
							v6699 = v81[2];
							v79[v6699] = v79[v6699](v13(v79, v6699 + (1 - 0), v81[3]));
							v73 = v73 + (1051 - (682 + 368));
							v81 = v69[v73];
							v79[v81[5 - 3]][v79[v81[1788 - (509 + 1276)]]] = v79[v81[13 - 9]];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[5 - 3]] = v81[6 - 3];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[2 + 0]] = v79[v81[3]];
							v73 = v73 + (2 - 1);
							v81 = v69[v73];
							v79[v81[3 - 1]] = v81[880 - (223 + 654)];
							v73 = v73 + (3 - 2);
							v81 = v69[v73];
							v79[v81[7 - 5]] = v81[3];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v6699 = v81[3 - 1];
							v79[v6699] = v79[v6699](v13(v79, v6699 + 1 + 0, v81[1 + 2]));
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[3 - 1]][v79[v81[3]]] = v79[v81[478 - (281 + 193)]];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[3 - 1]] = v81[3];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[418 - (270 + 146)]] = v79[v81[1450 - (44 + 1403)]];
							v73 = v73 + (4 - 3);
							v81 = v69[v73];
							v79[v81[5 - 3]] = v81[3 + 0];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[2]] = v81[3];
							v73 = v73 + (704 - (394 + 309));
							v81 = v69[v73];
							v6699 = v81[2];
							v79[v6699] = v79[v6699](v13(v79, v6699 + 1, v81[3]));
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[2 - 0]][v79[v81[3]]] = v79[v81[2 + 2]];
							v73 = v73 + (828 - (597 + 230));
							v81 = v69[v73];
							v79[v81[2]] = v81[3];
							v73 = v73 + (2 - 1);
							v81 = v69[v73];
							v79[v81[2 - 0]] = v79[v81[7 - 4]];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[2]] = v81[2 + 1];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[2 + 0]] = v81[1514 - (178 + 1333)];
							v73 = v73 + 1;
							v81 = v69[v73];
							v6699 = v81[7 - 5];
							v79[v6699] = v79[v6699](v13(v79, v6699 + (3 - 2), v81[5 - 2]));
							v73 = v73 + (3 - 2);
							v81 = v69[v73];
							v79[v81[2]][v79[v81[186 - (18 + 165)]]] = v79[v81[1286 - (57 + 1225)]];
							v73 = v73 + (800 - (152 + 647));
							v81 = v69[v73];
							v79[v81[1610 - (572 + 1036)]] = v81[1030 - (1006 + 21)];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[6 - 4]] = v79[v81[3]];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[1327 - (461 + 864)]] = v81[247 - (217 + 27)];
							v73 = v73 + (935 - (126 + 808));
							v81 = v69[v73];
							v79[v81[99 - (45 + 52)]] = v81[3 + 0];
							v73 = v73 + 1;
							v81 = v69[v73];
							v6699 = v81[85 - (42 + 41)];
							v79[v6699] = v79[v6699](v13(v79, v6699 + 1, v81[3]));
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[2]][v79[v81[6 - 3]]] = v79[v81[4]];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[988 - (585 + 401)]] = v81[1957 - (283 + 1671)];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[2]] = v79[v81[8 - 5]];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[1 + 1]] = v81[1051 - (161 + 887)];
							v73 = v73 + (1865 - (106 + 1758));
							v81 = v69[v73];
							v79[v81[1522 - (1387 + 133)]] = v81[3 + 0];
							v73 = v73 + 1;
							v81 = v69[v73];
							v6699 = v81[3 - 1];
							v79[v6699] = v79[v6699](v13(v79, v6699 + 1, v81[3]));
							v73 = v73 + (2 - 1);
							v81 = v69[v73];
							v79[v81[450 - (277 + 171)]][v79[v81[2 + 1]]] = v79[v81[4]];
							v73 = v73 + (650 - (462 + 187));
							v81 = v69[v73];
							v79[v81[497 - (105 + 390)]] = v81[3];
							v73 = v73 + (574 - (332 + 241));
							v81 = v69[v73];
							v79[v81[657 - (625 + 30)]] = v79[v81[3]];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[2]] = v81[2 + 1];
							v73 = v73 + (2 - 1);
							v81 = v69[v73];
							v79[v81[2]] = v81[3 + 0];
							v73 = v73 + (1 - 0);
							v81 = v69[v73];
							v6699 = v81[2];
							v79[v6699] = v79[v6699](v13(v79, v6699 + 1 + 0, v81[3]));
							v73 = v73 + (20 - (7 + 12));
							v81 = v69[v73];
							v79[v81[1038 - (568 + 468)]][v79[v81[8 - 5]]] = v79[v81[2 + 2]];
							v73 = v73 + 1;
							v81 = v69[v73];
							v79[v81[2]] = v81[1 + 2];
							v73 = v73 + (1938 - (777 + 1160));
							v81 = v69[v73];
							v79[v81[30 - (15 + 13)]] = v79[v81[3]];
							v73 = v73 + (873 - (394 + 478));
							v81 = v69[v73];
							v79[v81[1835 - (1564 + 269)]] = v81[1028 - (693 + 332)];
						end
					elseif ((1560 >= 1291) and (v82 <= (1399 - (610 + 366)))) then
						if (v82 == (715 - 293)) then
							local v6780 = 847 - (665 + 182);
							while true do
								if ((2336 >= 948) and (v6780 == (22 - 16))) then
									v79[v81[2]][v81[212 - (135 + 74)]] = v79[v81[5 - 1]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v73 = v81[47 - (28 + 16)];
									break;
								end
								if ((3912 > 1409) and (v6780 == (7 - 3))) then
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1 + 1]] = v63[v81[3]];
									v73 = v73 + (2 - 1);
									v6780 = 1373 - (34 + 1334);
								end
								if ((1 - 0) == v6780) then
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2 + 0]] = v79[v81[5 - 2]][v81[342 - (268 + 70)]];
									v73 = v73 + 1 + 0;
									v6780 = 1 + 1;
								end
								if (v6780 == (0 - 0)) then
									v79[v81[372 - (48 + 322)]] = v79[v81[952 - (265 + 684)]][v81[16 - 12]];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[1 + 1]] = v63[v81[11 - 8]];
									v6780 = 1548 - (1490 + 57);
								end
								if ((v6780 == (2 + 1)) or (1569 >= 3728)) then
									v79[v81[3 - 1]] = v63[v81[197 - (92 + 102)]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[3]][v81[19 - 15]];
									v6780 = 1855 - (1618 + 233);
								end
								if (v6780 == (1 + 1)) then
									v81 = v69[v73];
									v79[v81[2 + 0]][v81[3]] = v79[v81[11 - 7]];
									v73 = v73 + (1405 - (441 + 963));
									v81 = v69[v73];
									v6780 = 576 - (296 + 277);
								end
								if ((v6780 == (448 - (206 + 237))) or (2557 >= 4431)) then
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[10 - 7]][v81[4]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v6780 = 6;
								end
							end
						else
							local v6781;
							local v6782;
							v79[v81[2 + 0]][v79[v81[10 - 7]]] = v79[v81[1 + 3]];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[1673 - (1613 + 58)]] = v81[3 + 0];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v79[v81[2 + 0]] = v79[v81[2 + 1]][v79[v81[10 - 6]]];
							v73 = v73 + 1 + 0;
							v81 = v69[v73];
							v6782 = v81[2 + 0];
							v79[v6782](v13(v79, v6782 + (1611 - (365 + 1245)), v81[5 - 2]));
							v73 = v73 + (1413 - (493 + 919));
							v81 = v69[v73];
							v79[v81[2]] = v81[3];
							v73 = v73 + (1085 - (888 + 196));
							v81 = v69[v73];
							v6782 = v81[7 - 5];
							v6781 = v79[v81[1 + 2]];
							v79[v6782 + (1115 - (208 + 906))] = v6781;
							v79[v6782] = v6781[v79[v81[3 + 1]]];
							v73 = v73 + (1466 - (1278 + 187));
							v81 = v69[v73];
							v79[v81[1316 - (796 + 518)]] = {};
							v73 = v73 + (2 - 1);
							v81 = v69[v73];
							v79[v81[1370 - (1219 + 149)]] = v81[3];
							v73 = v73 + (1 - 0);
							v81 = v69[v73];
							v79[v81[1782 - (408 + 1372)]] = v79[v81[1764 - (1153 + 608)]][v79[v81[6 - 2]]];
							v73 = v73 + (1591 - (799 + 791));
							v81 = v69[v73];
							v79[v81[2 + 0]] = v81[1759 - (1365 + 391)];
						end
					elseif (v82 > (920 - 496)) then
						local v6803 = 1321 - (1148 + 173);
						while true do
							if ((v6803 == 0) or (1103 == 4627)) then
								v79[v81[3 - 1]] = v79[v81[1422 - (1388 + 31)]][v81[1897 - (725 + 1168)]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v6803 = 644 - (104 + 539);
							end
							if (v6803 == (164 - (158 + 5))) then
								v79[v81[2]][v81[8 - 5]] = v79[v81[3 + 1]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v6803 = 2;
							end
							if (v6803 == (4 + 0)) then
								v73 = v81[993 - (541 + 449)];
								break;
							end
							if (((1273 - (1004 + 266)) == v6803) or (3829 <= 1552)) then
								v79[v81[2 + 0]][v81[1357 - (241 + 1113)]] = v81[1371 - (550 + 817)];
								v73 = v73 + (1126 - (625 + 500));
								v81 = v69[v73];
								v6803 = 1601 - (1501 + 96);
							end
							if ((v6803 == (2 - 0)) or (211 >= 2440)) then
								v79[v81[1 + 1]] = v63[v81[3]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v6803 = 3 + 0;
							end
						end
					else
						local v6804;
						v79[v81[1 + 1]] = v79[v81[5 - 2]][v81[4]];
						v73 = v73 + (3 - 2);
						v81 = v69[v73];
						v79[v81[5 - 3]] = v81[3];
						v73 = v73 + (1 - 0);
						v81 = v69[v73];
						v79[v81[1777 - (1447 + 328)]] = v81[542 - (262 + 277)];
						v73 = v73 + (1252 - (875 + 376));
						v81 = v69[v73];
						v79[v81[2]] = v81[1 + 2];
						v73 = v73 + (2 - 1);
						v81 = v69[v73];
						v6804 = v81[2];
						v79[v6804] = v79[v6804](v13(v79, v6804 + (2 - 1), v81[3]));
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[4 - 2]][v81[392 - (344 + 45)]] = v79[v81[3 + 1]];
						v73 = v73 + (1887 - (1562 + 324));
						v81 = v69[v73];
						v79[v81[2]][v81[3]] = v81[1 + 3];
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[2 + 0]][v81[2 + 1]] = v79[v81[4]];
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[1942 - (1729 + 211)]] = v64[v81[8 - 5]];
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[712 - (663 + 47)]] = v79[v81[707 - (200 + 504)]][v81[10 - 6]];
						v73 = v73 + (248 - (221 + 26));
						v81 = v69[v73];
						v79[v81[2]] = v63[v81[3 - 0]];
						v73 = v73 + (551 - (402 + 148));
						v81 = v69[v73];
						v79[v81[4 - 2]] = v79[v81[3]][v81[2 + 2]];
						v73 = v73 + (564 - (255 + 308));
						v81 = v69[v73];
						v6804 = v81[6 - 4];
						v79[v6804] = v79[v6804](v79[v6804 + 1 + 0]);
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[2 - 0]] = v79[v81[3]];
						v73 = v73 + (2 - 1);
						v81 = v69[v73];
						v79[v81[1 + 1]] = v81[3];
					end
				elseif (v82 <= (225 + 203)) then
					if (v82 <= (29 + 397)) then
						v79[v81[1 + 1]] = v64[v81[3]];
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[1 + 1]] = v79[v81[3]][v81[1 + 3]];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[1 + 1]] = v79[v81[3]][v81[6 - 2]];
						v73 = v73 + (1156 - (371 + 784));
						v81 = v69[v73];
						v79[v81[2]][v81[2 + 1]] = v79[v81[4]];
						v73 = v73 + (916 - (420 + 495));
						v81 = v69[v73];
						v79[v81[2 + 0]][v81[3]] = v81[1516 - (1104 + 408)];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[4 - 2]] = v64[v81[1 + 2]];
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[950 - (749 + 199)]] = v79[v81[811 - (268 + 540)]][v81[9 - 5]];
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[2]] = v79[v81[3 - 0]][v81[11 - 7]];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						if ((1331 < 3996) and not v79[v81[2]]) then
							v73 = v73 + (576 - (127 + 448));
						else
							v73 = v81[3];
						end
					elseif ((3656 >= 2090) and (v82 > (127 + 300))) then
						local v6833;
						local v6834;
						v79[v81[2]][v79[v81[551 - (411 + 137)]]] = v79[v81[10 - 6]];
						v73 = v73 + 1;
						v81 = v69[v73];
						v6834 = v81[2 + 0];
						v79[v6834] = v79[v6834](v13(v79, v6834 + (218 - (116 + 101)), v81[3 + 0]));
						v73 = v73 + (3 - 2);
						v81 = v69[v73];
						v79[v81[2]][v79[v81[8 - 5]]] = v79[v81[629 - (406 + 219)]];
						v73 = v73 + (463 - (131 + 331));
						v81 = v69[v73];
						v79[v81[4 - 2]] = v64[v81[3]];
						v73 = v73 + (704 - (98 + 605));
						v81 = v69[v73];
						v79[v81[467 - (310 + 155)]] = v81[1827 - (621 + 1203)];
						v73 = v73 + (3 - 2);
						v81 = v69[v73];
						v6834 = v81[5 - 3];
						v6833 = v79[v81[4 - 1]];
						v79[v6834 + (473 - (295 + 177))] = v6833;
						v79[v6834] = v6833[v79[v81[7 - 3]]];
						v73 = v73 + (373 - (178 + 194));
						v81 = v69[v73];
						v79[v81[2 + 0]] = v81[3];
						v73 = v73 + (2 - 1);
						v81 = v69[v73];
						v79[v81[2]] = v79[v81[3 + 0]][v79[v81[3 + 1]]];
						v73 = v73 + (2 - 1);
						v81 = v69[v73];
						v6834 = v81[2];
						v79[v6834] = v79[v6834](v13(v79, v6834 + (1225 - (1197 + 27)), v81[704 - (371 + 330)]));
						v73 = v73 + (4 - 3);
						v81 = v69[v73];
						v79[v81[243 - (125 + 116)]] = v64[v81[1584 - (941 + 640)]];
						v73 = v73 + (2 - 1);
						v81 = v69[v73];
						v79[v81[2]] = v81[3];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v6834 = v81[7 - 5];
						v6833 = v79[v81[3]];
						v79[v6834 + (1504 - (937 + 566))] = v6833;
						v79[v6834] = v6833[v79[v81[718 - (646 + 68)]]];
						v73 = v73 + (4 - 3);
						v81 = v69[v73];
						v79[v81[322 - (284 + 36)]] = v81[2 + 1];
						v73 = v73 + (1 - 0);
						v81 = v69[v73];
						v79[v81[910 - (492 + 416)]] = v79[v81[1 + 2]][v79[v81[4]]];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v6834 = v81[143 - (68 + 73)];
						v79[v6834] = v79[v6834](v13(v79, v6834 + 1, v81[1 + 2]));
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[2 + 0]] = v64[v81[262 - (55 + 204)]];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[1 + 1]] = v81[1 + 2];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v6834 = v81[5 - 3];
						v6833 = v79[v81[3]];
						v79[v6834 + (4 - 3)] = v6833;
						v79[v6834] = v6833[v79[v81[2 + 2]]];
						v73 = v73 + (1619 - (998 + 620));
						v81 = v69[v73];
						v79[v81[1778 - (1129 + 647)]] = v81[3];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[910 - (23 + 885)]] = v79[v81[3 + 0]][v79[v81[2 + 2]]];
						v73 = v73 + (3 - 2);
						v81 = v69[v73];
						v6834 = v81[3 - 1];
						v79[v6834] = v79[v6834](v13(v79, v6834 + 1 + 0, v81[3 + 0]));
						v73 = v73 + (2 - 1);
						v81 = v69[v73];
						v79[v81[1932 - (1528 + 402)]] = v64[v81[6 - 3]];
						v73 = v73 + (1562 - (571 + 990));
						v81 = v69[v73];
						v79[v81[1786 - (94 + 1690)]] = v81[5 - 2];
						v73 = v73 + (549 - (315 + 233));
						v81 = v69[v73];
						v6834 = v81[429 - (307 + 120)];
						v6833 = v79[v81[1 + 2]];
						v79[v6834 + 1] = v6833;
						v79[v6834] = v6833[v79[v81[1 + 3]]];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[2 + 0]] = v81[3];
						v73 = v73 + (2 - 1);
						v81 = v69[v73];
						v79[v81[2 + 0]] = v79[v81[3 + 0]][v79[v81[1676 - (1142 + 530)]]];
						v73 = v73 + (2 - 1);
						v81 = v69[v73];
						v6834 = v81[1722 - (323 + 1397)];
						v79[v6834] = v79[v6834](v13(v79, v6834 + (1667 - (1400 + 266)), v81[533 - (216 + 314)]));
						v73 = v73 + (503 - (201 + 301));
						v81 = v69[v73];
						v79[v81[1646 - (1038 + 606)]] = v64[v81[13 - 10]];
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[2]] = v81[1321 - (161 + 1157)];
						v73 = v73 + (1671 - (1271 + 399));
						v81 = v69[v73];
						v6834 = v81[7 - 5];
						v6833 = v79[v81[3 + 0]];
						v79[v6834 + 1 + 0] = v6833;
						v79[v6834] = v6833[v79[v81[480 - (48 + 428)]]];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[2]] = v81[2 + 1];
						v73 = v73 + (3 - 2);
						v81 = v69[v73];
						v79[v81[166 - (103 + 61)]] = v79[v81[3]][v79[v81[3 + 1]]];
						v73 = v73 + (3 - 2);
						v81 = v69[v73];
						v6834 = v81[1902 - (272 + 1628)];
						v79[v6834] = v79[v6834](v13(v79, v6834 + (1 - 0), v81[43 - (22 + 18)]));
						v73 = v73 + (1 - 0);
						v81 = v69[v73];
						v79[v81[5 - 3]] = v64[v81[8 - 5]];
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[5 - 3]] = v81[7 - 4];
						v73 = v73 + 1;
						v81 = v69[v73];
						v6834 = v81[8 - 6];
						v6833 = v79[v81[481 - (47 + 431)]];
						v79[v6834 + (14 - (9 + 4))] = v6833;
						v79[v6834] = v6833[v79[v81[2 + 2]]];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[2 + 0]] = v81[3];
						v73 = v73 + (1780 - (1373 + 406));
						v81 = v69[v73];
						v79[v81[8 - 6]] = v79[v81[4 - 1]][v79[v81[4]]];
						v73 = v73 + 1;
						v81 = v69[v73];
						v6834 = v81[1 + 1];
						v79[v6834] = v79[v6834](v13(v79, v6834 + (4 - 3), v81[1294 - (351 + 940)]));
						v73 = v73 + (2 - 1);
						v81 = v69[v73];
						v79[v81[2]] = v64[v81[3 + 0]];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[1405 - (1148 + 255)]] = v81[90 - (25 + 62)];
						v73 = v73 + (1590 - (515 + 1074));
						v81 = v69[v73];
						v6834 = v81[1 + 1];
						v6833 = v79[v81[1 + 2]];
						v79[v6834 + (3 - 2)] = v6833;
						v79[v6834] = v6833[v79[v81[2 + 2]]];
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[1472 - (675 + 795)]] = v81[6 - 3];
						v73 = v73 + (505 - (441 + 63));
						v81 = v69[v73];
						v79[v81[777 - (508 + 267)]] = v79[v81[2 + 1]][v79[v81[4]]];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v6834 = v81[3 - 1];
						v79[v6834] = v79[v6834](v13(v79, v6834 + 1 + 0, v81[11 - 8]));
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[2]] = {};
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[2]] = v81[3];
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[2 + 0]] = v79[v81[1 + 2]][v79[v81[3 + 1]]];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[942 - (406 + 534)]] = v81[8 - 5] ~= (1986 - (241 + 1745));
						v73 = v73 + (514 - (232 + 281));
						v81 = v69[v73];
						v79[v81[2 - 0]][v79[v81[1 + 2]]] = v79[v81[17 - 13]];
						v73 = v73 + (3 - 2);
						v81 = v69[v73];
						v79[v81[1 + 1]] = v81[3 + 0];
						v73 = v73 + (56 - (39 + 16));
						v81 = v69[v73];
						v79[v81[2 + 0]] = v79[v81[3]][v79[v81[1 + 3]]];
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[2]] = v81[1003 - (128 + 872)] ~= (0 + 0);
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[1 + 1]][v79[v81[3]]] = v79[v81[1105 - (610 + 491)]];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[2]] = v81[8 - 5];
						v73 = v73 + (1685 - (1099 + 585));
						v81 = v69[v73];
						v79[v81[2]] = v79[v81[1 + 2]][v79[v81[592 - (257 + 331)]]];
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[1 + 1]] = v81[3];
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[2]] = v79[v81[1627 - (376 + 1248)]][v79[v81[8 - 4]]];
						v73 = v73 + (661 - (158 + 502));
						v81 = v69[v73];
						v79[v81[2 + 0]][v79[v81[3]]] = v79[v81[12 - 8]];
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[2 + 0]] = v81[14 - 11];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[1 + 1]] = v79[v81[1 + 2]][v79[v81[15 - 11]]];
						v73 = v73 + (1 - 0);
						v81 = v69[v73];
						v79[v81[9 - 7]] = v81[3];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[6 - 4]][v79[v81[3]]] = v79[v81[516 - (396 + 116)]];
						v73 = v73 + (1282 - (165 + 1116));
						v81 = v69[v73];
						v79[v81[1 + 1]] = v81[245 - (60 + 182)];
						v73 = v73 + (210 - (153 + 56));
						v81 = v69[v73];
						v79[v81[2]] = v79[v81[6 - 3]][v79[v81[1756 - (612 + 1140)]]];
						v73 = v73 + (2 - 1);
						v81 = v69[v73];
						v79[v81[3 - 1]] = v81[3];
						v73 = v73 + (2 - 1);
						v81 = v69[v73];
						v79[v81[2]][v79[v81[4 - 1]]] = v79[v81[3 + 1]];
						v73 = v73 + (470 - (19 + 450));
						v81 = v69[v73];
						v79[v81[5 - 3]] = v81[11 - 8];
						v73 = v73 + (893 - (349 + 543));
						v81 = v69[v73];
						v79[v81[2]] = v79[v81[2 + 1]][v79[v81[4 + 0]]];
						v73 = v73 + (1089 - (1013 + 75));
						v81 = v69[v73];
						v79[v81[2]] = v64[v81[760 - (305 + 452)]];
						v73 = v73 + (69 - (9 + 59));
						v81 = v69[v73];
						v79[v81[582 - (98 + 482)]] = v81[3];
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[2 + 0]] = v79[v81[7 - 4]][v79[v81[1774 - (1350 + 420)]]];
						v73 = v73 + (3 - 2);
						v81 = v69[v73];
						v79[v81[904 - (613 + 289)]] = v81[1 + 2];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[279 - (40 + 237)]] = v81[741 - (735 + 3)];
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[3 - 1]] = v81[5 - 2];
						v73 = v73 + 1;
						v81 = v69[v73];
						v6834 = v81[1679 - (614 + 1063)];
						v79[v6834] = v79[v6834](v13(v79, v6834 + 1 + 0, v81[5 - 2]));
						v73 = v73 + (1439 - (1332 + 106));
						v81 = v69[v73];
						v79[v81[2 + 0]][v79[v81[3]]] = v79[v81[8 - 4]];
						v73 = v73 + (3 - 2);
						v81 = v69[v73];
						v79[v81[1567 - (1139 + 426)]] = v81[5 - 2];
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[1 + 1]] = v79[v81[1185 - (501 + 681)]][v79[v81[7 - 3]]];
						v73 = v73 + (1306 - (216 + 1089));
						v81 = v69[v73];
						v79[v81[4 - 2]] = v81[2 + 1];
					else
						local v6946;
						local v6947;
						local v6946, v6948;
						local v6949;
						local v6950;
						v79[v81[2]] = v63[v81[3]];
						v73 = v73 + (4 - 3);
						v81 = v69[v73];
						v6950 = v81[1 + 1];
						v6949 = v79[v81[3]];
						v79[v6950 + 1] = v6949;
						v79[v6950] = v6949[v81[3 + 1]];
						v73 = v73 + (3 - 2);
						v81 = v69[v73];
						v6950 = v81[1 + 1];
						v6946, v6948 = v72(v79[v6950](v79[v6950 + 1 + 0]));
						v74 = (v6948 + v6950) - (1 - 0);
						v6947 = 512 - (177 + 335);
						for v8266 = v6950, v74 do
							v6947 = v6947 + (192 - (188 + 3));
							v79[v8266] = v6946[v6947];
						end
						v73 = v73 + (1588 - (422 + 1165));
						v81 = v69[v73];
						v6950 = v81[3 - 1];
						v6946 = {v79[v6950](v13(v79, v6950 + 1 + 0, v74))};
						v6947 = 1835 - (1258 + 577);
						for v8269 = v6950, v81[3 + 1] do
							v6947 = v6947 + 1;
							v79[v8269] = v6946[v6947];
						end
						v73 = v73 + (341 - (62 + 278));
						v81 = v69[v73];
						v73 = v81[13 - 10];
					end
				elseif (v82 <= 430) then
					if (v82 > (138 + 291)) then
						local v6961;
						v6961 = v81[1 + 1];
						v79[v6961] = v79[v6961](v13(v79, v6961 + 1 + 0, v81[1116 - (468 + 645)]));
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[2 + 0]][v79[v81[9 - 6]]] = v79[v81[7 - 3]];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[2]] = v81[3];
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[3 - 1]] = v79[v81[8 - 5]];
						v73 = v73 + (1088 - (478 + 609));
						v81 = v69[v73];
						v79[v81[2 + 0]] = v81[3 + 0];
						v73 = v73 + (2 - 1);
						v81 = v69[v73];
						v79[v81[1665 - (1164 + 499)]] = v81[1 + 2];
						v73 = v73 + (2 - 1);
						v81 = v69[v73];
						v6961 = v81[506 - (84 + 420)];
						v79[v6961] = v79[v6961](v13(v79, v6961 + 1, v81[2 + 1]));
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[9 - 7]][v79[v81[2 + 1]]] = v79[v81[1 + 3]];
						v73 = v73 + (2 - 1);
						v81 = v69[v73];
						v79[v81[2 + 0]] = v81[1115 - (124 + 988)];
						v73 = v73 + (1 - 0);
						v81 = v69[v73];
						v79[v81[359 - (293 + 64)]] = v79[v81[3 + 0]];
						v73 = v73 + (3 - 2);
						v81 = v69[v73];
						v79[v81[2 - 0]] = v81[1 + 2];
						v73 = v73 + (4 - 3);
						v81 = v69[v73];
						v79[v81[593 - (75 + 516)]] = v81[1 + 2];
						v73 = v73 + (1195 - (624 + 570));
						v81 = v69[v73];
						v6961 = v81[2];
						v79[v6961] = v79[v6961](v13(v79, v6961 + (1815 - (122 + 1692)), v81[3 + 0]));
						v73 = v73 + (382 - (175 + 206));
						v81 = v69[v73];
						v79[v81[2 + 0]][v79[v81[3]]] = v79[v81[4]];
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[2 + 0]] = v81[3 - 0];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[4 - 2]] = v79[v81[3 + 0]];
						v73 = v73 + (25 - (10 + 14));
						v81 = v69[v73];
						v79[v81[5 - 3]] = v81[1 + 2];
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[2 + 0]] = v81[3];
						v73 = v73 + 1;
						v81 = v69[v73];
						v6961 = v81[3 - 1];
						v79[v6961] = v79[v6961](v13(v79, v6961 + (1 - 0), v81[2 + 1]));
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[2]][v79[v81[3 + 0]]] = v79[v81[4 + 0]];
						v73 = v73 + (1700 - (760 + 939));
						v81 = v69[v73];
						v79[v81[2 + 0]] = v81[1 + 2];
						v73 = v73 + (1737 - (394 + 1342));
						v81 = v69[v73];
						v79[v81[2]] = v79[v81[3]];
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[2]] = v81[1617 - (534 + 1080)];
						v73 = v73 + (1592 - (676 + 915));
						v81 = v69[v73];
						v79[v81[872 - (202 + 668)]] = v81[620 - (270 + 347)];
						v73 = v73 + (417 - (27 + 389));
						v81 = v69[v73];
						v6961 = v81[2];
						v79[v6961] = v79[v6961](v13(v79, v6961 + 1 + 0, v81[3 + 0]));
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[9 - 7]][v79[v81[6 - 3]]] = v79[v81[13 - 9]];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[122 - (111 + 9)]] = v81[2 + 1];
						v73 = v73 + (240 - (109 + 130));
						v81 = v69[v73];
						v79[v81[170 - (27 + 141)]] = v79[v81[3]];
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[3 - 1]] = v81[3];
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[1 + 1]] = v81[3 + 0];
						v73 = v73 + 1;
						v81 = v69[v73];
						v6961 = v81[2];
						v79[v6961] = v79[v6961](v13(v79, v6961 + (354 - (174 + 179)), v81[1 + 2]));
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[2 - 0]][v79[v81[2 + 1]]] = v79[v81[7 - 3]];
						v73 = v73 + (1578 - (531 + 1046));
						v81 = v69[v73];
						v79[v81[1968 - (485 + 1481)]] = v81[3];
						v73 = v73 + (3 - 2);
						v81 = v69[v73];
						v79[v81[2 + 0]] = v79[v81[1140 - (451 + 686)]];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[2]] = v81[2 + 1];
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[2]] = v81[11 - 8];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v6961 = v81[667 - (653 + 12)];
						v79[v6961] = v79[v6961](v13(v79, v6961 + (4 - 3), v81[4 - 1]));
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[2]][v79[v81[1915 - (362 + 1550)]]] = v79[v81[4]];
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[3 - 1]] = v81[10 - 7];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[2]] = v79[v81[4 - 1]];
						v73 = v73 + (1109 - (131 + 977));
						v81 = v69[v73];
						v79[v81[8 - 6]] = v81[4 - 1];
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[2]] = v81[3];
						v73 = v73 + 1;
						v81 = v69[v73];
						v6961 = v81[3 - 1];
						v79[v6961] = v79[v6961](v13(v79, v6961 + (397 - (49 + 347)), v81[3]));
						v73 = v73 + (2 - 1);
						v81 = v69[v73];
						v79[v81[7 - 5]][v79[v81[6 - 3]]] = v79[v81[17 - 13]];
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[1 + 1]] = v81[732 - (237 + 492)];
						v73 = v73 + (815 - (13 + 801));
						v81 = v69[v73];
						v79[v81[1937 - (177 + 1758)]] = v79[v81[5 - 2]];
						v73 = v73 + (927 - (815 + 111));
						v81 = v69[v73];
						v79[v81[2]] = v81[256 - (127 + 126)];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[1283 - (349 + 932)]] = v81[3];
						v73 = v73 + (1 - 0);
						v81 = v69[v73];
						v6961 = v81[414 - (407 + 5)];
						v79[v6961] = v79[v6961](v13(v79, v6961 + 1 + 0, v81[3 + 0]));
						v73 = v73 + (4 - 3);
						v81 = v69[v73];
						v79[v81[1 + 1]][v79[v81[6 - 3]]] = v79[v81[4 + 0]];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[4 - 2]] = v81[3];
						v73 = v73 + (1495 - (1293 + 201));
						v81 = v69[v73];
						v79[v81[2 - 0]] = v79[v81[13 - 10]];
						v73 = v73 + (4 - 3);
						v81 = v69[v73];
						v79[v81[2]] = v81[1262 - (110 + 1149)];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[4 - 2]] = v81[1 + 2];
						v73 = v73 + (336 - (198 + 137));
						v81 = v69[v73];
						v6961 = v81[2 + 0];
						v79[v6961] = v79[v6961](v13(v79, v6961 + 1, v81[2 + 1]));
						v73 = v73 + (1191 - (1051 + 139));
						v81 = v69[v73];
						v79[v81[2 + 0]][v79[v81[7 - 4]]] = v79[v81[1892 - (1669 + 219)]];
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[1244 - (367 + 875)]] = v81[1095 - (264 + 828)];
						v73 = v73 + (1 - 0);
						v81 = v69[v73];
						v79[v81[4 - 2]] = v79[v81[3]];
						v73 = v73 + (66 - (4 + 61));
						v81 = v69[v73];
						v79[v81[309 - (183 + 124)]] = v81[3];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[1 + 1]] = v81[6 - 3];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v6961 = v81[683 - (47 + 634)];
						v79[v6961] = v79[v6961](v13(v79, v6961 + 1, v81[3]));
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[2]][v79[v81[3]]] = v79[v81[1 + 3]];
						v73 = v73 + (1 - 0);
						v81 = v69[v73];
						v79[v81[2 + 0]] = v81[14 - 11];
						v73 = v73 + (2 - 1);
						v81 = v69[v73];
						v79[v81[2 + 0]] = v79[v81[2 + 1]];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[2 + 0]] = v81[10 - 7];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[1 + 1]] = v81[4 - 1];
						v73 = v73 + (486 - (419 + 66));
						v81 = v69[v73];
						v6961 = v81[1940 - (1267 + 671)];
						v79[v6961] = v79[v6961](v13(v79, v6961 + 1 + 0, v81[11 - 8]));
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[2]][v79[v81[3]]] = v79[v81[108 - (68 + 36)]];
						v73 = v73 + (1428 - (168 + 1259));
						v81 = v69[v73];
						v79[v81[2]] = v81[3 + 0];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[1132 - (29 + 1101)]] = v79[v81[7 - 4]];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[6 - 4]] = v81[309 - (72 + 234)];
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[2]] = v81[3];
						v73 = v73 + (1 - 0);
						v81 = v69[v73];
						v6961 = v81[1542 - (479 + 1061)];
						v79[v6961] = v79[v6961](v13(v79, v6961 + 1 + 0, v81[1926 - (1287 + 636)]));
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[1 + 1]][v79[v81[2 + 1]]] = v79[v81[614 - (65 + 545)]];
						v73 = v73 + 1;
						v81 = v69[v73];
						v79[v81[2]] = v81[3];
						v73 = v73 + (620 - (580 + 39));
						v81 = v69[v73];
						v79[v81[2 + 0]] = v79[v81[1 + 2]];
						v73 = v73 + (1 - 0);
						v81 = v69[v73];
						v79[v81[976 - (588 + 386)]] = v81[5 - 2];
						v73 = v73 + (2 - 1);
						v81 = v69[v73];
						v79[v81[6 - 4]] = v81[3];
						v73 = v73 + 1;
						v81 = v69[v73];
						v6961 = v81[2 + 0];
						v79[v6961] = v79[v6961](v13(v79, v6961 + (960 - (187 + 772)), v81[1699 - (216 + 1480)]));
						v73 = v73 + 1 + 0;
						v81 = v69[v73];
						v79[v81[4 - 2]][v79[v81[80 - (13 + 64)]]] = v79[v81[589 - (529 + 56)]];
					else
						local v7048 = v79[v81[4]];
						if not v7048 then
							v73 = v73 + 1 + 0;
						else
							local v8346 = 0 - 0;
							while true do
								if (v8346 == 0) then
									v79[v81[1514 - (1283 + 229)]] = v7048;
									v73 = v81[2 + 1];
									break;
								end
							end
						end
					end
				elseif (v82 == (626 - (163 + 32))) then
					local v7049;
					v79[v81[2]] = v79[v81[3]];
					v73 = v73 + (1397 - (613 + 783));
					v81 = v69[v73];
					v79[v81[3 - 1]] = v81[3 + 0];
					v73 = v73 + (846 - (579 + 266));
					v81 = v69[v73];
					v79[v81[635 - (325 + 308)]] = v81[3];
					v73 = v73 + 1;
					v81 = v69[v73];
					v7049 = v81[2];
					v79[v7049] = v79[v7049](v13(v79, v7049 + (796 - (485 + 310)), v81[2 + 1]));
					v73 = v73 + (894 - (525 + 368));
					v81 = v69[v73];
					v79[v81[2 - 0]][v79[v81[564 - (437 + 124)]]] = v79[v81[1530 - (79 + 1447)]];
					v73 = v73 + (1319 - (448 + 870));
					v81 = v69[v73];
					v79[v81[2 + 0]] = v81[3 - 0];
					v73 = v73 + 1;
					v81 = v69[v73];
					v79[v81[2 - 0]] = v79[v81[10 - 7]];
					v73 = v73 + (1921 - (1062 + 858));
					v81 = v69[v73];
					v79[v81[2]] = v81[1 + 2];
					v73 = v73 + 1;
					v81 = v69[v73];
					v79[v81[2 + 0]] = v81[3];
					v73 = v73 + 1 + 0;
					v81 = v69[v73];
					v7049 = v81[399 - (96 + 301)];
					v79[v7049] = v79[v7049](v13(v79, v7049 + (889 - (102 + 786)), v81[2 + 1]));
					v73 = v73 + (2 - 1);
					v81 = v69[v73];
					v79[v81[9 - 7]][v79[v81[11 - 8]]] = v79[v81[4 + 0]];
					v73 = v73 + (1698 - (1102 + 595));
					v81 = v69[v73];
					v79[v81[2 + 0]] = v81[858 - (382 + 473)];
					v73 = v73 + (465 - (46 + 418));
					v81 = v69[v73];
					v79[v81[1 + 1]] = v79[v81[3]];
					v73 = v73 + (2 - 1);
					v81 = v69[v73];
					v79[v81[2 + 0]] = v81[3 + 0];
					v73 = v73 + (153 - (4 + 148));
					v81 = v69[v73];
					v79[v81[2]] = v81[394 - (19 + 372)];
					v73 = v73 + 1;
					v81 = v69[v73];
					v7049 = v81[2 - 0];
					v79[v7049] = v79[v7049](v13(v79, v7049 + 1 + 0, v81[1848 - (716 + 1129)]));
					v73 = v73 + 1 + 0;
					v81 = v69[v73];
					v79[v81[904 - (192 + 710)]][v79[v81[2 + 1]]] = v79[v81[4]];
					v73 = v73 + 1;
					v81 = v69[v73];
					v79[v81[2 - 0]] = v81[5 - 2];
					v73 = v73 + 1;
					v81 = v69[v73];
					v79[v81[1 + 1]] = v79[v81[197 - (31 + 163)]];
					v73 = v73 + 1;
					v81 = v69[v73];
					v79[v81[7 - 5]] = v81[3];
					v73 = v73 + (1385 - (772 + 612));
					v81 = v69[v73];
					v79[v81[2]] = v81[313 - (183 + 127)];
					v73 = v73 + 1;
					v81 = v69[v73];
					v7049 = v81[7 - 5];
					v79[v7049] = v79[v7049](v13(v79, v7049 + 1 + 0, v81[1 + 2]));
					v73 = v73 + (1110 - (632 + 477));
					v81 = v69[v73];
					v79[v81[952 - (659 + 291)]][v79[v81[750 - (140 + 607)]]] = v79[v81[4]];
					v73 = v73 + (1551 - (760 + 790));
					v81 = v69[v73];
					v79[v81[2]] = v81[10 - 7];
					v73 = v73 + 1 + 0;
					v81 = v69[v73];
					v79[v81[2 + 0]] = v79[v81[1046 - (960 + 83)]];
					v73 = v73 + 1 + 0;
					v81 = v69[v73];
					v79[v81[6 - 4]] = v81[3 + 0];
					v73 = v73 + 1 + 0;
					v81 = v69[v73];
					v79[v81[6 - 4]] = v81[3 + 0];
					v73 = v73 + 1 + 0;
					v81 = v69[v73];
					v7049 = v81[4 - 2];
					v79[v7049] = v79[v7049](v13(v79, v7049 + 1 + 0, v81[2 + 1]));
					v73 = v73 + (694 - (565 + 128));
					v81 = v69[v73];
					v79[v81[2]][v79[v81[7 - 4]]] = v79[v81[4]];
					v73 = v73 + 1;
					v81 = v69[v73];
					v79[v81[2 + 0]] = v81[2 + 1];
					v73 = v73 + (881 - (546 + 334));
					v81 = v69[v73];
					v79[v81[2]] = v79[v81[1 + 2]];
					v73 = v73 + (617 - (566 + 50));
					v81 = v69[v73];
					v79[v81[2 + 0]] = v81[3];
					v73 = v73 + (1925 - (1186 + 738));
					v81 = v69[v73];
					v79[v81[2 - 0]] = v81[3];
					v73 = v73 + 1 + 0;
					v81 = v69[v73];
					v7049 = v81[323 - (27 + 294)];
					v79[v7049] = v79[v7049](v13(v79, v7049 + (1227 - (311 + 915)), v81[3]));
					v73 = v73 + 1;
					v81 = v69[v73];
					v79[v81[2]][v79[v81[1 + 2]]] = v79[v81[11 - 7]];
					v73 = v73 + 1 + 0;
					v81 = v69[v73];
					v79[v81[1 + 1]] = v81[3 + 0];
					v73 = v73 + (2 - 1);
					v81 = v69[v73];
					v79[v81[9 - 7]] = v79[v81[3]];
					v73 = v73 + 1;
					v81 = v69[v73];
					v79[v81[2 + 0]] = v81[1832 - (137 + 1692)];
					v73 = v73 + (1 - 0);
					v81 = v69[v73];
					v79[v81[2 + 0]] = v81[3 + 0];
					v73 = v73 + 1 + 0;
					v81 = v69[v73];
					v7049 = v81[2 + 0];
					v79[v7049] = v79[v7049](v13(v79, v7049 + 1 + 0, v81[1 + 2]));
					v73 = v73 + 1 + 0;
					v81 = v69[v73];
					v79[v81[1 + 1]][v79[v81[200 - (110 + 87)]]] = v79[v81[6 - 2]];
					v73 = v73 + (1358 - (1181 + 176));
					v81 = v69[v73];
					v79[v81[2]] = v81[1218 - (35 + 1180)];
					v73 = v73 + (618 - (400 + 217));
					v81 = v69[v73];
					v79[v81[2]] = v79[v81[3 + 0]];
					v73 = v73 + (1113 - (43 + 1069));
					v81 = v69[v73];
					v79[v81[1169 - (647 + 520)]] = v81[7 - 4];
					v73 = v73 + 1 + 0;
					v81 = v69[v73];
					v79[v81[5 - 3]] = v81[5 - 2];
					v73 = v73 + 1;
					v81 = v69[v73];
					v7049 = v81[2 + 0];
					v79[v7049] = v79[v7049](v13(v79, v7049 + (2 - 1), v81[1679 - (570 + 1106)]));
					v73 = v73 + 1 + 0;
					v81 = v69[v73];
					v79[v81[6 - 4]][v79[v81[9 - 6]]] = v79[v81[5 - 1]];
					v73 = v73 + (1 - 0);
					v81 = v69[v73];
					v79[v81[2]] = v81[1810 - (91 + 1716)];
					v73 = v73 + 1 + 0;
					v81 = v69[v73];
					v79[v81[2 - 0]] = v79[v81[5 - 2]];
					v73 = v73 + 1;
					v81 = v69[v73];
					v79[v81[2]] = v81[1 + 2];
					v73 = v73 + 1 + 0;
					v81 = v69[v73];
					v79[v81[1227 - (961 + 264)]] = v81[1071 - (954 + 114)];
					v73 = v73 + 1;
					v81 = v69[v73];
					v7049 = v81[1286 - (176 + 1108)];
					v79[v7049] = v79[v7049](v13(v79, v7049 + 1, v81[3]));
					v73 = v73 + (1 - 0);
					v81 = v69[v73];
					v79[v81[1709 - (1403 + 304)]][v79[v81[1935 - (1805 + 127)]]] = v79[v81[1744 - (1020 + 720)]];
					v73 = v73 + 1;
					v81 = v69[v73];
					v79[v81[4 - 2]] = v81[434 - (127 + 304)];
					v73 = v73 + 1;
					v81 = v69[v73];
					v79[v81[2]] = v79[v81[2 + 1]];
					v73 = v73 + (269 - (26 + 242));
					v81 = v69[v73];
					v79[v81[1 + 1]] = v81[3 - 0];
					v73 = v73 + (1 - 0);
					v81 = v69[v73];
					v79[v81[90 - (13 + 75)]] = v81[1 + 2];
					v73 = v73 + (1575 - (922 + 652));
					v81 = v69[v73];
					v7049 = v81[734 - (45 + 687)];
					v79[v7049] = v79[v7049](v13(v79, v7049 + 1, v81[2 + 1]));
					v73 = v73 + 1;
					v81 = v69[v73];
					v79[v81[2 + 0]][v79[v81[1538 - (1328 + 207)]]] = v79[v81[4]];
					v73 = v73 + 1 + 0;
					v81 = v69[v73];
					v79[v81[159 - (82 + 75)]] = v81[4 - 1];
					v73 = v73 + 1;
					v81 = v69[v73];
					v79[v81[2 + 0]] = v79[v81[3 - 0]];
					v73 = v73 + (1 - 0);
					v81 = v69[v73];
					v79[v81[2 + 0]] = v81[1228 - (1055 + 170)];
					v73 = v73 + (1536 - (49 + 1486));
					v81 = v69[v73];
					v79[v81[491 - (78 + 411)]] = v81[3];
					v73 = v73 + 1;
					v81 = v69[v73];
					v7049 = v81[2];
					v79[v7049] = v79[v7049](v13(v79, v7049 + 1 + 0, v81[225 - (110 + 112)]));
					v73 = v73 + 1;
					v81 = v69[v73];
					v79[v81[6 - 4]][v79[v81[3]]] = v79[v81[1997 - (1724 + 269)]];
					v73 = v73 + (1 - 0);
					v81 = v69[v73];
					v79[v81[60 - (31 + 27)]] = v81[8 - 5];
					v73 = v73 + (984 - (81 + 902));
					v81 = v69[v73];
					v79[v81[818 - (7 + 809)]] = v79[v81[11 - 8]];
					v73 = v73 + 1;
					v81 = v69[v73];
					v79[v81[2]] = v81[11 - 8];
					v73 = v73 + 1;
					v81 = v69[v73];
					v79[v81[2]] = v81[1099 - (305 + 791)];
					v73 = v73 + (1 - 0);
					v81 = v69[v73];
					v7049 = v81[1 + 1];
					v79[v7049] = v79[v7049](v13(v79, v7049 + 1 + 0, v81[4 - 1]));
					v73 = v73 + 1 + 0;
					v81 = v69[v73];
					v79[v81[2 - 0]][v79[v81[2 + 1]]] = v79[v81[4]];
					v73 = v73 + 1 + 0;
					v81 = v69[v73];
					v79[v81[2]] = v81[3];
					v73 = v73 + 1;
					v81 = v69[v73];
					v79[v81[5 - 3]] = v79[v81[1959 - (1183 + 773)]];
					v73 = v73 + (841 - (699 + 141));
					v81 = v69[v73];
					v79[v81[2 + 0]] = v81[3];
					v73 = v73 + (166 - (43 + 122));
					v81 = v69[v73];
					v79[v81[1 + 1]] = v81[3];
					v73 = v73 + (3 - 2);
					v81 = v69[v73];
					v7049 = v81[63 - (58 + 3)];
					v79[v7049] = v79[v7049](v13(v79, v7049 + (776 - (118 + 657)), v81[6 - 3]));
					v73 = v73 + (1239 - (293 + 945));
					v81 = v69[v73];
					v79[v81[1 + 1]][v79[v81[246 - (93 + 150)]]] = v79[v81[4]];
					v73 = v73 + 1 + 0;
					v81 = v69[v73];
					v79[v81[1 + 1]] = v81[5 - 2];
					v73 = v73 + (2 - 1);
					v81 = v69[v73];
					v79[v81[1 + 1]] = v79[v81[3]];
					v73 = v73 + (4 - 3);
					v81 = v69[v73];
					v79[v81[2]] = v81[898 - (672 + 223)];
				else
					local v7135;
					v79[v81[8 - 6]] = v79[v81[689 - (419 + 267)]];
					v73 = v73 + (2 - 1);
					v81 = v69[v73];
					v79[v81[1 + 1]] = v79[v81[3 + 0]];
					v73 = v73 + (964 - (134 + 829));
					v81 = v69[v73];
					v79[v81[2]] = v79[v81[3]];
					v73 = v73 + 1 + 0;
					v81 = v69[v73];
					v7135 = v81[871 - (788 + 81)];
					v79[v7135] = v79[v7135](v13(v79, v7135 + (1 - 0), v81[9 - 6]));
					v73 = v73 + (3 - 2);
					v81 = v69[v73];
					v79[v81[5 - 3]] = v79[v81[3]];
					v73 = v73 + (1359 - (495 + 863));
					v81 = v69[v73];
					v79[v81[2]] = v64[v81[8 - 5]];
					v73 = v73 + 1;
					v81 = v69[v73];
					v79[v81[2]] = v79[v81[653 - (288 + 362)]][v81[13 - 9]];
					v73 = v73 + (3 - 2);
					v81 = v69[v73];
					v79[v81[1227 - (347 + 878)]] = v79[v81[6 - 3]];
					v73 = v73 + (3 - 2);
					v81 = v69[v73];
					v79[v81[2]] = v79[v81[9 - 6]];
					v73 = v73 + 1;
					v81 = v69[v73];
					v7135 = v81[2];
					v79[v7135] = v79[v7135](v13(v79, v7135 + 1 + 0, v81[1574 - (688 + 883)]));
				end
				v73 = v73 + (3 - 2);
			end
		end;
	end
	return v29(v28(), {}, v17)(...);
end
return vv9(), ...);
