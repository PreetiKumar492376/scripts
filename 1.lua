do local MacLib=loadstring(game:HttpGet("https://github.com/biggaboy212/Maclib/releases/latest/download/maclib.txt"))();local wcamera=workspace.CurrentCamera;local localplayer=game.Players.LocalPlayer;local runs=game:GetService("RunService");local uis=game:GetService("UserInputService");local tweens=game:GetService("TweenService");local scriptloading=true;local aimbool=false;local aimdebug1=false;local aimselftrack=false;local aimbots=false;local aimvischeck=false;local aimdistcheck=false;local aimbang=true;local aimtrigger=false;local aimtarget=nil;local aimtargetpart=nil;local aimdynamicfov=false;local aimpart="Head";local aimtype="Instant Hit";local aimfov=150;local aimsnapline=Drawing.new("Line");local snaplinebool=false;local aimdistance=800;local aimchance=100;local aimfakewait=0;local aimfovcircle=Drawing.new("Circle");local aimtargetname=Drawing.new("Text");local aimtargetshots=Drawing.new("Text");local aimogfunc=nil;local aimmodfunc=nil;local aimignoreparts={};local globalammo=nil;local selftrack_data={};local selftrack_update=0;local hitmarkbool=false;local hitmarkcolor=Color3.fromRGB(255,255,255);local hitmarkfade=2;local hitsoundbool=false;local hitsoundhead="Ding";local hitsoundbody="Blackout";local hitsoundlib={TF2="rbxassetid://8255306220",Gamesense="rbxassetid://4817809188",Rust="rbxassetid://1255040462",Neverlose="rbxassetid://8726881116",Bubble="rbxassetid://198598793",Quake="rbxassetid://1455817260",["Among-Us"]="rbxassetid://7227567562",Ding="rbxassetid://2868331684",Minecraft="rbxassetid://6361963422",Blackout="rbxassetid://3748776946",["Osu!"]="rbxassetid://7151989073"};local hitsoundlibUI={};for i,v in hitsoundlib do hitsoundlibUI[v]=i;end local aimFRIENDLIST={};local friendlistmode="Blacklist";local friendlistbots=false;local allvars={noswaybool=false,instaequip=false,customRapidFireEnabled=false};pcall(function() local fpsmod=require(game.ReplicatedStorage.Modules.FPS);if (fpsmod and (type(fpsmod.updateClient)=="function")) then local originalUpdateClient=fpsmod.updateClient;fpsmod.updateClient=function(a1,a2,a3) local r1,r2,r3=originalUpdateClient(a1,a2,a3);if (allvars.noswaybool and a1 and a1.springs) then local sp=a1.springs;local zero=Vector3.new();sp.sway.Position=zero;sp.walkCycle.Position=zero;sp.sprintCycle.Position=zero;sp.strafeTilt.Position=zero;sp.jumpTilt.Position=zero;sp.sway.Speed=0;sp.walkCycle.Speed=0;sp.sprintCycle.Speed=0;sp.strafeTilt.Speed=0;sp.jumpTilt.Speed=0;elseif (a1 and a1.springs) then local sp=a1.springs;sp.sway.Speed=4;sp.walkCycle.Speed=4;sp.sprintCycle.Speed=4;sp.strafeTilt.Speed=4;sp.jumpTilt.Speed=4;end return r1,r2,r3;end;end end);aimfovcircle.Visible=false;aimfovcircle.Radius=aimfov;aimfovcircle.Thickness=2;aimfovcircle.Filled=false;aimfovcircle.Transparency=0.2;aimfovcircle.Color=Color3.fromRGB(255,255,255);aimfovcircle.Position=Vector2.new(wcamera.ViewportSize.X/2 ,wcamera.ViewportSize.Y/2 );aimtargetname.Text="None";aimtargetname.Position=Vector2.new(wcamera.ViewportSize.X/2 ,(wcamera.ViewportSize.Y/2) + aimfov + 20 );aimtargetname.Size=24;aimtargetname.Color=Color3.fromRGB(255,255,255);aimtargetname.Visible=false;aimtargetname.Center=true;aimtargetname.Outline=true;aimtargetname.OutlineColor=Color3.new(0,0,0);aimtargetshots.Text=" ";aimtargetshots.Position=Vector2.new(wcamera.ViewportSize.X/2 ,(wcamera.ViewportSize.Y/2) + aimfov + 30 );aimtargetshots.Size=20;aimtargetshots.Color=Color3.fromRGB(255,255,255);aimtargetshots.Visible=false;aimtargetshots.Center=true;aimtargetshots.Outline=true;aimtargetshots.OutlineColor=Color3.new(0,0,0);aimsnapline.From=Vector2.new(20,20);aimsnapline.To=Vector2.new(50,50);aimsnapline.Color=Color3.fromRGB(255,255,255);aimsnapline.Thickness=1;aimsnapline.Visible=false;for i,v in ipairs(workspace:GetDescendants()) do if v:GetAttribute("PassThrough") then table.insert(aimignoreparts,v);end end local function predictpos(tpart,bulletspeed,bulletdrop) local velocity=tpart.Velocity;local distance=(wcamera.CFrame.Position-tpart.CFrame.Position).Magnitude;local tth=distance/bulletspeed ;local predict1=tpart.CFrame.Position + (velocity * tth) ;local delta=(predict1-tpart.CFrame.Position).Magnitude;local finalspeed=bulletspeed-(0.013 * (bulletspeed^2) * (tth^2)) ;tth+=(delta/finalspeed) local predictres1=tpart.CFrame.Position + (velocity * tth) ;local predictres2=bulletdrop * (tth^2) ;return predictres1;end local function runhitmark(v140) if hitmarkbool then local hitpart=Instance.new("Part",workspace);hitpart.Transparency=1;hitpart.CanCollide=false;hitpart.CanQuery=false;hitpart.Size=Vector3.new(0.01,0.01,0.01);hitpart.Anchored=true;hitpart.Position=v140;local hit=Instance.new("BillboardGui");hit.Name="hit";hit.AlwaysOnTop=true;hit.Parent=hitpart;local hit_img=Instance.new("ImageLabel");hit_img.Name="hit_img";hit_img.Image="http://www.roblox.com/asset/?id=13298929624";hit_img.BackgroundTransparency=1;hit_img.Size=UDim2.new(0,50,0,50);hit_img.Visible=true;hit_img.ImageColor3=hitmarkcolor;hit_img.Rotation=45;hit_img.AnchorPoint=Vector2.new(0.5,0.5);hit_img.Parent=hit;task.spawn(function() local tweninfo=TweenInfo.new(hitmarkfade,Enum.EasingStyle.Sine);local tweninfo2=TweenInfo.new(hitmarkfade,Enum.EasingStyle.Linear);tweens:Create(hit_img,tweninfo,{ImageTransparency=1}):Play();tweens:Create(hit_img,tweninfo2,{Rotation=180}):Play();task.wait(hitmarkfade);hit_img:Destroy();hit:Destroy();end);end end pcall(function() aimogfunc=require(game.ReplicatedStorage.Modules.FPS.Bullet).CreateBullet;function aimmodfunc(prikol,p49,p50,p_u_51,aimpart,_,p52,p53,p54) local v_u_6=game.ReplicatedStorage.Remotes.VisualProjectile;local v_u_108=1;local v_u_106=0;local v_u_7=game.ReplicatedStorage.Remotes.FireProjectile;local target=aimtarget;local target_part;local v_u_4=require(game.ReplicatedStorage.Modules:WaitForChild("FunctionLibraryExtension"));local v_u_15=localplayer;local v_u_115=v_u_4:GetEstimatedCameraPosition(v_u_15);local v_u_103;local v_u_114;local v_u_16=game.ReplicatedStorage.Players:FindFirstChild(v_u_15.Name);local v_u_64=v_u_16.Status.GameplayVariables:GetAttribute("EquipId");local v_u_13=game.ReplicatedStorage:WaitForChild("VFX");local v_u_2=require(game.ReplicatedStorage.Modules:WaitForChild("VFX"));local v3=require(game.ReplicatedStorage.Modules:WaitForChild("UniversalTables"));local v_u_5=game.ReplicatedStorage.Remotes.ProjectileInflict;local v_u_10=game:GetService("ReplicatedStorage");local v_u_12=v_u_10:WaitForChild("RangedWeapons");local v_u_17=game.ReplicatedStorage.Temp;local v_u_56=v_u_15.Character;local v135=500000;local v_u_18=v3.ReturnTable("GlobalIgnoreListProjectile");local v_u_115=v_u_4:GetEstimatedCameraPosition(v_u_15);local v65=v_u_10.AmmoTypes:FindFirstChild(p52);globalammo=v65;local v_u_74=v65:GetAttribute("Pellets");local v60=p50.ItemRoot;local v61=p49.ItemProperties;local v62=v_u_12:FindFirstChild(p49.Name);local v63=v61:FindFirstChild("SpecialProperties");local v_u_66=(v63 and v63:GetAttribute("TracerColor")) or v62:GetAttribute("ProjectileColor") ;local itemprop=require(v_u_16.Inventory:FindFirstChild(p49.Name).SettingsModule);local bulletspeed=v65:GetAttribute("MuzzleVelocity");local armorpen4=v65:GetAttribute("ArmorPen");local tracerendpos=Vector3.zero;local v79={x={Value=0},y={Value=0}};if v_u_56:FindFirstChild(p49.Name) then local v83=0.001;local v82=0.001;local v81=v61.Tool:GetAttribute("MuzzleDevice") or "Default" ;v_u_108=math.random( -100000,100000);if (v61.Tool:GetAttribute("MuzzleDevice") or ("Default"=="Suppressor")) then if ((tick() -p53)<0.8) then v_u_4:PlaySoundV2(v60.Sounds.FireSoundSupressed,v60.Sounds.FireSoundSupressed.TimeLength,v_u_17);else v_u_4:PlaySoundV2(v60.FireSoundSupressed,v60.Sounds.FireSoundSupressed.TimeLength,v_u_17);end elseif ((tick() -p53)<0.8) then v_u_4:PlaySoundV2(v60.Sounds.FireSound,v60.Sounds.FireSound.TimeLength,v_u_17);else v_u_4:PlaySoundV2(v60.Sounds.FireSound,v60.Sounds.FireSound.TimeLength,v_u_17);end local v_u_59;if p_u_51.Item.Attachments:FindFirstChild("Front") then v_u_59=p_u_51.Item.Attachments.Front:GetChildren()[1].Barrel;local _=p50.Attachments.Front:GetChildren()[1].Barrel;else v_u_59=p_u_51.Item.Barrel;local _=p50.Barrel;end if ((target~=nil) and (aimtargetpart~=nil)) then target_part=aimtargetpart;if (aimtype=="Prediction") then local buldrop=v65:GetAttribute("ProjectileDrop");local bulsp=v65:GetAttribute("MuzzleVelocity");target_part=predictpos(target_part,bulsp,buldrop);v_u_103=CFrame.new(v_u_115,target_part).LookVector;else v_u_103=CFrame.new(v_u_115,target_part.Position).LookVector;end v_u_114=v_u_103;else target_part=aimpart;v_u_103=CFrame.new(v_u_115,v_u_15:GetMouse().Hit.Position).LookVector;v_u_114=v_u_103;end function v185() local v_u_110=RaycastParams.new();v_u_110.FilterType=Enum.RaycastFilterType.Exclude;local v_u_111={v_u_56,p_u_51,v_u_18,aimignoreparts};v_u_110.FilterDescendantsInstances=v_u_111;v_u_110.CollisionGroup="WeaponRay";v_u_110.IgnoreWater=true;v_u_106+=1 local usethisvec=v_u_114;if aimdebug1 then usethisvec=Vector3.new(0,1,0);end if (v_u_106==1) then task.spawn(function() for i=1,1 do if (aimtype=="Instant Hit") then if  not v_u_7:InvokeServer(usethisvec,v_u_108,tick() -15 ) then game.ReplicatedStorage.Modules.FPS.Binds.AdjustBullets:Fire(v_u_64,1);end elseif  not v_u_7:InvokeServer(usethisvec,v_u_108,tick()) then game.ReplicatedStorage.Modules.FPS.Binds.AdjustBullets:Fire(v_u_64,1);end end end);elseif (1<v_u_106) then for i=1,1 do v_u_6:FireServer(usethisvec,v_u_108);end end local v_u_131=nil;local v_u_132=0;local v_u_133=0;if (((aimtype=="Prediction") or aimfakewait) and (target~=nil)) then local tpart;if target:IsA("Model") then tpart=target.HumanoidRootPart;else tpart=target.Character.HumanoidRootPart;end local velocity=tpart.Velocity;local distance=(wcamera.CFrame.Position-tpart.CFrame.Position).Magnitude;local tth=distance/bulletspeed ;task.wait(tth + 0.01 );if ((aimtarget~=nil) and (aimtargetpart~=nil)) then target_part=aimtargetpart;if (aimtype=="Prediction") then local buldrop=v65:GetAttribute("ProjectileDrop");local bulsp=v65:GetAttribute("MuzzleVelocity");target_part=predictpos(target_part,bulsp,buldrop);v_u_103=CFrame.new(v_u_115,target_part).LookVector;else v_u_103=CFrame.new(v_u_115,target_part.Position).LookVector;end v_u_114=v_u_103;end end local penetrated=false;function v184(p134) v_u_132=v_u_132 + p134 ;if true then v_u_133=v_u_133 + v_u_132 ;local v136=workspace:Raycast(v_u_115,v_u_114 * v135 ,v_u_110);local v137=nil;local v138=nil;local v139=nil;local v140;if v136 then v137=v136.Instance;v140=v136.Position;v138=v136.Normal;v139=v136.Material;else v140=v_u_115 + (v_u_114 * v135) ;end if (v137==nil) then v_u_131:Disconnect();return;end tracerendpos=v140;local v171=v_u_4:FindDeepAncestor(v137,"Model");if v171:FindFirstChild("Humanoid") then local ran=math.random(1,100);local ranbool=ran<=aimchance ;if ranbool then local v175=v137.CFrame:ToObjectSpace(CFrame.new(v140));if (target_part and (penetrated==false)) then v_u_5:FireServer(target_part,v175,v_u_108,tick());else v_u_5:FireServer(v137,v175,v_u_108,tick());end else local v175=v137.CFrame:ToObjectSpace(CFrame.new(v140));v_u_5:FireServer(aimpart,v175,v_u_108,tick());end v_u_2.Impact(v137,v140,v138,v139,v_u_114,"Ranged",true);task.spawn(function() runhitmark(v140);end);elseif (v137.Name=="Terrain") then local v175=v137.CFrame:ToObjectSpace(CFrame.new(v140));v_u_5:FireServer(v137,v175,v_u_108,tick());v_u_2.Impact(v137,v140,v138,v139,v_u_114,"Ranged",true);task.spawn(function() runhitmark(v140);end);else v_u_2.Impact(v137,v140,v138,v139,v_u_114,"Ranged",true);task.spawn(function() runhitmark(v140);end);local arg1,arg2,arg3=v_u_4.Penetration(v_u_4,v137,v140,v_u_114,armorpen4);if ((arg1==nil) or (arg2==nil)) then local v175=v137.CFrame:ToObjectSpace(CFrame.new(v140));v_u_5:FireServer(v137,v175,v_u_108,tick());v_u_131:Disconnect();return;end armorpen4=arg1;if (armorpen4>0) then v_u_115=arg2;v_u_2.Impact(unpack(arg3));penetrated=true;return;end v_u_131:Disconnect();return;end end v_u_131:Disconnect();return;end v_u_131=game:GetService("RunService").RenderStepped:Connect(v184);return;end if (v_u_74==nil) then task.spawn(v185);else for _=1,v_u_74 do task.spawn(v185);end end return v83,v82,v81,v79;end end end);local Window=MacLib:Window({Title="Oblivion (Paid) ",Subtitle="by Oblivion",Size=UDim2.fromOffset(868,650),DragStyle=1,ShowUserInfo=true,Keybind=Enum.KeyCode.RightControl,AcrylicBlur=true});local globalSettings={UIBlurToggle=Window:GlobalSetting({Name="UI Transparency",Default=true,Callback=function(bool) Window:SetAcrylicBlurState(bool);end}),ShowUserInfo=Window:GlobalSetting({Name="User Info",Default=true,Callback=function(bool) if (typeof(Window.SetUserInfoState)=="function") then Window:SetUserInfoState(bool);elseif (typeof(Window.ToggleUserInfo)=="function") then Window:ToggleUserInfo(bool);else pcall(function() if Window.Settings then Window.Settings.ShowUserInfo=bool;end if (Window.Frame and Window.Frame:FindFirstChild("Bottom")) then local bottom=Window.Frame.Bottom;for _,child in pairs(bottom:GetChildren()) do if (child:IsA("ImageLabel") or child:IsA("ImageButton")) then child.Visible=bool;elseif (child:IsA("TextLabel") or child:IsA("TextBox") or child:IsA("TextButton")) then child.Visible=bool;elseif (child:IsA("Frame") and (child.Name:find("User") or child.Name:find("Avatar") or child.Name:find("Profile"))) then child.Visible=bool;end end local bottomLeft=bottom:FindFirstChild("BottomLeft") or bottom:FindFirstChild("Left") ;if bottomLeft then bottomLeft.Visible=bool;end if  not bool then local allHidden=true;for _,child in pairs(bottom:GetChildren()) do if child.Visible then allHidden=false;break;end end if allHidden then bottom.Visible=false;end else bottom.Visible=true;end end local function processDescendants(parent) for _,child in pairs(parent:GetChildren()) do if ((child.Name:find("User") or child.Name:find("Avatar") or child.Name:find("Profile") or child.Name:find("Name")) and (child:IsA("Frame") or child:IsA("ImageLabel") or child:IsA("TextLabel") or child:IsA("ViewportFrame"))) then child.Visible=bool;end processDescendants(child);end end if Window.Frame then processDescendants(Window.Frame);end end);end end}),Watermark=Window:GlobalSetting({Name="Watermark",Default=true,Callback=function(bool) if _G.CustomWatermark then _G.CustomWatermark.Enabled=bool;end end})};local Workspace=game:GetService("Workspace");local RunService=game:GetService("RunService");local Players=game:GetService("Players");local CoreGui=game:GetService("CoreGui");local Lighting=game:GetService("Lighting");local HttpService=game:GetService("HttpService");local UserInputService=game:GetService("UserInputService");local SilentAim={Enabled=false,TeamCheck=false,AimPart="Head",Sensitivity=0,CircleSides=64,CircleColor=Color3.fromRGB(255,255,255),CircleTransparency=0.7,CircleRadius=220,CircleFilled=false,CircleVisible=false,CircleThickness=0,FOVCircle=nil,LockedPlayerGUI=nil,UsernameLabel=nil,TrackerEnabled=false,TrackerColor=Color3.fromRGB(255,255,255),TrackerWidth=1,TrackerTransparency=1,Tracker2D=nil,Holding=false,CurrentTarget=nil,IsAiming=false,PredictionEnabled=true,PredictionSpeed=500};local ESP={Enabled=false,TeamCheck=true,MaxDistance=500,FontSize=11,FadeOut={OnDistance=true,OnDeath=false,OnLeave=false},Drawing={Chams={Enabled=false,Thermal=true,XRay=false,FillRGB=Color3.fromRGB(119,120,255),Fill_Transparency=100,OutlineRGB=Color3.fromRGB(119,120,255),Outline_Transparency=100,VisibleCheck=true},Names={Enabled=false,RGB=Color3.fromRGB(255,255,255)},Flags={Enabled=false},GazeLine={Enabled=false,RGB=Color3.fromRGB(255,0,0),Thickness=1.5,Length=10},Distances={Enabled=false,Position="Text",RGB=Color3.fromRGB(255,255,255)},Weapons={Enabled=false,WeaponTextRGB=Color3.fromRGB(119,120,255),Outlined=false,Gradient=false,GradientRGB1=Color3.fromRGB(255,255,255),GradientRGB2=Color3.fromRGB(119,120,255)},Healthbar={Enabled=false,HealthText=true,Lerp=false,HealthTextRGB=Color3.fromRGB(119,120,255),Width=2.5,Gradient=true,GradientRGB1=Color3.fromRGB(200,0,0),GradientRGB2=Color3.fromRGB(150,150,0),GradientRGB3=Color3.fromRGB(0,255,0)},Boxes={Animate=false,RotationSpeed=300,Gradient=true,GradientRGB1=Color3.fromRGB(19,0,255),GradientRGB2=Color3.fromRGB(255,0,0),GradientFill=true,GradientFillRGB1=Color3.fromRGB(19,0,255),GradientFillRGB2=Color3.fromRGB(255,0,0),Filled={Enabled=false,Transparency=0.75,RGB=Color3.fromRGB(0,0,0)},Full={Enabled=false,RGB=Color3.fromRGB(255,255,255)},Corner={Enabled=false,RGB=Color3.fromRGB(255,255,255)}},Skeleton={Enabled=false,Color=Color3.fromRGB(255,255,255),Thickness=1}},Connections={RunService=RunService},Fonts={},ShowAIBots=false,GazeLines={},Skeletons={}};local WorldESP={Enabled=false,TextColor=Color3.fromRGB(255,80,10),TextSize=14,TextTransparency=0.3,Outline=true,OutlineColor=Color3.fromRGB(0,0,0),ESPs={},KeyESPEnabled=false,ContainerESPEnabled=false,DroppedItemsESPEnabled=false,MaxDistance=500,UpdateConnection=nil,CachedESPs={},LastCleanup=tick(),TrackedItems={},DrawingPool={},RenderThreadActive=false,AlwaysShowContainers=false,CacheColor=Color3.fromRGB(255,80,10)};local function getDrawingFromPool() if ( #WorldESP.DrawingPool>0) then return table.remove(WorldESP.DrawingPool);end local newDrawing=Drawing.new("Text");newDrawing.Size=WorldESP.TextSize;newDrawing.Center=true;newDrawing.Outline=WorldESP.Outline;newDrawing.OutlineColor=WorldESP.OutlineColor;newDrawing.Color=WorldESP.TextColor;newDrawing.Transparency=WorldESP.TextTransparency;newDrawing.Visible=false;return newDrawing;end local function returnDrawingToPool(drawingObj) if  not drawingObj then return;end drawingObj.Visible=false;drawingObj.Text="";table.insert(WorldESP.DrawingPool,drawingObj);end local function getItemCategory(item) local name=item.Name:lower();if name:find("key") then return "KEY";elseif name:find("bandage") then return "MED";elseif (name:find("bean") or name:find("food") or name:find("meat") or name:find("mre")) then return "FOOD";elseif (name:find("fabric") or name:find("cloth")) then return "MATERIALS";elseif (name:find("ammo") or name:find("magazine")) then return "AMMO";elseif (name:find("gun") or name:find("rifle") or name:find("pistol") or name:find("smg") or name:find("weapon")) then return "WEAPON";elseif (name:find("backpack") or name:find("bag")) then return "BACKPACK";elseif (name:find("tool") or name:find("hammer") or name:find("axe")) then return "TOOLS";else return "ITEM";end end local function trackItem(instance,displayName,isKey,isContainer,isDroppedItem) if WorldESP.TrackedItems[instance] then return;end local cleanName=displayName;cleanName=cleanName:gsub("????:%s*","");cleanName=cleanName:gsub("Box:%s*","");cleanName=cleanName:gsub("Crate:%s*","");cleanName=cleanName:gsub("??????:%s*","");cleanName=cleanName:gsub("Chest:%s*","");cleanName=cleanName:gsub("Container:%s*","");cleanName=cleanName:gsub("??????? ????:%s*","");cleanName=cleanName:gsub("Item:%s*","");cleanName=cleanName:gsub("KEY:%s*","");local trackPart;pcall(function() if isContainer then if instance:IsA("MeshPart") then trackPart=instance;else local meshPart=instance:FindFirstChildWhichIsA("MeshPart",true);if meshPart then trackPart=meshPart;else trackPart=instance.PrimaryPart or instance:FindFirstChildWhichIsA("BasePart",true) or (instance:IsA("BasePart") and instance) or nil ;end end else trackPart=instance.PrimaryPart or (instance:IsA("Model") and instance:FindFirstChildWhichIsA("BasePart",true)) or (instance:IsA("BasePart") and instance) or nil ;end end);if  not trackPart then return;end local isHiddenCache=false;if (displayName:find("HiddenCache") or displayName:find("??????:")) then isHiddenCache=true;end WorldESP.TrackedItems[instance]={DisplayName=cleanName,IsKey=isKey or false ,IsContainer=isContainer or false ,IsDroppedItem=isDroppedItem or false ,IsHiddenCache=isHiddenCache,TrackPart=trackPart,Drawing=nil,CachedPosition=nil,LastUpdateTime=tick()};end local function scanForKeys() local folder=Workspace:FindFirstChild("DroppedItems");if  not folder then return;end for _,item in pairs(folder:GetChildren()) do pcall(function() if (item:IsA("Model") and item.PrimaryPart and item.Name:lower():find("key") and  not WorldESP.TrackedItems[item]) then trackItem(item,"KEY: "   .. item.Name ,true,false,true);end end);end end local function scanForContainers() local containers=Workspace:FindFirstChild("Containers");if  not containers then return;end local foundCount=0;local maxToProcess=150;local meshPartCount=0;local nameMatchCount=0;local militaryCrateCount=0;for _,item in pairs(containers:GetDescendants()) do if (foundCount>=maxToProcess) then break;end pcall(function() if item:IsA("MeshPart") then if ( not WorldESP.TrackedItems[item] and  not WorldESP.TrackedItems[item.Parent]) then if item:FindFirstChild("SurfaceAppearance") then local container=item.Parent;local cleanName="????";if (container and container.Name) then cleanName=container.Name:gsub("?","");cleanName=cleanName:gsub("[^%a%d%s_%-]","");if cleanName:match("^%s*$") then if container:FindFirstChild("HiddenCache") then cleanName="HiddenCache";elseif container.Name:find("Hidden") then cleanName="HiddenCache";else cleanName="Container_"   .. foundCount ;end end end trackItem(container,"????: "   .. cleanName ,false,true,false);foundCount=foundCount + 1 ;meshPartCount=meshPartCount + 1 ;else local container=item.Parent;local cleanName="????";if (container and container.Name) then cleanName=container.Name:gsub("?","");cleanName=cleanName:gsub("[^%a%d%s_%-]","");if cleanName:match("^%s*$") then cleanName="Container_"   .. foundCount ;end end trackItem(item.Parent,"????: "   .. cleanName ,false,true,false);foundCount=foundCount + 1 ;meshPartCount=meshPartCount + 1 ;end end end if (item:IsA("Model") and  not WorldESP.TrackedItems[item]) then local hasMeshPart=false;for _,child in pairs(item:GetChildren()) do if child:IsA("MeshPart") then hasMeshPart=true;break;end end if hasMeshPart then local cleanName=item.Name:gsub("?","");cleanName=cleanName:gsub("[^%a%d%s_%-]","");if cleanName:match("^%s*$") then if item:FindFirstChild("HiddenCache") then cleanName="HiddenCache";elseif item.Name:find("Hidden") then cleanName="HiddenCache";else cleanName="Container_"   .. foundCount ;end end trackItem(item,"????: "   .. cleanName ,false,true,false);foundCount=foundCount + 1 ;meshPartCount=meshPartCount + 1 ;end end end);end if (foundCount<maxToProcess) then local specificTypes={"Crate","Case","Box","Container","Chest","????","Storage","?????????","CashRegister","FilingCabinet","LightHouse","ShipWreck","VillageHideout","VillageShop","Hidden","Cache"};for _,typeName in ipairs(specificTypes) do if (foundCount>=maxToProcess) then break;end for _,item in pairs(containers:GetDescendants()) do if (foundCount>=maxToProcess) then break;end pcall(function() if ((item:IsA("Model") or item:IsA("Part") or item:IsA("MeshPart")) and item.Name:lower():find(typeName:lower()) and  not WorldESP.TrackedItems[item] and  not WorldESP.TrackedItems[item.Parent]) then local cleanName=item.Name:gsub("?","");cleanName=cleanName:gsub("[^%a%d%s_%-]","");if cleanName:match("^%s*$") then cleanName=typeName   .. "_"   .. foundCount ;end trackItem(item,typeName   .. ": "   .. cleanName ,false,true,false);foundCount=foundCount + 1 ;nameMatchCount=nameMatchCount + 1 ;end end);end end end for _,item in pairs(Workspace:GetDescendants()) do if (foundCount>=maxToProcess) then break;end pcall(function() if ((item.Name:lower():find("military") and item.Name:lower():find("crate")) or item.Name:lower():find("militarycrate")) then if  not WorldESP.TrackedItems[item] then local cleanName=item.Name:gsub("?","");cleanName=cleanName:gsub("[^%a%d%s_%-]","");if cleanName:match("^%s*$") then cleanName="MilitaryCrate_"   .. foundCount ;end trackItem(item,"??????? ????: "   .. cleanName ,false,true,false);foundCount=foundCount + 1 ;militaryCrateCount=militaryCrateCount + 1 ;end end end);end for _,item in pairs(Workspace:GetDescendants()) do if (foundCount>=maxToProcess) then break;end pcall(function() if (item.Name:find("HiddenCache") or (item.Name:find("Hidden") and item.Name:find("Cache"))) then if  not WorldESP.TrackedItems[item] then trackItem(item,"??????: HiddenCache",false,true,false);foundCount=foundCount + 1 ;end end end);end end local function scanForDroppedItems() local folder=Workspace:FindFirstChild("DroppedItems");if  not folder then return;end local foundCount=0;local maxToProcess=30;for _,item in pairs(folder:GetChildren()) do if (foundCount>=maxToProcess) then break;end pcall(function() if (item:IsA("Model") and  not WorldESP.TrackedItems[item] and  not item.Name:lower():find("key")) then local category=getItemCategory(item);local displayName=category   .. ": "   .. item.Name ;trackItem(item,displayName,false,false,true);foundCount=foundCount + 1 ;end end);end end local CFrameSpeed={Enabled=false,Speed=0.01,KeysEnabled={W=true,A=true,S=true,D=true,Space=true},Connection=nil,FastWalkEnabled=false,FastWalkSpeed=0.017,OriginalSpeed=0.01,DirectWalkSpeedEnabled=false,OriginalWalkSpeed=16,FastWalkSpeedValue=17.7,WalkSpeedConnection=nil};local ZoomSettings={Enabled=false,ZoomTime=0.09,ZoomedAmount=10,Key=Enum.KeyCode.C,OldZoom=Workspace.CurrentCamera.FieldOfView,IsZooming=false,CurrentTween=nil,InputConnection=nil,EndConnection=nil,IsFOVChangerActive=false,IsKeyDown=false,LastZoomFOV=nil};local tabGroups={MainGroup=Window:TabGroup()};local tabs={Aimbot=tabGroups.MainGroup:Tab({Name="Aimbot",Image="rbxassetid://7300477598"}),ESP=tabGroups.MainGroup:Tab({Name="ESP",Image="rbxassetid://7300480952"}),Player=tabGroups.MainGroup:Tab({Name="Player",Image="rbxassetid://7300535052"}),World=tabGroups.MainGroup:Tab({Name="World",Image="rbxassetid://7300489566"}),Settings=tabGroups.MainGroup:Tab({Name="Settings",Image="rbxassetid://7300486042"})};local sections={AimMain=tabs.Aimbot:Section({Side="Left",Name="Mine Settings"}),AimTargeting=tabs.Aimbot:Section({Side="Left",Name="FOV Settings"}),AimVisual=tabs.Aimbot:Section({Side="Right",Name="Visual settings"}),GunMod=tabs.Aimbot:Section({Side="Right",Name="Gun Mod"}),ESPMain=tabs.ESP:Section({Side="Left"}),ESPBox=tabs.ESP:Section({Side="Right"}),ESPColor=tabs.ESP:Section({Side="Left"}),WorldESP=tabs.ESP:Section({Side="Right"}),PlayerMovement=tabs.Player:Section({Side="Left"}),WorldVisual=tabs.World:Section({Side="Left"}),Settings=tabs.Settings:Section({Side="Left"})};local function safeLength(tbl) if (type(tbl)~="table") then return 0;end local count=0;for _ in pairs(tbl) do count=count + 1 ;end return count;end local function safePairs(t) if (type(t)~="table") then return function() end,nil,nil;else return pairs(t);end end local function safeGet(tbl,key) if (type(tbl)~="table") then return nil;end return tbl[key];end local function safeClearTable(tbl) if (type(tbl)~="table") then return;end for k in pairs(tbl) do tbl[k]=nil;end end local function safeAccess(obj,propName) if  not obj then return nil;end local success,result=pcall(function() return obj[propName];end);return (success and result) or nil ;end local function safeCallback(callback,...) if  not callback then return;end local success,result=pcall(callback,...);if  not success then warn("Error in callback: "   .. tostring(result) );end return success,result;end sections.AimMain:Header({Text="Aim Settings"});local function GetClosestPlayer() local MaximumDistance=SilentAim.CircleRadius;local Target=nil;local camera=Workspace.CurrentCamera;local cameraPosition=camera.CFrame.Position;local cameraCFrame=camera.CFrame;for _,v in next,Players:GetPlayers() do if (v.Name~=Players.LocalPlayer.Name) then if (SilentAim.TeamCheck==true) then if (v.Team~=Players.LocalPlayer.Team) then if (v.Character and v.Character:FindFirstChild("HumanoidRootPart")) then if (v.Character:FindFirstChild("Humanoid") and (v.Character.Humanoid.Health~=0)) then local targetPosition=v.Character.HumanoidRootPart.Position;local targetVector=(targetPosition-cameraPosition).Unit;local dotProduct=cameraCFrame.LookVector:Dot(targetVector);if (dotProduct>0) then local ScreenPoint=camera:WorldToScreenPoint(targetPosition);local VectorDistance=(Vector2.new(UserInputService:GetMouseLocation().X,UserInputService:GetMouseLocation().Y) -Vector2.new(ScreenPoint.X,ScreenPoint.Y)).Magnitude;if (VectorDistance<MaximumDistance) then Target=v;MaximumDistance=VectorDistance;end end end end end elseif (v.Character and v.Character:FindFirstChild("HumanoidRootPart")) then if (v.Character:FindFirstChild("Humanoid") and (v.Character.Humanoid.Health~=0)) then local targetPosition=v.Character.HumanoidRootPart.Position;local targetVector=(targetPosition-cameraPosition).Unit;local dotProduct=cameraCFrame.LookVector:Dot(targetVector);if (dotProduct>0) then local ScreenPoint=camera:WorldToScreenPoint(targetPosition);local VectorDistance=(Vector2.new(UserInputService:GetMouseLocation().X,UserInputService:GetMouseLocation().Y) -Vector2.new(ScreenPoint.X,ScreenPoint.Y)).Magnitude;if (VectorDistance<MaximumDistance) then Target=v;MaximumDistance=VectorDistance;end end end end end end return Target;end local function updateAimPart(target) if (target and target.Character) then local targetPart=target.Character:FindFirstChild(SilentAim.AimPart);if targetPart then local viewModel=Workspace.CurrentCamera:FindFirstChild("ViewModel");if viewModel then local itemOffsets=viewModel:FindFirstChild("Item") and viewModel.Item:FindFirstChild("Offsets") ;local aimPart=itemOffsets and itemOffsets:FindFirstChild("AimPart") ;if aimPart then local distance=(aimPart.Position-targetPart.Position).Magnitude;local timeToHit=distance/SilentAim.PredictionSpeed ;local predictedPosition=targetPart.Position + (targetPart.Velocity * timeToHit) ;aimPart.CFrame=CFrame.lookAt(aimPart.Position,predictedPosition);end end end end end UserInputService.InputBegan:Connect(function(Input) if (Input.UserInputType==Enum.UserInputType.MouseButton2) then SilentAim.Holding=true;end if (Input.UserInputType==Enum.UserInputType.MouseButton1) then SilentAim.IsAiming=true;SilentAim.Holding=true;if (SilentAim.Enabled and SilentAim.CurrentTarget) then updateAimPart(SilentAim.CurrentTarget);end end end);UserInputService.InputEnded:Connect(function(Input) if (Input.UserInputType==Enum.UserInputType.MouseButton2) then SilentAim.Holding=false;end if (Input.UserInputType==Enum.UserInputType.MouseButton1) then SilentAim.IsAiming=false;SilentAim.Holding=false;end end);sections.AimMain:Toggle({Name="Enable Aim",Default=false,Callback=function(value) aimbool=value;if (value==true) then if (aimogfunc~=nil) then require(game.ReplicatedStorage.Modules.FPS.Bullet).CreateBullet=aimmodfunc;end elseif (aimogfunc~=nil) then require(game.ReplicatedStorage.Modules.FPS.Bullet).CreateBullet=aimogfunc;end end},"AimToggle");sections.AimMain:Dropdown({Name="Aim Type",Multi=false,Required=true,Options={"Prediction","Instant Hit"},Default="Instant Hit",Callback=function(value) aimtype=value;end},"AimType");sections.AimMain:Dropdown({Name="Aim Part",Multi=false,Required=true,Options={"Head","HumanoidRootPart"},Default="Head",Callback=function(value) aimpart=value;end},"AimPart");sections.AimMain:Slider({Name="Hit Chance",Default=100,Minimum=0,Maximum=100,Callback=function(value) aimchance=value;end},"AimHitChance");sections.AimMain:Toggle({Name="Fake wait (instant hit only)",Default=false,Callback=function(value) aimfakewait=value;end},"AimFakeWait");sections.AimTargeting:Header({Text="Target Settings"});sections.AimTargeting:Toggle({Name="Visibility check",Default=true,Callback=function(value) aimvischeck=value;end},"AimVisCheck");sections.AimTargeting:Toggle({Name="Ping check",Default=true,Callback=function(value) aimselftrack=value;end},"AimPingCheck");sections.AimTargeting:Toggle({Name="Ammo distance check",Default=true,Callback=function(value) aimdistcheck=value;end},"AimDistCheck");sections.AimTargeting:Toggle({Name="Target AI",Default=true,Callback=function(value) aimbots=value;end},"AimTargetBots");sections.AimTargeting:Slider({Name="Aim Distance (Meters)",Default=1000,Minimum=1,Maximum=1500,Callback=function(value) aimdistance=value;end},"AimDistance");sections.AimVisual:Header({Text="Display Settings"});sections.AimVisual:Toggle({Name="Show Target Name",Default=false,Callback=function(value) aimtargetname.Visible=value;end},"ShowTargetName");sections.AimVisual:Toggle({Name="Show Target Tracker",Default=false,Callback=function(value) snaplinebool=value;aimsnapline.Visible=value;end},"TargetTracker");sections.AimVisual:Header({Text="FOV Settings"});sections.AimVisual:Toggle({Name="Dynamic FOV",Default=true,Callback=function(value) aimdynamicfov=value;end},"AimDynamicFOV");sections.AimVisual:Slider({Name="Aim FOV",Default=150,Minimum=0,Maximum=500,Callback=function(value) aimfov=value;aimfovcircle.Radius=value;end},"OblivionAimFOV");sections.AimVisual:Toggle({Name="Show FOV Circle",Default=false,Callback=function(value) aimfovcircle.Visible=value;end},"ShowFOVCircle");sections.AimVisual:Toggle({Name="Fill FOV Circle",Default=false,Callback=function(value) aimfovcircle.Filled=value;end},"FillFOVCircle");sections.AimVisual:Slider({Name="FOV Circle Thickness",Default=2,Minimum=0,Maximum=10,Precision=2,Callback=function(value) aimfovcircle.Thickness=value;end},"FOVThickness");sections.AimVisual:Slider({Name="FOV Circle Transparency",Default=0.2,Minimum=0,Maximum=1,Precision=2,Callback=function(value) aimfovcircle.Transparency=value;end},"FOVTransparency");sections.AimVisual:Colorpicker({Name="FOV Circle Color",Default=Color3.fromRGB(255,255,255),Alpha=0,Callback=function(color) aimfovcircle.Color=color;aimsnapline.Color=color;end},"FOVColor");local previousRenderSteppedConnection=RunService:FindFirstChild("RenderSteppedConnection");if previousRenderSteppedConnection then previousRenderSteppedConnection:Disconnect();end RunService.RenderStepped:Connect(function() aimfovcircle.Position=Vector2.new(UserInputService:GetMouseLocation().X,UserInputService:GetMouseLocation().Y);if (snaplinebool and (aimtarget~=nil) and (aimtargetpart~=nil)) then local targetScreenPos=Workspace.CurrentCamera:WorldToViewportPoint(aimtargetpart.Position);if (targetScreenPos.Z>0) then aimsnapline.From=Vector2.new(UserInputService:GetMouseLocation().X,UserInputService:GetMouseLocation().Y);aimsnapline.To=Vector2.new(targetScreenPos.X,targetScreenPos.Y);aimsnapline.Visible=true;else aimsnapline.Visible=false;end else aimsnapline.Visible=false;end if (aimtarget~=nil) then aimtargetname.Text=aimtarget.Name;aimtargetname.Position=Vector2.new(wcamera.ViewportSize.X/2 ,(wcamera.ViewportSize.Y/2) + aimfov + 20 );else aimtargetname.Text="None";end end);sections.ESPMain:Header({Text="ESP Settings"});sections.ESPMain:Toggle({Name="Enable ESP",Default=false,Callback=function(value) ESP.Enabled=value;if  not value then local espHolder=CoreGui:FindFirstChild("ESPHolder");if espHolder then for _,playerESP in pairs(espHolder:GetChildren()) do for _,child in pairs(playerESP:GetChildren()) do if child:IsA("GuiObject") then child.Visible=false;elseif child:IsA("Highlight") then child.Enabled=false;end end end end for _,skeleton in pairs(ESP.Skeletons or {} ) do for name,line in pairs(skeleton) do if ((type(name)=="string") and (name~="lastPlayerPos") and (name~="lastUpdate") and (name~="lastFoV") and (name~="lastCamPos")) then pcall(function() if (line and (typeof(line)~="table") and (type(line)~="number") and (line.Visible~=nil)) then line.Visible=false;end end);end end end if ESP.GazeLines then for _,line in pairs(ESP.GazeLines) do line.Visible=false;end end else ESP.Initialized=false;end end},"EnableESP");sections.ESPMain:Slider({Name="Max Distance",Default=1500,Minimum=100,Maximum=10000,Precision=2,Callback=function(value) ESP.MaxDistance=value;end},"ESPMaxDistance");sections.ESPMain:Toggle({Name="Names",Default=false,Callback=function(value) ESP.Drawing.Names.Enabled=value;end},"ESPNames");sections.ESPMain:Colorpicker({Name="Names Color",Default=ESP.Drawing.Names.RGB,Alpha=0,Callback=function(color) ESP.Drawing.Names.RGB=color;if (ESP.Enabled and ESP.Initialized) then ESP.Initialized=false;end end},"ESPNamesColor");sections.ESPMain:Toggle({Name="Distance",Default=false,Callback=function(value) ESP.Drawing.Distances.Enabled=value;end},"ESPDistance");sections.ESPMain:Toggle({Name="Healthbar",Default=false,Callback=function(value) ESP.Drawing.Healthbar.Enabled=value;end},"ESPHealthbar");sections.ESPMain:Toggle({Name="Chams",Default=false,Callback=function(value) ESP.Drawing.Chams.Enabled=value;end},"ESPChamsXRay");sections.ESPMain:Toggle({Name="Chams X-Ray",Default=false,Callback=function(value) ESP.Drawing.Chams.XRay=value;if (ESP.TrackedItems and (type(ESP.TrackedItems)=="table")) then for _,data in pairs(ESP.TrackedItems) do if (data and data.Drawing and data.Drawing.Chams) then data.Drawing.Chams.DepthMode=(value and "AlwaysOnTop") or (ESP.Drawing.Chams.VisibleCheck and "Occluded") or "AlwaysOnTop" ;end end end end},"ESPChamsXRayToggle");sections.ESPMain:Toggle({Name="Chams Thermal",Default=false,Callback=function(value) ESP.Drawing.Chams.Thermal=value;end},"ESPChamsThermal");sections.ESPMain:Toggle({Name="look line",Default=false,Callback=function(value) ESP.Drawing.GazeLine.Enabled=value;if ( not value and ESP.GazeLines) then for _,line in pairs(ESP.GazeLines) do line.Visible=false;end end end},"ESPGazeLine");sections.ESPMain:Colorpicker({Name="look line Color",Default=ESP.Drawing.GazeLine.RGB,Alpha=0,Callback=function(color) ESP.Drawing.GazeLine.RGB=color;if ESP.GazeLines then for _,line in pairs(ESP.GazeLines) do line.Color=color;end end end},"ESPGazeLineColor");sections.ESPBox:Header({Text="ESP Box Settings"});sections.ESPBox:Toggle({Name="ESP Box",Default=false,Callback=function(value) ESP.Drawing.Boxes.Full.Enabled=value;end},"ESPBox");sections.ESPBox:Toggle({Name="Filled Box",Default=false,Callback=function(value) ESP.Drawing.Boxes.Filled.Enabled=value;end},"ESPFilledBox");sections.ESPBox:Toggle({Name="Animated Boxes",Default=false,Callback=function(value) ESP.Drawing.Boxes.Animate=value;end},"AnimatedBoxes");sections.ESPBox:Slider({Name="Rotation Speed",Default=300,Minimum=1,Maximum=500,Precision=2,Callback=function(value) ESP.Drawing.Boxes.RotationSpeed=value;end},"RotationSpeed");sections.ESPColor:Header({Text="ESP Color Settings"});sections.ESPColor:Colorpicker({Name="Box Gradient 1 Color",Default=ESP.Drawing.Boxes.GradientFillRGB1,Alpha=0,Callback=function(color) ESP.Drawing.Boxes.GradientFillRGB1=color;ESP.Drawing.Boxes.GradientRGB1=color;if (ESP.Enabled and ESP.Initialized) then ESP.Initialized=false;end end},"BoxGradient1Color");sections.ESPColor:Colorpicker({Name="Box Gradient 2 Color",Default=ESP.Drawing.Boxes.GradientFillRGB2,Alpha=0,Callback=function(color) ESP.Drawing.Boxes.GradientFillRGB2=color;ESP.Drawing.Boxes.GradientRGB2=color;end},"BoxGradient1Color");sections.ESPColor:Colorpicker({Name="Healthbar Gradient 2 Color",Default=ESP.Drawing.Healthbar.GradientRGB2,Alpha=0,Callback=function(color) ESP.Drawing.Healthbar.GradientRGB2=color;end},"HealthbarGradient2Color");sections.ESPColor:Colorpicker({Name="Healthbar Gradient 3 Color",Default=ESP.Drawing.Healthbar.GradientRGB3,Alpha=0,Callback=function(color) ESP.Drawing.Healthbar.GradientRGB3=color;end},"HealthbarGradient3Color");sections.ESPColor:Colorpicker({Name="Chams Fill Color",Default=ESP.Drawing.Chams.FillRGB,Alpha=0,Callback=function(color) ESP.Drawing.Chams.FillRGB=color;end},"ChamsFillColor");sections.ESPColor:Colorpicker({Name="Chams Outline Color",Default=ESP.Drawing.Chams.OutlineRGB,Alpha=0,Callback=function(color) ESP.Drawing.Chams.OutlineRGB=color;end},"ChamsOutlineColor");sections.ESPColor:Slider({Name="Chams Fill Transparency",Default=50,Minimum=0,Maximum=100,Callback=function(value) ESP.Drawing.Chams.Fill_Transparency=value;end},"ChamsFillTransparency");sections.ESPColor:Slider({Name="Chams Outline Transparency",Default=50,Minimum=0,Maximum=100,Callback=function(value) ESP.Drawing.Chams.Outline_Transparency=value;end},"ChamsOutlineTransparency");sections.ESPColor:Button({Name="Reset Colors to Default",Callback=function() ESP.Drawing.Boxes.GradientFillRGB1=Color3.fromRGB(19,0,255);ESP.Drawing.Boxes.GradientRGB1=Color3.fromRGB(19,0,255);ESP.Drawing.Boxes.GradientFillRGB2=Color3.fromRGB(255,0,0);ESP.Drawing.Boxes.GradientRGB2=Color3.fromRGB(255,0,0);ESP.Drawing.Healthbar.GradientRGB1=Color3.fromRGB(200,0,0);ESP.Drawing.Healthbar.GradientRGB2=Color3.fromRGB(150,150,0);ESP.Drawing.Healthbar.GradientRGB3=Color3.fromRGB(0,255,0);ESP.Drawing.Chams.FillRGB=Color3.fromRGB(119,120,255);ESP.Drawing.Chams.OutlineRGB=Color3.fromRGB(119,120,255);ESP.Drawing.Chams.Fill_Transparency=50;ESP.Drawing.Chams.Outline_Transparency=50;ESP.Drawing.Names.RGB=Color3.fromRGB(255,255,255);ESP.Drawing.Distances.RGB=Color3.fromRGB(255,255,255);ESP.Options.TeamcheckRGB=Color3.fromRGB(0,255,0);ESP.Options.FriendcheckRGB=Color3.fromRGB(0,255,0);ESP.Options.HighlightRGB=Color3.fromRGB(255,0,0);sections.ESPColor:get_element("BoxGradient1Color"):set_value(ESP.Drawing.Boxes.GradientFillRGB1);sections.ESPColor:get_element("BoxGradient2Color"):set_value(ESP.Drawing.Boxes.GradientFillRGB2);sections.ESPColor:get_element("HealthbarGradient1Color"):set_value(ESP.Drawing.Healthbar.GradientRGB1);sections.ESPColor:get_element("HealthbarGradient2Color"):set_value(ESP.Drawing.Healthbar.GradientRGB2);sections.ESPColor:get_element("HealthbarGradient3Color"):set_value(ESP.Drawing.Healthbar.GradientRGB3);sections.ESPColor:get_element("ChamsFillColor"):set_value(ESP.Drawing.Chams.FillRGB);sections.ESPColor:get_element("ChamsOutlineColor"):set_value(ESP.Drawing.Chams.OutlineRGB);sections.ESPMain:get_element("ESPNamesColor"):set_value(ESP.Drawing.Names.RGB);sections.ESPMain:get_element("ESPDistanceColor"):set_value(ESP.Drawing.Distances.RGB);sections.ESPMain:get_element("ESPTeamCheckColor"):set_value(ESP.Options.TeamcheckRGB);sections.ESPMain:get_element("ESPFriendCheckColor"):set_value(ESP.Options.FriendcheckRGB);sections.ESPMain:get_element("ESPHighlightColor"):set_value(ESP.Options.HighlightRGB);if (ESP.Enabled and ESP.Initialized) then ESP.Initialized=false;end end});sections.PlayerMovement:Header({Text="Movement Settings"});sections.PlayerMovement:Toggle({Name="Enable SpeedHack",Default=false,Callback=function(value) CFrameSpeed.Enabled=value;if CFrameSpeed.Enabled then if CFrameSpeed.Connection then CFrameSpeed.Connection:Disconnect();end CFrameSpeed.Connection=RunService.RenderStepped:Connect(function() local player=Players.LocalPlayer;local character=player.Character;if ( not character or  not character:FindFirstChild("HumanoidRootPart") or  not character:FindFirstChild("Humanoid")) then return;end local hrp=character.HumanoidRootPart;local humanoid=character.Humanoid;if ((humanoid.MoveDirection.Magnitude>0) or (CFrameSpeed.KeysEnabled.Space and UserInputService:IsKeyDown(Enum.KeyCode.Space))) then local moveDirection=Vector3.new(0,0,0);if (CFrameSpeed.KeysEnabled.W and UserInputService:IsKeyDown(Enum.KeyCode.W)) then moveDirection=moveDirection + (Workspace.CurrentCamera.CFrame.LookVector * Vector3.new(1,0,1)).Unit ;end if (CFrameSpeed.KeysEnabled.S and UserInputService:IsKeyDown(Enum.KeyCode.S)) then moveDirection=moveDirection-(Workspace.CurrentCamera.CFrame.LookVector * Vector3.new(1,0,1)).Unit ;end if (CFrameSpeed.KeysEnabled.A and UserInputService:IsKeyDown(Enum.KeyCode.A)) then moveDirection=moveDirection-(Workspace.CurrentCamera.CFrame.RightVector * Vector3.new(1,0,1)).Unit ;end if (CFrameSpeed.KeysEnabled.D and UserInputService:IsKeyDown(Enum.KeyCode.D)) then moveDirection=moveDirection + (Workspace.CurrentCamera.CFrame.RightVector * Vector3.new(1,0,1)).Unit ;end if (CFrameSpeed.KeysEnabled.Space and UserInputService:IsKeyDown(Enum.KeyCode.Space)) then moveDirection=moveDirection + Vector3.new(0,1,0) ;end if (moveDirection.Magnitude>0) then moveDirection=moveDirection.Unit;end hrp.CFrame=hrp.CFrame + (moveDirection * CFrameSpeed.Speed) ;end end);elseif CFrameSpeed.Connection then CFrameSpeed.Connection:Disconnect();CFrameSpeed.Connection=nil;end end},"EnableSpeedHack");sections.PlayerMovement:Slider({Name="Speed Multiplier",Default=0.01,Minimum=0.01,Maximum=0.05,Precision=2,Callback=function(value) if  not CFrameSpeed.FastWalkEnabled then CFrameSpeed.Speed=value;CFrameSpeed.OriginalSpeed=value;end end},"SpeedMultiplier");sections.PlayerMovement:Toggle({Name="Fast Walk",Default=false,Callback=function(value) CFrameSpeed.FastWalkEnabled=value;CFrameSpeed.DirectWalkSpeedEnabled=value;if CFrameSpeed.WalkSpeedConnection then CFrameSpeed.WalkSpeedConnection:Disconnect();CFrameSpeed.WalkSpeedConnection=nil;end if value then CFrameSpeed.OriginalSpeed=CFrameSpeed.Speed;CFrameSpeed.Speed=CFrameSpeed.FastWalkSpeed;CFrameSpeed.WalkSpeedConnection=RunService.Heartbeat:Connect(function() local player=Players.LocalPlayer;if  not player then return;end local character=player.Character;if  not character then return;end local humanoid=character:FindFirstChild("Humanoid");if  not humanoid then return;end if  not CFrameSpeed.OriginalWalkSpeedSaved then CFrameSpeed.OriginalWalkSpeed=humanoid.WalkSpeed;CFrameSpeed.OriginalWalkSpeedSaved=true;end humanoid.WalkSpeed=CFrameSpeed.FastWalkSpeedValue;end);if  not CFrameSpeed.Enabled then CFrameSpeed.Enabled=true;if CFrameSpeed.Connection then CFrameSpeed.Connection:Disconnect();end CFrameSpeed.Connection=RunService.RenderStepped:Connect(function() local player=Players.LocalPlayer;local character=player.Character;if ( not character or  not character:FindFirstChild("HumanoidRootPart") or  not character:FindFirstChild("Humanoid")) then return;end local hrp=character.HumanoidRootPart;local humanoid=character.Humanoid;if ((humanoid.MoveDirection.Magnitude>0) or (CFrameSpeed.KeysEnabled.Space and UserInputService:IsKeyDown(Enum.KeyCode.Space))) then local moveDirection=Vector3.new(0,0,0);if (CFrameSpeed.KeysEnabled.W and UserInputService:IsKeyDown(Enum.KeyCode.W)) then moveDirection=moveDirection + (Workspace.CurrentCamera.CFrame.LookVector * Vector3.new(1,0,1)).Unit ;end if (CFrameSpeed.KeysEnabled.S and UserInputService:IsKeyDown(Enum.KeyCode.S)) then moveDirection=moveDirection-(Workspace.CurrentCamera.CFrame.LookVector * Vector3.new(1,0,1)).Unit ;end if (CFrameSpeed.KeysEnabled.A and UserInputService:IsKeyDown(Enum.KeyCode.A)) then moveDirection=moveDirection-(Workspace.CurrentCamera.CFrame.RightVector * Vector3.new(1,0,1)).Unit ;end if (CFrameSpeed.KeysEnabled.D and UserInputService:IsKeyDown(Enum.KeyCode.D)) then moveDirection=moveDirection + (Workspace.CurrentCamera.CFrame.RightVector * Vector3.new(1,0,1)).Unit ;end if (CFrameSpeed.KeysEnabled.Space and UserInputService:IsKeyDown(Enum.KeyCode.Space)) then moveDirection=moveDirection + Vector3.new(0,1,0) ;end if (moveDirection.Magnitude>0) then moveDirection=moveDirection.Unit;end hrp.CFrame=hrp.CFrame + (moveDirection * CFrameSpeed.Speed) ;end end);end else CFrameSpeed.Speed=CFrameSpeed.OriginalSpeed;if CFrameSpeed.OriginalWalkSpeedSaved then local player=Players.LocalPlayer;if (player and player.Character and player.Character:FindFirstChild("Humanoid")) then player.Character.Humanoid.WalkSpeed=CFrameSpeed.OriginalWalkSpeed;end CFrameSpeed.OriginalWalkSpeedSaved=false;end if (CFrameSpeed.Connection and  not CFrameSpeed.Enabled) then CFrameSpeed.Connection:Disconnect();CFrameSpeed.Connection=nil;end end end},"FastWalk");local InventoryViewer={Enabled=false,FOVRadius=80,FOVColor=Color3.fromRGB(255,255,255),FOVTransparency=0.7,FOVCircle=nil,GUIEnabled=false,ScreenGui=nil,MainContainer=nil,ScrollingFrame=nil,HotbarScrollingFrame=nil,ArmorScrollingFrame=nil,FOVVisible=false,UpdateConnection=nil,Theme={Background=Color3.fromRGB(25,25,25),Border=Color3.fromRGB(255,255,255),Text=Color3.fromRGB(255,255,255),ItemBg=Color3.fromRGB(40,40,40),ItemHover=Color3.fromRGB(60,60,60),SlotBg=Color3.fromRGB(20,20,20)}};local inventoryViewerSection=tabs.Player:Section({Side="Right",Name="Inventory Viewer"});inventoryViewerSection:Header({Text="Inventory Viewer"});inventoryViewerSection:Toggle({Name="Enable Inventory Viewer",Default=false,Callback=function(value) InventoryViewer.Enabled=value;if InventoryViewer.Enabled then if  not InventoryViewer.FOVCircle then InventoryViewer.FOVCircle=Drawing.new("Circle");InventoryViewer.FOVCircle.Radius=InventoryViewer.FOVRadius;InventoryViewer.FOVCircle.Filled=false;InventoryViewer.FOVCircle.Color=InventoryViewer.FOVColor;InventoryViewer.FOVCircle.Transparency=InventoryViewer.FOVTransparency;InventoryViewer.FOVCircle.NumSides=64;InventoryViewer.FOVCircle.Thickness=1;end InventoryViewer.FOVCircle.Visible=InventoryViewer.FOVVisible;if  not InventoryViewer.ScreenGui then local playerGui=Players.LocalPlayer:WaitForChild("PlayerGui",10);if  not playerGui then return;end local screenGui=Instance.new("ScreenGui");screenGui.Name="PlayerModelFinder";screenGui.Parent=playerGui;InventoryViewer.ScreenGui=screenGui;local mainContainer=Instance.new("Frame");mainContainer.Name="MainContainer";mainContainer.Size=UDim2.new(0,550,0,265);mainContainer.Position=UDim2.new(0.5, -275,1, -378);mainContainer.BackgroundTransparency=1;mainContainer.Parent=screenGui;local shadow=Instance.new("ImageLabel");shadow.Name="Shadow";shadow.AnchorPoint=Vector2.new(0.5,0.5);shadow.BackgroundTransparency=1;shadow.Position=UDim2.new(0.5,0,0.5,5);shadow.Size=UDim2.new(1,20,1,20);shadow.ZIndex=0;shadow.Image="rbxassetid://5554236805";shadow.ImageColor3=Color3.fromRGB(0,0,0);shadow.ImageTransparency=0.6;shadow.ScaleType=Enum.ScaleType.Slice;shadow.SliceCenter=Rect.new(23,23,277,277);shadow.Parent=mainContainer;local realHotbar=Instance.new("Frame");realHotbar.Name="RealHotbar";realHotbar.Size=UDim2.new(0,525,0,55);realHotbar.Position=UDim2.new(0.5, -262,1, -65);realHotbar.BackgroundColor3=InventoryViewer.Theme.Background;realHotbar.BackgroundTransparency=0.2;realHotbar.BorderSizePixel=0;local cornerHotbar=Instance.new("UICorner");cornerHotbar.CornerRadius=UDim.new(0,8);cornerHotbar.Parent=realHotbar;local strokeHotbar=Instance.new("UIStroke");strokeHotbar.Color=InventoryViewer.Theme.Border;strokeHotbar.Thickness=1.5;strokeHotbar.Parent=realHotbar;realHotbar.Parent=mainContainer;local realHotbarLabel=Instance.new("TextLabel");realHotbarLabel.Name="RealHotbarLabel";realHotbarLabel.Size=UDim2.new(0,80,0,20);realHotbarLabel.Position=UDim2.new(0,10,0, -22);realHotbarLabel.BackgroundColor3=InventoryViewer.Theme.Background;realHotbarLabel.BackgroundTransparency=0.2;realHotbarLabel.TextColor3=InventoryViewer.Theme.Text;realHotbarLabel.Text="hotbar";realHotbarLabel.Font=Enum.Font.GothamBold;realHotbarLabel.TextSize=14;realHotbarLabel.TextXAlignment=Enum.TextXAlignment.Center;local cornerHotbarLabel=Instance.new("UICorner");cornerHotbarLabel.CornerRadius=UDim.new(0,4);cornerHotbarLabel.Parent=realHotbarLabel;realHotbarLabel.Parent=realHotbar;local inventoryViewerHotbar=Instance.new("Frame");inventoryViewerHotbar.Name="InventoryViewerHotbar";inventoryViewerHotbar.Size=UDim2.new(0,475,0,50);inventoryViewerHotbar.Position=UDim2.new(0.5, -238,1, -135);inventoryViewerHotbar.BackgroundColor3=InventoryViewer.Theme.Background;inventoryViewerHotbar.BackgroundTransparency=0.2;inventoryViewerHotbar.BorderSizePixel=0;local cornerEquip=Instance.new("UICorner");cornerEquip.CornerRadius=UDim.new(0,8);cornerEquip.Parent=inventoryViewerHotbar;local strokeEquip=Instance.new("UIStroke");strokeEquip.Color=InventoryViewer.Theme.Border;strokeEquip.Thickness=1.5;strokeEquip.Parent=inventoryViewerHotbar;inventoryViewerHotbar.Parent=mainContainer;local inventoryViewerHotbarLabel=Instance.new("TextLabel");inventoryViewerHotbarLabel.Name="InventoryViewerHotbarLabel";inventoryViewerHotbarLabel.Size=UDim2.new(0,80,0,20);inventoryViewerHotbarLabel.Position=UDim2.new(0,10,0, -22);inventoryViewerHotbarLabel.BackgroundColor3=InventoryViewer.Theme.Background;inventoryViewerHotbarLabel.BackgroundTransparency=0.2;inventoryViewerHotbarLabel.TextColor3=InventoryViewer.Theme.Text;inventoryViewerHotbarLabel.Text="equip";inventoryViewerHotbarLabel.Font=Enum.Font.GothamBold;inventoryViewerHotbarLabel.TextSize=14;inventoryViewerHotbarLabel.TextXAlignment=Enum.TextXAlignment.Center;local cornerEquipLabel=Instance.new("UICorner");cornerEquipLabel.CornerRadius=UDim.new(0,4);cornerEquipLabel.Parent=inventoryViewerHotbarLabel;inventoryViewerHotbarLabel.Parent=inventoryViewerHotbar;local inventoryViewArmor=Instance.new("Frame");inventoryViewArmor.Name="InventoryViewArmor";inventoryViewArmor.Size=UDim2.new(0,425,0,50);inventoryViewArmor.Position=UDim2.new(0.5, -212,1, -205);inventoryViewArmor.BackgroundColor3=InventoryViewer.Theme.Background;inventoryViewArmor.BackgroundTransparency=0.2;inventoryViewArmor.BorderSizePixel=0;local cornerArmor=Instance.new("UICorner");cornerArmor.CornerRadius=UDim.new(0,8);cornerArmor.Parent=inventoryViewArmor;local strokeArmor=Instance.new("UIStroke");strokeArmor.Color=InventoryViewer.Theme.Border;strokeArmor.Thickness=1.5;strokeArmor.Parent=inventoryViewArmor;inventoryViewArmor.Parent=mainContainer;local inventoryViewArmorLabel=Instance.new("TextLabel");inventoryViewArmorLabel.Name="InventoryViewArmorLabel";inventoryViewArmorLabel.Size=UDim2.new(0,80,0,20);inventoryViewArmorLabel.Position=UDim2.new(0,10,0, -22);inventoryViewArmorLabel.BackgroundColor3=InventoryViewer.Theme.Background;inventoryViewArmorLabel.BackgroundTransparency=0.2;inventoryViewArmorLabel.TextColor3=InventoryViewer.Theme.Text;inventoryViewArmorLabel.Text="armor";inventoryViewArmorLabel.Font=Enum.Font.GothamBold;inventoryViewArmorLabel.TextSize=14;inventoryViewArmorLabel.TextXAlignment=Enum.TextXAlignment.Center;local cornerArmorLabel=Instance.new("UICorner");cornerArmorLabel.CornerRadius=UDim.new(0,4);cornerArmorLabel.Parent=inventoryViewArmorLabel;inventoryViewArmorLabel.Parent=inventoryViewArmor;InventoryViewer.MainContainer=mainContainer;local scrollingFrame=Instance.new("ScrollingFrame");scrollingFrame.Size=UDim2.new(1, -10,1, -5);scrollingFrame.Position=UDim2.new(0,5,0,0);scrollingFrame.CanvasSize=UDim2.new(0,0,0,0);scrollingFrame.ScrollBarThickness=0;scrollingFrame.BackgroundTransparency=1;scrollingFrame.Parent=realHotbar;InventoryViewer.ScrollingFrame=scrollingFrame;local listLayout=Instance.new("UIListLayout");listLayout.Padding=UDim.new(0,10);listLayout.FillDirection=Enum.FillDirection.Horizontal;listLayout.HorizontalAlignment=Enum.HorizontalAlignment.Center;listLayout.VerticalAlignment=Enum.VerticalAlignment.Center;listLayout.Parent=scrollingFrame;local paddingHotbar=Instance.new("UIPadding");paddingHotbar.PaddingTop=UDim.new(0, -3);paddingHotbar.Parent=scrollingFrame;local hotbarScrollingFrame=Instance.new("ScrollingFrame");hotbarScrollingFrame.Size=UDim2.new(1, -10,1, -5);hotbarScrollingFrame.Position=UDim2.new(0,5,0,0);hotbarScrollingFrame.CanvasSize=UDim2.new(0,0,0,0);hotbarScrollingFrame.ScrollBarThickness=0;hotbarScrollingFrame.BackgroundTransparency=1;hotbarScrollingFrame.Parent=inventoryViewerHotbar;InventoryViewer.HotbarScrollingFrame=hotbarScrollingFrame;local hotbarListLayout=Instance.new("UIListLayout");hotbarListLayout.Padding=UDim.new(0,10);hotbarListLayout.FillDirection=Enum.FillDirection.Horizontal;hotbarListLayout.HorizontalAlignment=Enum.HorizontalAlignment.Center;hotbarListLayout.VerticalAlignment=Enum.VerticalAlignment.Center;hotbarListLayout.Parent=hotbarScrollingFrame;local paddingEquip=Instance.new("UIPadding");paddingEquip.PaddingTop=UDim.new(0, -3);paddingEquip.Parent=hotbarScrollingFrame;local armorScrollingFrame=Instance.new("ScrollingFrame");armorScrollingFrame.Size=UDim2.new(1, -10,1, -5);armorScrollingFrame.Position=UDim2.new(0,5,0,0);armorScrollingFrame.CanvasSize=UDim2.new(0,0,0,0);armorScrollingFrame.ScrollBarThickness=0;armorScrollingFrame.BackgroundTransparency=1;armorScrollingFrame.Parent=inventoryViewArmor;InventoryViewer.ArmorScrollingFrame=armorScrollingFrame;local armorListLayout=Instance.new("UIListLayout");armorListLayout.Padding=UDim.new(0,10);armorListLayout.FillDirection=Enum.FillDirection.Horizontal;armorListLayout.HorizontalAlignment=Enum.HorizontalAlignment.Center;armorListLayout.VerticalAlignment=Enum.VerticalAlignment.Center;armorListLayout.Parent=armorScrollingFrame;local paddingArmor=Instance.new("UIPadding");paddingArmor.PaddingTop=UDim.new(0, -3);paddingArmor.Parent=armorScrollingFrame;end InventoryViewer.ScreenGui.Enabled=true;InventoryViewer.GUIEnabled=true;if  not InventoryViewer.UpdateConnection then InventoryViewer.UpdateConnection=RunService.RenderStepped:Connect(function() if InventoryViewer.Enabled then if InventoryViewer.FOVCircle then InventoryViewer.FOVCircle.Position=Vector2.new(Workspace.CurrentCamera.ViewportSize.X/2 ,Workspace.CurrentCamera.ViewportSize.Y/2 );end if InventoryViewer.GUIEnabled then InventoryViewer.updateGUI();end elseif InventoryViewer.UpdateConnection then InventoryViewer.UpdateConnection:Disconnect();InventoryViewer.UpdateConnection=nil;end end);end else if InventoryViewer.FOVCircle then InventoryViewer.FOVCircle.Visible=false;end if InventoryViewer.ScreenGui then InventoryViewer.ScreenGui.Enabled=false;end InventoryViewer.GUIEnabled=false;if InventoryViewer.UpdateConnection then InventoryViewer.UpdateConnection:Disconnect();InventoryViewer.UpdateConnection=nil;end end end},"EnableInventoryViewer");inventoryViewerSection:Slider({Name="FOV Radius",Default=80,Minimum=10,Maximum=500,Precision=2,Callback=function(value) InventoryViewer.FOVRadius=value;if InventoryViewer.FOVCircle then InventoryViewer.FOVCircle.Radius=InventoryViewer.FOVRadius;end end},"InventoryViewerFOVRadius");inventoryViewerSection:Toggle({Name="Show FOV",Default=false,Callback=function(value) InventoryViewer.FOVVisible=value;if InventoryViewer.FOVCircle then InventoryViewer.FOVCircle.Visible=value and InventoryViewer.Enabled ;end end},"InventoryViewerShowFOV");inventoryViewerSection:Colorpicker({Name="FOV Circle Color",Default=InventoryViewer.FOVColor,Alpha=0,Callback=function(color) InventoryViewer.FOVColor=color;if InventoryViewer.FOVCircle then InventoryViewer.FOVCircle.Color=color;end end},"InventoryViewerFOVColor");InventoryViewer.isPlayerInFOV=function(player) local hrp=player.Character and player.Character:FindFirstChild("HumanoidRootPart") ;if  not hrp then return false;end local screenPos,onScreen=workspace.CurrentCamera:WorldToScreenPoint(hrp.Position);if  not onScreen then return false;end local center=Vector2.new(workspace.CurrentCamera.ViewportSize.X/2 ,workspace.CurrentCamera.ViewportSize.Y/2 );local distance=(center-Vector2.new(screenPos.X,screenPos.Y)).Magnitude;return distance<=InventoryViewer.FOVRadius ;end;InventoryViewer.scanForItems=function(player) local result={clothing={},equipment={},inventory={}};local folder=game:GetService("ReplicatedStorage"):FindFirstChild("Players");if  not folder then return result;end local playerFolder=folder:FindFirstChild(player.Name);if  not playerFolder then return result;end local function safeAccess(obj,propName) if  not obj then return nil;end local success,result=pcall(function() return obj[propName];end);return (success and result) or nil ;end for category,list in pairs(result) do local subfolder=playerFolder:FindFirstChild(category:sub(1,1):upper()   .. category:sub(2) );if subfolder then for _,item in ipairs(subfolder:GetChildren()) do if item:IsA("StringValue") then table.insert(list,item);end end end end return result;end;InventoryViewer.getItemIcon=function(item) local props=item:FindFirstChild("ItemProperties");local icon=props and props:FindFirstChild("ItemIcon") ;return (icon and icon:IsA("ImageLabel") and icon.Image) or nil ;end;InventoryViewer.clearGUI=function() if InventoryViewer.ScrollingFrame then for _,child in ipairs(InventoryViewer.ScrollingFrame:GetChildren()) do if  not child:IsA("UIListLayout") then child:Destroy();end end end if InventoryViewer.HotbarScrollingFrame then for _,child in ipairs(InventoryViewer.HotbarScrollingFrame:GetChildren()) do if  not child:IsA("UIListLayout") then child:Destroy();end end end if InventoryViewer.ArmorScrollingFrame then for _,child in ipairs(InventoryViewer.ArmorScrollingFrame:GetChildren()) do if  not child:IsA("UIListLayout") then child:Destroy();end end end end;InventoryViewer.createItemIcon=function(itemName,image,parent) if  not parent then return;end local frame=Instance.new("Frame");frame.Size=UDim2.new(0,40,0,40);frame.BackgroundColor3=InventoryViewer.Theme.SlotBg;frame.BackgroundTransparency=0.1;frame.BorderSizePixel=0;local corner=Instance.new("UICorner");corner.CornerRadius=UDim.new(0,6);corner.Parent=frame;local stroke=Instance.new("UIStroke");stroke.Color=InventoryViewer.Theme.Border;stroke.Thickness=1.5;stroke.Parent=frame;local innerShadow=Instance.new("ImageLabel");innerShadow.Name="InnerShadow";innerShadow.BackgroundTransparency=1;innerShadow.Position=UDim2.new(0,0,0,0);innerShadow.Size=UDim2.new(1,0,1,0);innerShadow.ZIndex=2;innerShadow.Image="rbxassetid://5554236805";innerShadow.ImageColor3=Color3.fromRGB(0,0,0);innerShadow.ImageTransparency=0.8;innerShadow.ScaleType=Enum.ScaleType.Slice;innerShadow.SliceCenter=Rect.new(23,23,277,277);innerShadow.Parent=frame;frame.Parent=parent;local icon=Instance.new("ImageLabel");icon.Size=UDim2.new(0.8,0,0.8,0);icon.Position=UDim2.new(0.1,0,0.1,0);icon.BackgroundTransparency=1;icon.ZIndex=3;if image then icon.Image=image;else icon.BackgroundColor=Color3.fromRGB(150,150,150);icon.BackgroundTransparency=0.7;end icon.Parent=frame;local tooltip=Instance.new("Frame");tooltip.Size=UDim2.new(0,120,0,25);tooltip.Position=UDim2.new(0.5, -60,0, -30);tooltip.BackgroundColor3=InventoryViewer.Theme.Background;tooltip.BackgroundTransparency=0.1;tooltip.Visible=false;tooltip.ZIndex=10;tooltip.Parent=frame;local tooltipCorner=Instance.new("UICorner");tooltipCorner.CornerRadius=UDim.new(0,4);tooltipCorner.Parent=tooltip;local tooltipStroke=Instance.new("UIStroke");tooltipStroke.Color=InventoryViewer.Theme.Border;tooltipStroke.Thickness=1.5;tooltipStroke.Parent=tooltip;local tooltipText=Instance.new("TextLabel");tooltipText.Text=itemName;tooltipText.Size=UDim2.new(1, -10,1,0);tooltipText.Position=UDim2.new(0,5,0,0);tooltipText.BackgroundTransparency=1;tooltipText.TextColor3=InventoryViewer.Theme.Text;tooltipText.TextSize=12;tooltipText.Font=Enum.Font.GothamBold;tooltipText.TextWrapped=true;tooltipText.ZIndex=11;tooltipText.Parent=tooltip;frame.MouseEnter:Connect(function() game:GetService("TweenService"):Create(frame,TweenInfo.new(0.2),{BackgroundColor3=InventoryViewer.Theme.ItemHover}).Play();game:GetService("TweenService"):Create(stroke,TweenInfo.new(0.2),{Thickness=2}).Play();tooltip.Visible=true;end);frame.MouseLeave:Connect(function() game:GetService("TweenService"):Create(frame,TweenInfo.new(0.2),{BackgroundColor3=InventoryViewer.Theme.SlotBg}).Play();game:GetService("TweenService"):Create(stroke,TweenInfo.new(0.2),{Thickness=1.5}).Play();tooltip.Visible=false;end);return frame;end;InventoryViewer.updateGUI=function() InventoryViewer.clearGUI();for _,player in ipairs(Players:GetPlayers()) do if ((player~=Players.LocalPlayer) and InventoryViewer.isPlayerInFOV(player)) then local items=InventoryViewer.scanForItems(player);local hasItems=( #items.clothing>0) or ( #items.equipment>0) or ( #items.inventory>0) ;if hasItems then local maxItemsPerRow=math.floor((InventoryViewer.ArmorScrollingFrame.AbsoluteSize.X-20)/55 );for i,item in ipairs(items.clothing) do local icon=InventoryViewer.createItemIcon(item.Name,InventoryViewer.getItemIcon(item),InventoryViewer.ArmorScrollingFrame);end for i,item in ipairs(items.equipment) do local icon=InventoryViewer.createItemIcon(item.Name,InventoryViewer.getItemIcon(item),InventoryViewer.HotbarScrollingFrame);end for i,item in ipairs(items.inventory) do local icon=InventoryViewer.createItemIcon(item.Name,InventoryViewer.getItemIcon(item),InventoryViewer.ScrollingFrame);end if InventoryViewer.ScrollingFrame then local itemCount= #items.inventory;local contentWidth=math.min(itemCount * 55 ,maxItemsPerRow * 55 );InventoryViewer.ScrollingFrame.CanvasSize=UDim2.new(0,contentWidth + 20 ,0,0);end if InventoryViewer.HotbarScrollingFrame then local itemCount= #items.equipment;local contentWidth=math.min(itemCount * 55 ,maxItemsPerRow * 55 );InventoryViewer.HotbarScrollingFrame.CanvasSize=UDim2.new(0,contentWidth + 20 ,0,0);end if InventoryViewer.ArmorScrollingFrame then local itemCount= #items.clothing;local contentWidth=math.min(itemCount * 55 ,maxItemsPerRow * 55 );InventoryViewer.ArmorScrollingFrame.CanvasSize=UDim2.new(0,contentWidth + 20 ,0,0);end end end end end;local bulletTracerSection=tabs.Player:Section({Side="Right",Name="Bullet Tracers"});bulletTracerSection:Header({Text="Bullet Tracers"});bulletTracerSection:Toggle({Name="Enable Bullet Tracers",Default=false,Callback=function(value) _G.ScriptData=_G.ScriptData or {activeBulletTracers={},bulletTracerEnabled=false,bulletTracerLifetime=1,bulletTracerWidth=0.2,bulletTracerFadeoutPoint=0.7,bulletTracerColor=Color3.fromRGB(255,0,0),bulletTracerSpeed=5,bulletTracerTexture="http://www.roblox.com/asset/?id=446111271",bulletTracerMaxDistance=1300} ;_G.ScriptData.bulletTracerEnabled=value;if  not value then if _G.ScriptData.activeBulletTracers then for _,tracer in pairs(_G.ScriptData.activeBulletTracers) do if (tracer and tracer.part) then pcall(function() tracer.part:Destroy();end);end end _G.ScriptData.activeBulletTracers={};end end end},"EnableBulletTracers");bulletTracerSection:Slider({Name="Tracer Lifetime",Default=1,Minimum=0,Maximum=5,Precision=1,Callback=function(value) if  not _G.ScriptData then return;end _G.ScriptData.bulletTracerLifetime=value;end},"TracerLifetime");bulletTracerSection:Colorpicker({Name="Tracer Color",Default=(_G.ScriptData and _G.ScriptData.bulletTracerColor) or Color3.fromRGB(255,0,0) ,Alpha=0,Callback=function(color) if  not _G.ScriptData then return;end _G.ScriptData.bulletTracerColor=color;end},"TracerColor");bulletTracerSection:Dropdown({Name="Tracer Texture",Multi=false,Required=true,Options={"Default","Laser","Barbed Wire","Smoke"},Default="Default",Callback=function(value) if  not _G.ScriptData then return;end local textureMap={Default="http://www.roblox.com/asset/?id=446111271",Laser="http://www.roblox.com/asset/?id=16336479595",["Barbed Wire"]="http://www.roblox.com/asset/?id=7071778296",Smoke="http://www.roblox.com/asset/?id=13832105847"};_G.ScriptData.bulletTracerTexture=textureMap[value] or "http://www.roblox.com/asset/?id=446111271" ;end},"TracerTexture");bulletTracerSection:Slider({Name="Tracer Animation Speed",Default=5,Minimum=0,Maximum=20,Precision=1,Callback=function(value) if  not _G.ScriptData then return;end _G.ScriptData.bulletTracerSpeed=value;end},"TracerAnimationSpeed");bulletTracerSection:Slider({Name="Tracer Width",Default=0.2,Minimum=0.1,Maximum=1,Precision=2,Callback=function(value) if  not _G.ScriptData then return;end _G.ScriptData.bulletTracerWidth=value;end},"TracerWidth");bulletTracerSection:Slider({Name="Tracer Fadeout Speed",Default=0.7,Minimum=0.1,Maximum=1,Precision=2,Callback=function(value) if  not _G.ScriptData then return;end _G.ScriptData.bulletTracerFadeoutPoint=value;end},"TracerFadeoutSpeed");local function hasWeaponEquipped() local camera=workspace.CurrentCamera;if  not camera then return false;end local viewModel=camera:FindFirstChild("ViewModel");if  not viewModel then return false;end local item=viewModel:FindFirstChild("Item");if  not item then return false;end local hasGunPart=false;for _,part in ipairs(item:GetDescendants()) do if (part:IsA("BasePart") and ((part.Name=="AimPart") or (part.Name=="Gunmuzzle") or part.Name:match("Barrel"))) then hasGunPart=true;break;end end return hasGunPart;end local function createBulletTracer() if ( not _G.ScriptData or  not _G.ScriptData.bulletTracerEnabled) then return;end if  not hasWeaponEquipped() then return;end local camera=workspace.CurrentCamera;if  not camera then return;end local startPos=camera.CFrame.Position;local viewModel=camera:FindFirstChild("ViewModel");local muzzle=nil;local aimPart=nil;if viewModel then local weapon=viewModel:FindFirstChild("Item");if weapon then for _,part in pairs(weapon:GetDescendants()) do if part:IsA("BasePart") then if (part.Name=="Gunmuzzle") then muzzle=part;elseif (part.Name=="AimPart") then aimPart=part;end end end end end if muzzle then startPos=muzzle.Position;elseif aimPart then startPos=aimPart.Position;end local direction=camera.CFrame.LookVector;local endPos=startPos + (direction * (_G.ScriptData.bulletTracerMaxDistance or 1300)) ;local ray=Ray.new(startPos,direction * (_G.ScriptData.bulletTracerMaxDistance or 1300) );local ignoreList={Players.LocalPlayer.Character,camera,viewModel};local hit,hitPos=workspace:FindPartOnRayWithIgnoreList(ray,ignoreList);if hit then endPos=hitPos;end local beamPart=Instance.new("Part");beamPart.Name="BulletTracer";beamPart.Size=Vector3.new(_G.ScriptData.bulletTracerWidth or 0.2 ,0.1,0.1);beamPart.Transparency=1;beamPart.CanCollide=false;beamPart.Anchored=true;beamPart.CFrame=CFrame.new(startPos);beamPart.Parent=workspace;local startAttachment=Instance.new("Attachment",beamPart);startAttachment.WorldPosition=startPos;local endAttachment=Instance.new("Attachment",beamPart);endAttachment.WorldPosition=endPos;local beam=Instance.new("Beam");beam.Attachment0=startAttachment;beam.Attachment1=endAttachment;beam.Texture=_G.ScriptData.bulletTracerTexture or "http://www.roblox.com/asset/?id=446111271" ;beam.TextureMode=Enum.TextureMode.Wrap;beam.TextureLength=1;beam.TextureSpeed=_G.ScriptData.bulletTracerSpeed or 5 ;beam.FaceCamera=true;beam.Color=ColorSequence.new(_G.ScriptData.bulletTracerColor or Color3.fromRGB(255,0,0) );beam.Width0=_G.ScriptData.bulletTracerWidth or 0.2 ;beam.Width1=_G.ScriptData.bulletTracerWidth or 0.2 ;beam.LightEmission=1;beam.Parent=beamPart;local tracerLifetime=_G.ScriptData.bulletTracerLifetime or 1 ;local startTime=tick();local beamRef=setmetatable({value=beam},{__mode="v"});local beamPartRef=setmetatable({value=beamPart},{__mode="v"});local maxTracers=10;if  not _G.ScriptData.activeBulletTracers then _G.ScriptData.activeBulletTracers={};end while  #_G.ScriptData.activeBulletTracers>=maxTracers  do local oldestTracer=table.remove(_G.ScriptData.activeBulletTracers,1);if (oldestTracer and oldestTracer.part) then pcall(function() if oldestTracer.part:IsDescendantOf(workspace) then oldestTracer.part:Destroy();end end);end end table.insert(_G.ScriptData.activeBulletTracers,{part=beamPart,beam=beam,startTime=startTime});local bulletAnimation=RunService.RenderStepped:Connect(function() local currentTime=tick() -startTime ;local beam=beamRef and beamRef.value ;local beamPart=beamPartRef and beamPartRef.value ;if ((currentTime>=tracerLifetime) or  not beam or  not beamPart or  not beam.Parent or  not beamPart:IsDescendantOf(workspace)) then if bulletAnimation then pcall(function() bulletAnimation:Disconnect();end);bulletAnimation=nil;end if (beamPart and beamPart:IsDescendantOf(workspace)) then if beam then pcall(function() beam.Enabled=false;end);end pcall(function() beamPart:Destroy();end);end return;end local fadeStartTime=tracerLifetime * (_G.ScriptData.bulletTracerFadeoutPoint or 0.7) ;if (currentTime>fadeStartTime) then local fadeProgress=(currentTime-fadeStartTime)/(tracerLifetime-fadeStartTime) ;local transparencySequence=NumberSequence.new({NumberSequenceKeypoint.new(0,fadeProgress),NumberSequenceKeypoint.new(1,1)});beam.Transparency=transparencySequence;if (fadeProgress>0.9) then local widthScale=1 -((fadeProgress-0.9) * 10) ;beam.Width0=(_G.ScriptData.bulletTracerWidth or 0.2) * widthScale ;beam.Width1=(_G.ScriptData.bulletTracerWidth or 0.2) * widthScale ;end end end);end local function clearAllBulletTracers() if  not _G.ScriptData.activeBulletTracers then _G.ScriptData.activeBulletTracers={};return;end for _,tracer in pairs(_G.ScriptData.activeBulletTracers) do if (tracer and tracer.part) then pcall(function() if tracer.part:IsDescendantOf(workspace) then tracer.part:Destroy();end end);end end _G.ScriptData.activeBulletTracers={};end UserInputService.InputBegan:Connect(function(input,gameProcessed) if gameProcessed then return;end if ((input.UserInputType==Enum.UserInputType.MouseButton1) and _G.ScriptData and _G.ScriptData.bulletTracerEnabled and hasWeaponEquipped()) then task.spawn(createBulletTracer);end end);UserInputService.InputBegan:Connect(function(Input) if (Input.UserInputType==Enum.UserInputType.MouseButton1) then SilentAim.IsAiming=true;end end);UserInputService.InputEnded:Connect(function(Input) if (Input.UserInputType==Enum.UserInputType.MouseButton1) then SilentAim.IsAiming=false;if SilentAim.LockedPlayerGUI then SilentAim.LockedPlayerGUI.Enabled=false;end end end);RunService.RenderStepped:Connect(function() if SilentAim.FOVCircle then SilentAim.FOVCircle.Position=Vector2.new(UserInputService:GetMouseLocation().X,UserInputService:GetMouseLocation().Y);SilentAim.FOVCircle.Radius=SilentAim.CircleRadius;SilentAim.FOVCircle.Filled=SilentAim.CircleFilled;SilentAim.FOVCircle.Color=SilentAim.CircleColor;SilentAim.FOVCircle.Visible=SilentAim.CircleVisible and SilentAim.Enabled ;SilentAim.FOVCircle.Transparency=SilentAim.CircleTransparency;SilentAim.FOVCircle.NumSides=SilentAim.CircleSides;SilentAim.FOVCircle.Thickness=SilentAim.CircleThickness;end if (SilentAim.Enabled and SilentAim.IsAiming) then local closestPlayer=GetClosestPlayer();if closestPlayer then if SilentAim.TrackerEnabled then if  not SilentAim.Tracker2D then SilentAim.Tracker2D=Drawing.new("Line");SilentAim.Tracker2D.Color=SilentAim.CircleColor;SilentAim.Tracker2D.Thickness=1;SilentAim.Tracker2D.Transparency=1;SilentAim.Tracker2D.Visible=true;end local targetPart=closestPlayer.Character and closestPlayer.Character:FindFirstChild(SilentAim.AimPart) ;if targetPart then local camera=Workspace.CurrentCamera;local targetScreenPos=camera:WorldToViewportPoint(targetPart.Position);if (targetScreenPos.Z>0) then local mousePosition=UserInputService:GetMouseLocation();SilentAim.Tracker2D.From=mousePosition;SilentAim.Tracker2D.To=Vector2.new(targetScreenPos.X,targetScreenPos.Y);SilentAim.Tracker2D.Visible=true;else SilentAim.Tracker2D.Visible=false;end end elseif SilentAim.Tracker2D then SilentAim.Tracker2D.Visible=false;end if (SilentAim.ShowTargetName and SilentAim.UsernameLabel) then SilentAim.UsernameLabel.Text="Target: "   .. closestPlayer.Name ;if SilentAim.LockedPlayerGUI then SilentAim.LockedPlayerGUI.Enabled=true;end end else if SilentAim.Tracker2D then SilentAim.Tracker2D.Visible=false;end if SilentAim.LockedPlayerGUI then SilentAim.LockedPlayerGUI.Enabled=false;end end else if SilentAim.Tracker2D then SilentAim.Tracker2D.Visible=false;end if SilentAim.LockedPlayerGUI then SilentAim.LockedPlayerGUI.Enabled=false;end end end);sections.WorldESP:Header({Text="World ESP Settings"}); end
